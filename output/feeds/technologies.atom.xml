<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Wolfblog - Technologies</title><link href="https://wlog.viltstigen.se/" rel="alternate"></link><link href="https://wlog.viltstigen.se/feeds/technologies.atom.xml" rel="self"></link><id>https://wlog.viltstigen.se/</id><updated>2020-05-01T00:00:00+02:00</updated><entry><title>Using udev</title><link href="https://wlog.viltstigen.se/articles/2020/02/22/using-udev/" rel="alternate"></link><published>2020-02-22T00:00:00+01:00</published><updated>2020-02-22T00:00:00+01:00</updated><author><name>Mats Melander</name></author><id>tag:wlog.viltstigen.se,2020-02-22:/articles/2020/02/22/using-udev/</id><summary type="html">&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;udev&lt;/strong&gt;, for &lt;strong&gt;user&lt;/strong&gt; space &lt;strong&gt;/dev&lt;/strong&gt;, is a device manager for Linux. It manages all nodes in the &lt;strong&gt;/dev&lt;/strong&gt; directory as
well as managing events when devices are added or removed.&lt;/p&gt;
&lt;p&gt;For my purposes, I want to control consistent and permanent naming for specific USB devices I add to a â€¦&lt;/p&gt;</summary><content type="html">&lt;h1&gt;Introduction&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;udev&lt;/strong&gt;, for &lt;strong&gt;user&lt;/strong&gt; space &lt;strong&gt;/dev&lt;/strong&gt;, is a device manager for Linux. It manages all nodes in the &lt;strong&gt;/dev&lt;/strong&gt; directory as
well as managing events when devices are added or removed.&lt;/p&gt;
&lt;p&gt;For my purposes, I want to control consistent and permanent naming for specific USB devices I add to a raspberry.&lt;/p&gt;
&lt;h2&gt;udev&lt;/h2&gt;
&lt;p&gt;To have a permanent name in the &lt;strong&gt;/dev&lt;/strong&gt; directory, such as &lt;strong&gt;/dev/ttyEMC&lt;/strong&gt;, rather than &lt;strong&gt;/dev/ttyUSB0&lt;/strong&gt; which may vary 
over time to &lt;strong&gt;/dev/ttyUSB1&lt;/strong&gt;, a &lt;strong&gt;udev rules&lt;/strong&gt; file is available and soft linked to the &lt;code&gt;/etc/udev/rules.d&lt;/code&gt; directory&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="err"&gt;sudo ln -s /home/pi/app/EMC/py/10-EMC.rules /etc/udev/rules.d/10-EMC.rules&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The syntax in the file follows the description at &lt;a href="https://wiki.archlinux.org/index.php/Udev"&gt;https://wiki.archlinux.org/index.php/Udev&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Some handy commands are below to find out the values to the rules parameters.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ udevadm info -a -n /dev/ttyUSB0
$ udevadm info -a -p &lt;span class="k"&gt;$(&lt;/span&gt;udevadm info -q path -n /dev/ttyUSB0&lt;span class="k"&gt;)&lt;/span&gt;
$ sudo udevadm &lt;span class="nb"&gt;test&lt;/span&gt; &lt;span class="k"&gt;$(&lt;/span&gt;udevadm info -q path -n /dev/ttyUSB0&lt;span class="k"&gt;)&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;The last command will test and trigger the new rule, thus creating &lt;code&gt;/dev/ttyEMC&lt;/code&gt;.
See &lt;a href="http://www.reactivated.net/writing_udev_rules.html"&gt;http://www.reactivated.net/writing_udev_rules.html&lt;/a&gt;&lt;/p&gt;
&lt;h1&gt;Additional udev&lt;/h1&gt;
&lt;p&gt;By &lt;a href="http://ubuntuforums.org/showthread.php?t=901891"&gt;http://ubuntuforums.org/showthread.php?t=901891&lt;/a&gt;, see end of thread&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Here is an explanation of how udev and hotplug works:

========================================
Linux specific installation information
by Linus Walleij
covering libusb 0.1.10
========================================

Since libusb is accessing the raw device nodes exported by the kernel in order to identify connected USB busses, functions and such, it needs to find these nodes. During the history of the Linux kernel, the placement and the way of accessing these nodes have changed.

This placement is closely related to hotplugging: i.e. addition and removal of USB functions at runtime.


## Most current solution: use udev


The latest and greatest way of managing hotplugged (and cold-plugged) devices under Linux is called &amp;quot;udev&amp;quot;. This is a development of the older &amp;quot;hotplug&amp;quot; system (see below).

When a device is connected, the kernel will call the program /sbin/udev in order to create a device node in the /dev/ file hirerarchy. It will also remove devices from this hierarchy when they are unplugged.

Traditionally, all devices plugged into a Linux system are expected to have a kernel device driver, or to load one on-the-fly when a new device is connected. Libusb cannot use these device drivers, instead it attempts to access the raw device nodes from user mode, not as a kernel module.

In order for libusb to find the device node, it needs to locate it in the /dev filesystem. The recommended way to let udev create nodes in the /dev filesystem is to add a udev rule like the following into some foo.rules file inside the /etc/udev/rules.d/ directory:

# usbfs-like devices
SUBSYSTEM==&amp;quot;usb_device&amp;quot;, PROGRAM=&amp;quot;/bin/sh -c &amp;#39;K=%k; K=$${K#usbdev}; \ printf bus/usb/%%03i/%%03i $${K%%%%.*} $${K#*.}&amp;#39;&amp;quot;, \ NAME=&amp;quot;%c&amp;quot;

This layout is used by for example the Debian distribution and Fedora Core. This rule creates a device tree identical to the earlier /proc/bus/usb/ tree, but under /dev/bus/usb/ instead. If this device tree exists, libusb will default to use it. It will look like this:

/dev
/bus
   /usb
     /001
       /001
       /002
       /003
    /002
       /001
       /002
       ...

However notice that the permissions on the nodes will be default
permissions: often this means they are only accessible for writing by the root user, whereas non-root users often can access it read-only.

The way of controlling access to a device node differs between systems, but a typical way of complementing udev rules with apropriate permissions is to use PAM (pluggable Authentication Modules), with some sort of configuration under /etc/security/.
(For details on this, see below.)

The use of /dev nodes is also different from the old usbfs solution in that it enables the use of ACL:s (Access Control
Lists) to control access for the USB device nodes. ACL:s could not be used on the /proc filesystem.

A less good alternative that may however be useful for debugging would be to supply the argument MODE=&amp;quot;666&amp;quot; to the above udev rule, or, slightly better, to tag on:

MODE=&amp;quot;660&amp;quot;, GROUP=&amp;quot;foo&amp;quot;

where &amp;quot;foo&amp;quot; is a group of users (e.g. desktop users) that need to access the device in read/write mode.

If libusb cannot find a device hierarchy below /dev/bus/usb/ (as is the case if you are not using udev, or not using it with the above rule), it will fall back on using /proc/bus/usb/ instead.

Additionally, you may want to trigger unique actions for your device at the same time. To do this, create a rules file /etc/udev/rules.d/bar.rules with these lines:

SUBSYSTEM==&amp;quot;usb_device&amp;quot;, ACTION==&amp;quot;add&amp;quot;, SYSFS{idVendor}==&amp;quot;1234&amp;quot;, \ SYSFS{idProduct}==&amp;quot;4321&amp;quot;

At the end of this line you can then tag on any device-specific actions for device 1234/4321, for example:

MODE=&amp;quot;660&amp;quot;, GROUP=&amp;quot;baz&amp;quot;   to set mode and group
RUN=&amp;quot;/usr/local/bin/baz&amp;quot;  to run a script on plug-in
SYMLINK+=&amp;quot;foo&amp;quot;            to create a symlink device node with
                         this name in /dev

You can read more about udev in its own documentation.


Permissions setting with PAM
============================

In addition to the udev rule for creating the device node you will want to change the permissions on the new node, unless it defaults to something that is globally writeable and readable.
Making anything that is plugged in on the USB bus writeable and readable by ALL users is typically a bad idea, because what you most typically want to do is to make it writeable and readable for the console user, i.e. the person that happens to sit behind the screen and keyboard of this very computer.

Managing this by groups is a bit kludgy: it means you set up a group for all console users and add all users that may use the console to this group. This also mean that one user that is a member of this group could be at the console plugging his USB keydrive in, while another user of the same group is logged in remotely, and making a blank copy of the same keydrive at the same time, for example.

Since Linux is used in a strict multi-user context, this has to be solved: give permissions to hotplugged devices only to the console user.

Fedora Core 5 and later does this by using PAM. Whenever something happens in udev, PAM is called to modify the permissions on anything that appeared in the file system in accordance to a set of security rules.

The trick is to create a symbolic link for your new device, then let PAM match the name of this link and change the permissions of it. For example, in /etc/udev/rules.d/foo.rules you write:

SUBSYSTEM==&amp;quot;usb_device&amp;quot;, ACTION==&amp;quot;add&amp;quot;, SYSFS{idVendor}==&amp;quot;1234&amp;quot;, \ SYSFS{idProduct}==&amp;quot;4321&amp;quot;, SYMLINK+=&amp;quot;foo-%k&amp;quot;

This will create a symlink named &amp;quot;/dev/foo-nn&amp;quot; where nn is some unique number for each added device matching this VID and PID.
You then set up PAM console rules in accordance, by adding a /etc/security/console.perms.d/foo.perms containing:

&lt;span class="nt"&gt;&amp;lt;foo&amp;gt;&lt;/span&gt;=/dev/foo*
&lt;span class="nt"&gt;&amp;lt;console&amp;gt;&lt;/span&gt; 0600 &lt;span class="nt"&gt;&amp;lt;foo&amp;gt;&lt;/span&gt; 0600 root

This instructs PAM to give the console user (and root) read and write permissions to the new symlink, whenever it appears. The permission change on the symlink will then fall through to the new device node.


Previous solution: use hotplug
==============================

Before udev another system, generally considered less elegant, known simply as &amp;quot;hotplug&amp;quot; was used. In this case the program /sbin/hotplug would be called whenever devices were connected or removed from the system, and the corresponding configuration lives in /etc/hotplug/.

With hotplug not using udev at the same time, all devices are accessed using the usbfs hierarchy below /proc/bus/usb/. Again, thishttp://mihd.net/y7w20q will be used by libusb, since libusb does not use any device drivers. The hierarchy will look like this:

/proc
/bus
   /usb
     /001
       /001
       /002
       /003
    /002
       /001
       /002
       ...

When USB devices are plugged in, their corresponding device node is created in /proc/bus/usb/ by the kernel, without any external program intervention (as is the case with udev).

However, to correct the permissions on these device nodes, if your device requires anything else than read access, you need to supply a script in /etc/hotplug/usb/ that detects your device and change its permissions, for example this /etc/hotplug/usb/foo.usermap

# Foo device with VID=1234 and PID=4321
bar 0x0003 0x1234 0x4321 0x0000 0x0000 0x00 0x00 0x00 0x00 0x00 0x00 0x00000000

(All this need to be in one line.)

The first string &amp;quot;bar&amp;quot; points out the name of a script placed in /etc/hotplug/usb/bar, with for example the following contents:

#!/bin/bash
if [ &amp;quot;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;ACTION&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;quot; = &amp;quot;add&amp;quot; ] &lt;span class="err"&gt;&amp;amp;&amp;amp;&lt;/span&gt; [ -f &amp;quot;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;DEVICE&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;quot; ] then chgrp baz &amp;quot;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;DEVICE&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;quot;
chmod 660 &amp;quot;&lt;span class="cp"&gt;${&lt;/span&gt;&lt;span class="n"&gt;DEVICE&lt;/span&gt;&lt;span class="cp"&gt;}&lt;/span&gt;&amp;quot;
fi

to let users in the group &amp;quot;baz&amp;quot; access the device for reading and writing. There exist solutions similar to the PAM permission change for hotplug, but they are all kind of hackish.

You can read more about hotplug and its usermaps in the hotplug documentation.
&lt;/pre&gt;&lt;/div&gt;</content><category term="Technologies"></category><category term="Linux"></category></entry><entry><title>Pelican applause button</title><link href="https://wlog.viltstigen.se/articles/2020/02/12/pelican-applause-button/" rel="alternate"></link><published>2020-02-12T00:00:00+01:00</published><updated>2020-02-12T00:00:00+01:00</updated><author><name>Mats Melander</name></author><id>tag:wlog.viltstigen.se,2020-02-12:/articles/2020/02/12/pelican-applause-button/</id><summary type="html">&lt;p&gt;For blog entries, the &lt;a class="reference external" href="https://applause-button.com/"&gt;applause button&lt;/a&gt; have been enabled in &lt;strong&gt;pelicanconf.py&lt;/strong&gt; with
this row&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;APPLAUSE_BUTTON&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; True
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The number of claps is made persistent  by a cloud-based sever with a REST API, see the link above.
I don't expect a lot (read any) claps on the blog posts, but I â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;For blog entries, the &lt;a class="reference external" href="https://applause-button.com/"&gt;applause button&lt;/a&gt; have been enabled in &lt;strong&gt;pelicanconf.py&lt;/strong&gt; with
this row&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;APPLAUSE_BUTTON&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; True
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The number of claps is made persistent  by a cloud-based sever with a REST API, see the link above.
I don't expect a lot (read any) claps on the blog posts, but I still wanted to create a simple page with a table that
list blog post name and the number of claps. To do this the &lt;strong&gt;get-multiple&lt;/strong&gt; method is used in a simple Python script.&lt;/p&gt;
&lt;p&gt;The script walks a directory structure using &lt;strong&gt;os.walk&lt;/strong&gt;-function returning 3 parameters. If the second (&lt;strong&gt;dirs&lt;/strong&gt;)
parameter is empty we are in a &amp;quot;leaf&amp;quot;-directory and I take the value of the first parameter (&lt;strong&gt;root&lt;/strong&gt;) to construct
a JSON array used as an argument to &lt;strong&gt;get-multiple&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;get-multiple&lt;/strong&gt; has a restriction that maximum 100 URLs can be added to the JSON array. Hence, I need to cater for this.
Once I have this array, I use the &lt;strong&gt;requests&lt;/strong&gt; Python library to POST the array to
&lt;strong&gt;https://api.applause-button.com/get-multiple&lt;/strong&gt;, then I parse the result (if I get a status code that indicate success).&lt;/p&gt;
&lt;p&gt;At the end, I use &lt;a class="reference external" href="https://flask.palletsprojects.com/en/1.1.x/"&gt;Flask&lt;/a&gt; and a template to generate an HTML page
with the desired result. The &lt;strong&gt;Flask&lt;/strong&gt; application is using &lt;a class="reference external" href="https://gunicorn.org/"&gt;gunicorn&lt;/a&gt; listening on port 8098
at my local raspberry (&lt;strong&gt;rpi2&lt;/strong&gt;), hence UFW needs to be configured to have the port open.&lt;/p&gt;
&lt;p&gt;More details and source code &lt;a class="reference external" href="https://github.com/Wolfrax/claps"&gt;here&lt;/a&gt;&lt;/p&gt;
</content><category term="Technologies"></category><category term="Blog"></category><category term="Pelican"></category></entry><entry><title>Piwheels</title><link href="https://wlog.viltstigen.se/articles/2020/02/02/piwheels/" rel="alternate"></link><published>2020-02-02T00:00:00+01:00</published><updated>2020-02-02T00:00:00+01:00</updated><author><name>Mats Melander</name></author><id>tag:wlog.viltstigen.se,2020-02-02:/articles/2020/02/02/piwheels/</id><summary type="html">&lt;p&gt;A note on piwheels.&lt;/p&gt;
&lt;p&gt;The PyPi (Python Package Index) is the package repository for Python modules. &lt;strong&gt;$ pip install&lt;/strong&gt; scouts this repository
when installing modules. Some of the modules have been implemented in C, and thus require compilation for the specific
target installation. This takes time (and might fail).&lt;/p&gt;
&lt;p&gt;The general â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;A note on piwheels.&lt;/p&gt;
&lt;p&gt;The PyPi (Python Package Index) is the package repository for Python modules. &lt;strong&gt;$ pip install&lt;/strong&gt; scouts this repository
when installing modules. Some of the modules have been implemented in C, and thus require compilation for the specific
target installation. This takes time (and might fail).&lt;/p&gt;
&lt;p&gt;The general solution to this is Python wheels, which includes pre-build binaries for Windows, macOS and Linux
(32/64 bits). However, Arm is not included and Raspberry is build on Arm. Enter piwheels.&lt;/p&gt;
&lt;p&gt;This repository provides Arm platform wheels, ie pre-compiled binary Python packages. Suitable for Raspberry Pi.&lt;/p&gt;
&lt;p&gt;For Raspberry Pi running Raspbian Stretch, this is by default enabled for Pip. For older versions (e.g. Jessie) this
should be included in &lt;strong&gt;/etc/pip.conf&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;global&lt;span class="o"&gt;]&lt;/span&gt;
extra-index-url&lt;span class="o"&gt;=&lt;/span&gt;https://www.piwheels.org/simple
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For Raspbian Jessie: Upgrade pip to &amp;gt;=9.0.1 using &lt;strong&gt;$ sudo pip3 install pip --upgrade&lt;/strong&gt;.&lt;/p&gt;
</content><category term="Technologies"></category><category term="Python"></category></entry><entry><title>Python virtual environment</title><link href="https://wlog.viltstigen.se/articles/2020/02/02/python-virtual-environment/" rel="alternate"></link><published>2020-02-02T00:00:00+01:00</published><updated>2020-02-02T00:00:00+01:00</updated><author><name>Mats Melander</name></author><id>tag:wlog.viltstigen.se,2020-02-02:/articles/2020/02/02/python-virtual-environment/</id><summary type="html">&lt;p&gt;I use Python &lt;strong&gt;virtualenv&lt;/strong&gt;, &lt;strong&gt;virtualenvwrapper&lt;/strong&gt; and &lt;strong&gt;autoenv&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Installation&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get update
$ sudo apt-get install python-setuptools
$ sudo easy_install pip
$ sudo pip install virtualenv
$ sudo pip install virtualenvwrapper
$ sudo pip install autoenv
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;My virtualenv root is at &lt;strong&gt;~/.virtualenvs&lt;/strong&gt;, so update &lt;strong&gt;~/.bashrc&lt;/strong&gt; accordingly&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;WORKON_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;/.virtualenvs
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PROJECT_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;/app
&lt;span class="nb"&gt;source&lt;/span&gt; /usr â€¦&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;I use Python &lt;strong&gt;virtualenv&lt;/strong&gt;, &lt;strong&gt;virtualenvwrapper&lt;/strong&gt; and &lt;strong&gt;autoenv&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Installation&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get update
$ sudo apt-get install python-setuptools
$ sudo easy_install pip
$ sudo pip install virtualenv
$ sudo pip install virtualenvwrapper
$ sudo pip install autoenv
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;My virtualenv root is at &lt;strong&gt;~/.virtualenvs&lt;/strong&gt;, so update &lt;strong&gt;~/.bashrc&lt;/strong&gt; accordingly&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;WORKON_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;/.virtualenvs
&lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;PROJECT_HOME&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="nv"&gt;$HOME&lt;/span&gt;/app
&lt;span class="nb"&gt;source&lt;/span&gt; /usr/local/bin/virtualenvwrapper.sh
&lt;span class="nb"&gt;source&lt;/span&gt; /usr/local/bin/activate.sh
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then create an &lt;strong&gt;.env&lt;/strong&gt; file in the folder were the project root is located (for example &amp;quot;Traffic&amp;quot; is used below) with
this content &lt;strong&gt;&amp;quot;workon Traffic&amp;quot;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Do &lt;strong&gt;&amp;quot;$ mkvirtualenv Traffic&amp;quot;&lt;/strong&gt;. When changing directory (cd) into the folder were the &lt;strong&gt;.env&lt;/strong&gt;-file is located
&lt;strong&gt;autoenv&lt;/strong&gt; will automatically trigger the virtualenv.&lt;/p&gt;
&lt;p&gt;To use Python3, use this command &lt;strong&gt;&amp;quot;$ mkvirtualenv --python=/usr/bin/python3 Traffic&amp;quot;&lt;/strong&gt;. To find the path to Python3,
use &lt;strong&gt;&amp;quot;$ which python3&amp;quot;&amp;quot;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;If autoenv is not used, activate the virtualenv by &lt;strong&gt;&amp;quot;$ workon Traffic&amp;quot;&lt;/strong&gt;, deactivate by &lt;strong&gt;&amp;quot;$ deactivate&amp;quot;&lt;/strong&gt;.
After activating the virtualenv, install packages by (Traffic) &lt;strong&gt;&amp;quot;$ pip install requests&amp;quot;&lt;/strong&gt;
(for Python3 do &lt;strong&gt;&amp;quot;(Traffic) $ pip3 install requests&amp;quot;&lt;/strong&gt;).&lt;/p&gt;
&lt;p&gt;Refer to documentation &lt;a class="reference external" href="https://virtualenvwrapper.readthedocs.io/en/latest/command_ref.html"&gt;here&lt;/a&gt;.&lt;/p&gt;
</content><category term="Technologies"></category><category term="Python"></category></entry><entry><title>Lenovo Touchpad problem</title><link href="https://wlog.viltstigen.se/articles/2020/02/01/lenovo-touchpad-problem/" rel="alternate"></link><published>2020-02-01T00:00:00+01:00</published><updated>2020-02-01T00:00:00+01:00</updated><author><name>Mats Melander</name></author><id>tag:wlog.viltstigen.se,2020-02-01:/articles/2020/02/01/lenovo-touchpad-problem/</id><summary type="html">&lt;p&gt;Using a Lenovo Thinkpad T440 with Linux Mint (4.15.0-70-generic) I have a problem with 2-finger scrolling using the
touchpad. It stopped working after suspend/resume. This is a known problem affecting other models also.&lt;/p&gt;
&lt;p&gt;Manually this can be fixes as so&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo modprobe -r psmouse &lt;span class="c1"&gt;# Unload the psmouse â€¦&lt;/span&gt;&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Using a Lenovo Thinkpad T440 with Linux Mint (4.15.0-70-generic) I have a problem with 2-finger scrolling using the
touchpad. It stopped working after suspend/resume. This is a known problem affecting other models also.&lt;/p&gt;
&lt;p&gt;Manually this can be fixes as so&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo modprobe -r psmouse &lt;span class="c1"&gt;# Unload the psmouse driver&lt;/span&gt;
$ sudo modprobe psmouse &lt;span class="c1"&gt;# then reload it again&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To make this permanent update the with a kernel parameter. Edit &lt;strong&gt;/etc/default/grub&lt;/strong&gt;, change the following line, from&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;GRUB_CMDLINE_LINUX_DEFAULT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;quiet splash&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;to&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;GRUB_CMDLINE_LINUX_DEFAULT&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;quiet splash psmouse.synaptics_intertouch=0&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then regenerate the &lt;strong&gt;grub.cfg&lt;/strong&gt; file by&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo grub-mkconfig -o /boot/grub/grub.cfg
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Problem should be fixed.&lt;/p&gt;
&lt;p&gt;You can try the kernel parameter before editing the &lt;strong&gt;grub&lt;/strong&gt; file by entering the &lt;strong&gt;grub&lt;/strong&gt; bootloader before booting the
kernel. Restart the computer and press repeatedly &lt;strong&gt;esc&lt;/strong&gt;-key during boot-up. Edit the line starting with &lt;strong&gt;linux&lt;/strong&gt; and
add &lt;strong&gt;psmouse.synaptics_intertouch=0&lt;/strong&gt; at the end. Press &lt;strong&gt;ctrl-x&lt;/strong&gt; to load the kernel with this parameter setting.
Of course, next time there is a restart the parameter setting is not there. Hence, to make it permanent edit the &lt;strong&gt;grub&lt;/strong&gt;
-file as above.&lt;/p&gt;
</content><category term="Technologies"></category><category term="Linux"></category><category term="Mint"></category><category term="Lenovo"></category></entry><entry><title>Map of Sweden #4</title><link href="https://wlog.viltstigen.se/articles/2020/02/01/map-of-sweden-4/" rel="alternate"></link><published>2020-02-01T00:00:00+01:00</published><updated>2020-02-01T00:00:00+01:00</updated><author><name>Mats Melander</name></author><id>tag:wlog.viltstigen.se,2020-02-01:/articles/2020/02/01/map-of-sweden-4/</id><summary type="html">&lt;div class="section" id="introduction"&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;By previous posts, I have shown how to create a map of Sweden, get meteorological observations from SMHI and visualize
this on a map. What is lacking, is some decorations and interactions with the map.&lt;/p&gt;
&lt;p&gt;In this post I'll explain how to add a legend, show tool tip when â€¦&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="introduction"&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;By previous posts, I have shown how to create a map of Sweden, get meteorological observations from SMHI and visualize
this on a map. What is lacking, is some decorations and interactions with the map.&lt;/p&gt;
&lt;p&gt;In this post I'll explain how to add a legend, show tool tip when hoovering the mouse above the map and some other
miscellaneous tasks.&lt;/p&gt;
&lt;div class="section" id="adding-a-legend"&gt;
&lt;h3&gt;Adding a legend&lt;/h3&gt;
&lt;p&gt;This is straightforward using a D3 library: &lt;strong&gt;d3-legend.js&lt;/strong&gt;. Use this by downloading in the html file such as:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://cdnjs.cloudflare.com/ajax/libs/d3-legend/1.1.0/d3-legend.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then I use the library like this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;legendLinear&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;legend&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;color&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;shapeWidth&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;15&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;cells&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;orient&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;vertical&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;call&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;legendLinear&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Above, I'm using an array variable colors (see &lt;a class="reference external" href="https://wlog.viltstigen.se/articles/2020/01/28/map-of-sweden-2/"&gt;part 3&lt;/a&gt; or below) to determine
how many legend cells that should be used. The orientation is vertical.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="map-with-legend"&gt;
&lt;h3&gt;Map with legend&lt;/h3&gt;
&lt;p&gt;The next thing I want to add is &lt;strong&gt;tooltip&lt;/strong&gt; that pops up when I move the mouse over the map. It should show the name of
the station and the value of the observation. To do this I will be using &lt;a class="reference external" href="https://getbootstrap.com/"&gt;bootstrap&lt;/a&gt;.
Bootstrap is used to build responsive web-pages, meaning that the web-page renders well on a variety of devices,
ie screen sizes. Included is support for tooltips. The javascript code looks like so&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;showTooltip&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;element&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;selectAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;.dot&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;point&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;nr&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;popover&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="nx"&gt;placement&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;auto top&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;container&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;#chart&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;trigger&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;manual&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;html&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;content&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;span style=&amp;#39;font-size: 12px; text-align: center;&amp;#39;&amp;gt;&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
                &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;point&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;station&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;
                &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;point&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;/span&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;element&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;popover&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;show&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;removeTooltip&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;.popover&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;each&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="k"&gt;this&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;remove&lt;/span&gt;&lt;span class="p"&gt;();&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="nx"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;selectAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;voronoi&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;voronoi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;enter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;path&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;clip-path&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;url(#swe-clip)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;fill&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;point&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;M&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;L&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Z&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;style&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;stroke: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;point&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;mouseover&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;showTooltip&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;on&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;mouseout&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;removeTooltip&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;selectAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;dots&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;enter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;circle&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;class&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;dot&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;nr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;style&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;fill&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;none&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cx&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cy&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;
        &lt;span class="p"&gt;})&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;r&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In the &lt;strong&gt;&amp;lt;head&amp;gt;&lt;/strong&gt; section, include this to have access to bootstrap.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;link&lt;/span&gt; &lt;span class="na"&gt;rel&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/css/bootstrap.min.css&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://maxcdn.bootstrapcdn.com/bootstrap/3.3.2/js/bootstrap.min.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Some comments on the javascript for tooltip&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p class="first"&gt;The voronoi diagram (or mapping of Sweden) is extended with two events &lt;strong&gt;mouseover&lt;/strong&gt; and &lt;strong&gt;mouseout&lt;/strong&gt; where
&lt;strong&gt;showTooltip&lt;/strong&gt; and &lt;strong&gt;RemoveTooltip&lt;/strong&gt; are called respectively.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;strong&gt;showTooltip&lt;/strong&gt; first selects the element with the unique id &lt;strong&gt;&amp;quot;dotN&amp;quot;&lt;/strong&gt; (N = 1, 2, 3, ...)
then calls the &lt;strong&gt;popover&lt;/strong&gt; function with relevant parameter values.  The &lt;strong&gt;content&lt;/strong&gt; parameter generates HTML code
with the actual values for the station name and observation, through the &amp;quot;d&amp;quot; parameter.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;&lt;strong&gt;removeTooltip&lt;/strong&gt; removes the tooltip (obviously...) when the mouse is moved outside focus.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p class="first"&gt;The trick here is the unique &lt;strong&gt;&amp;quot;dotN&amp;quot;&lt;/strong&gt;. This is generated in the last part of the javascript code. To the &amp;quot;class&amp;quot;
attribute I generate the string &amp;quot;dot&amp;quot; and the add a number. Remember the javascript code for &amp;quot;get_values&amp;quot; as shown in
&lt;a class="reference external" href="https://wlog.viltstigen.se/articles/2020/01/31/map-of-sweden-3/"&gt;part 3&lt;/a&gt; of these blog postings? It is shown below. In that code I generate a &amp;quot;nr&amp;quot; field in the resulting element.
Now I am using this to create the unique &lt;strong&gt;&amp;quot;dotN&amp;quot;&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Ok, why?&lt;/p&gt;
&lt;p&gt;Well, we need it in the &lt;strong&gt;showToolTip&lt;/strong&gt; and it will position the tooltip popup at the right place in the map.
In the code, I actually draw a small circle at the [x, y] coordinates, which is the projected longitude/latitude
values of the station making the observation. However, I draw the circle with the same background color as the
voronoi cell so they are invisible. To show them as a back dot on the map, simply change return value of the fill
style-attribute to &amp;quot;black&amp;quot;. (The actual reason for drawing a circle for the metereological station invisble, is that
I later on want to dynamically - at user interaction - turn them on/off).
Here is the &lt;strong&gt;get_values&lt;/strong&gt; code as stated in &lt;a class="reference external" href="https://wlog.viltstigen.se/articles/2020/01/31/map-of-sweden-3/"&gt;part 3&lt;/a&gt;.&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;get_values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;lst&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;max_val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;min_val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;weather&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;stn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;stn&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;weather&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;stn&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;weather&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;stn&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;active&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;// Transform coordinates according to the selected projection\&lt;/span&gt;
            &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;xy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;projection&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;weather&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;stn&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;lon&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;weather&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;stn&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;lat&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
            &lt;span class="nx"&gt;lst&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
                &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;xy&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;xy&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                &lt;span class="nx"&gt;station&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;weather&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;stn&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;station&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;weather&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;stn&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nx"&gt;nr&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;stn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="p"&gt;});&lt;/span&gt;
            &lt;span class="nx"&gt;max_val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;max_val&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;weather&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;stn&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;min_val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;min_val&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;weather&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;stn&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;lst&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;max_val&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;min_val&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;weather&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The complete listing is &lt;a class="reference external" href="https://github.com/Wolfrax/clover/blob/master/index.html"&gt;here&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="Technologies"></category><category term="D3"></category><category term="Maps"></category></entry><entry><title>Map of Sweden #3</title><link href="https://wlog.viltstigen.se/articles/2020/01/31/map-of-sweden-3/" rel="alternate"></link><published>2020-01-31T00:00:00+01:00</published><updated>2020-02-01T00:00:00+01:00</updated><author><name>Mats Melander</name></author><id>tag:wlog.viltstigen.se,2020-01-31:/articles/2020/01/31/map-of-sweden-3/</id><summary type="html">&lt;div class="section" id="introduction"&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Now its time to make use of the data collected from SMHI and visualize them on top of the map of Sweden.
As been shown in &lt;a class="reference external" href="https://wlog.viltstigen.se/articles/2020/01/28/map-of-sweden-2/"&gt;Map of Sweden #2&lt;/a&gt;, an HTTP client can retrieve data from a
server, this is done through &lt;a class="reference external" href="https://jquery.com/"&gt;jQuery&lt;/a&gt;. A simple snippet like this â€¦&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="introduction"&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Now its time to make use of the data collected from SMHI and visualize them on top of the map of Sweden.
As been shown in &lt;a class="reference external" href="https://wlog.viltstigen.se/articles/2020/01/28/map-of-sweden-2/"&gt;Map of Sweden #2&lt;/a&gt;, an HTTP client can retrieve data from a
server, this is done through &lt;a class="reference external" href="https://jquery.com/"&gt;jQuery&lt;/a&gt;. A simple snippet like this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;get_clover_data&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;$&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;ajax&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
        &lt;span class="nx"&gt;url&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/clover_data&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;method&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;GET&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;dataType&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;json&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
        &lt;span class="nx"&gt;cache&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;false&lt;/span&gt;
    &lt;span class="p"&gt;}).&lt;/span&gt;&lt;span class="nx"&gt;done&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;series&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="nx"&gt;weather&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;series&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the ajax-call is successful, the JSON formatted data is copied into the variable weather. All observations are
included. To access, for example, the average temperature for the first station do &lt;strong&gt;weather['avg_temp'][0].val&lt;/strong&gt;.
As I only use one observation at a time for visualization, I extract the observation I want for visualization.
This is done like so&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;get_values&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;lst&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[];&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;max_val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;min_val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;weather&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="k"&gt;for&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;stn&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;stn&lt;/span&gt; &lt;span class="o"&gt;&amp;lt;&lt;/span&gt; &lt;span class="nx"&gt;weather&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;length&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="nx"&gt;stn&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;weather&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;stn&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;active&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="c1"&gt;// Transform coordinates according to the selected projection&lt;/span&gt;
            &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;xy&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;projection&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;weather&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;stn&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;lon&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;weather&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;stn&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;lat&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
            &lt;span class="nx"&gt;lst&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;push&lt;/span&gt;&lt;span class="p"&gt;({&lt;/span&gt;
                &lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;xy&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                &lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;xy&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;],&lt;/span&gt;
                &lt;span class="nx"&gt;station&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;weather&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;stn&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;station&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;weather&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;stn&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="nx"&gt;nr&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;stn&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;toString&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="p"&gt;});&lt;/span&gt;
            &lt;span class="nx"&gt;max_val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;max_val&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;weather&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;stn&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
            &lt;span class="nx"&gt;min_val&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;Math&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;min_val&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;weather&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;][&lt;/span&gt;&lt;span class="nx"&gt;stn&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;key&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;lst&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;max_val&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;min_val&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="nx"&gt;weather&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;date&lt;/span&gt;&lt;span class="p"&gt;};&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Some comments&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Observations are accessed with the &amp;quot;key&amp;quot; (e.g. 'avg_temp') first, then a station (as a number) and finally the value as
in &lt;strong&gt;weather[key][stn].lon&lt;/strong&gt;.&lt;/li&gt;
&lt;li&gt;There is a call to projection that transform the longitude and latitude values for the station. The projection were
discussed in &lt;a class="reference external" href="https://wlog.viltstigen.se/articles/2020/01/26/map-of-sweden-1/"&gt;Map of Sweden #1&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now we got a JSON-list with fields for the selected key after calling &lt;strong&gt;get_values&lt;/strong&gt;. It is time to visualize these on
top of the map of Sweden. We do this by calling the javascript function &lt;strong&gt;render_map&lt;/strong&gt;, below. But, first we got to fix
the file &amp;quot;swe.json&amp;quot;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ curl http://naciscdn.org/naturalearth/10m/cultural/ne_10m_admin_0_countries.zip -O
$ unzip ne_10m_admin_0_countries.zip
$ ogr2ogr -f GeoJSON -where &lt;span class="s2"&gt;&amp;quot;ADM0_A3 = &amp;#39;SWE&amp;#39;&amp;quot;&lt;/span&gt; subunits.json ne_10m_admin_0_countries.shp
$ topojson -o swe.json --properties -- subunits.json
&lt;/pre&gt;&lt;/div&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;svg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;body&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;svg&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;width&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;height&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;projection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mercator&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;center&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mf"&gt;14.6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;62.1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;translate&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;projection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;projection&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="nx"&gt;render_map&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;colors&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;quantize&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;domain&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;min&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;max&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;range&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#9e0142&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#d53e4f&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#f46d43&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#fdae61&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#fee08b&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                &lt;span class="s1"&gt;&amp;#39;#e6f598&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#abdda4&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#66c2a5&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#3288bd&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;#5e4fa2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;].&lt;/span&gt;&lt;span class="nx"&gt;reverse&lt;/span&gt;&lt;span class="p"&gt;());&lt;/span&gt;

    &lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;swe.json&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;error&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;se&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;voronoi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geom&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;voronoi&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;x&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="p"&gt;})&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;y&lt;/span&gt;
            &lt;span class="p"&gt;});&lt;/span&gt;

        &lt;span class="nx"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;selectAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;clip&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;topojson&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;feature&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;se&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;se&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;objects&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subunits&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;features&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;enter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;defs&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;clipPath&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;id&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;swe-clip&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;path&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

        &lt;span class="nx"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;selectAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;voronoi&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;voronoi&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;values&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
            &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;enter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;path&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;clip-path&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;url(#swe-clip)&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;fill&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nx"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;point&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;})&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;M&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;join&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;L&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Z&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
                &lt;span class="p"&gt;})&lt;/span&gt;
                &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;style&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
                    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;stroke: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nx"&gt;colors&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;point&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;val&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
                &lt;span class="p"&gt;});&lt;/span&gt;
    &lt;span class="p"&gt;});&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Above assumes that the variable weather is available. I do this by include a file through
&lt;strong&gt;&amp;lt;script src=&amp;quot;weather.js&amp;quot;&amp;gt;&amp;lt;/script&amp;gt;&lt;/strong&gt; in the &lt;strong&gt;&amp;lt;head&amp;gt;&lt;/strong&gt;-section to keep it simple (in my real implementation the data
is accessed through a jQuery ajax-request, see &lt;a class="reference external" href="https://wlog.viltstigen.se/articles/2020/01/28/map-of-sweden-2/"&gt;Map of Sweden #2&lt;/a&gt;), see the
implementation of this blog posting at &lt;a class="reference external" href="https://github.com/Wolfrax/clover/tree/master/blog/Part%203"&gt;Github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Running the javasript should produce this.&lt;/p&gt;
&lt;div class="align-center figure"&gt;
&lt;img alt="alternate text" src="https://wlog.viltstigen.se/img/Map_of_Sweden_part_3.png" style="width: 249px; height: 538px;" /&gt;
&lt;p class="caption"&gt;Average temp&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;How does this work?&lt;/p&gt;
&lt;p&gt;The contants and variables before &lt;strong&gt;render_map&lt;/strong&gt; was explained in &lt;a class="reference external" href="https://wlog.viltstigen.se/articles/2020/01/26/map-of-sweden-1/"&gt;Map of Sweden #1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;In &lt;strong&gt;render_map&lt;/strong&gt; a &lt;strong&gt;color&lt;/strong&gt; D3-variable is defined; the domain of the variable is the &lt;strong&gt;min&lt;/strong&gt; and &lt;strong&gt;max&lt;/strong&gt; values of
the observation to render, the range is a color scale generated through
&lt;a class="reference external" href="http://colorbrewer2.org/#type=sequential&amp;amp;scheme=BuGn&amp;amp;n=3"&gt;colorbrewer&lt;/a&gt;.
In practice this means that a value of the observation is mapped to a specific color, in this case there are 10 colors
going from blue to red. (Colorbrewer generates a scale going from red to blue, but I want the lowest value to mapped
to blue and the highest to red, thus I reverse the array).&lt;/p&gt;
&lt;p&gt;Using the color for a specific value, I want to use an area centered around the station where the measurement have
been made. For this purpose I use a &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Voronoi_diagram"&gt;voronoi diagram&lt;/a&gt;. In simple
terms, this type of diagram partition the map into areas where all pixels are closest to the station point
(closest Euclidian distance). D3 makes this possible by the &lt;strong&gt;voronoi-function&lt;/strong&gt;. I do this by declaring the
voronoi-variable. However, to have this working, I need to clip all voronoi areas to stay within the map of Sweden.
This is made by defining a &lt;strong&gt;&amp;quot;clipPath&amp;quot;&lt;/strong&gt; with id &lt;strong&gt;swe-clip&lt;/strong&gt;, which is referenced later on using &lt;strong&gt;url(#swe-clip)&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;In summary, the logic of the render_map function is&lt;/p&gt;
&lt;ol class="arabic simple"&gt;
&lt;li&gt;Define the color mapping in the variable color&lt;/li&gt;
&lt;li&gt;Read the file swe.json (which contain, in topoJSON format, the geometry for Sweden in the highest adminstrative level from Natural Earth)&lt;/li&gt;
&lt;li&gt;Define the voronoi variable&lt;/li&gt;
&lt;li&gt;Generate a SVG clipPath with id swe-clip&lt;/li&gt;
&lt;li&gt;Draw the map of Sweden using a voronoi diagram, filling each area with a color that is mapped through the variable color.
Each area is clipped according to the swe-clip definition. The last style-attribute, removes the visible borders of
the voronoi areas by drawning them in the same color as the area was filled with.&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</content><category term="Technologies"></category><category term="D3"></category><category term="Maps"></category></entry><entry><title>Map of Sweden #2</title><link href="https://wlog.viltstigen.se/articles/2020/01/28/map-of-sweden-2/" rel="alternate"></link><published>2020-01-28T00:00:00+01:00</published><updated>2020-01-28T00:00:00+01:00</updated><author><name>Mats Melander</name></author><id>tag:wlog.viltstigen.se,2020-01-28:/articles/2020/01/28/map-of-sweden-2/</id><summary type="html">&lt;div class="section" id="introduction"&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;In a previous post, I showed how to make a map of Sweden as a SVG object, derived from geometrical information,
using D3. Here, I will focus of collecting meteorological observations from &lt;a class="reference external" href="https://opendata.smhi.se/apidocs/metobs/index.html"&gt;SMHI&lt;/a&gt;
and create a simple HTTP-server that will respond with the data when requested. This will be â€¦&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="introduction"&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;In a previous post, I showed how to make a map of Sweden as a SVG object, derived from geometrical information,
using D3. Here, I will focus of collecting meteorological observations from &lt;a class="reference external" href="https://opendata.smhi.se/apidocs/metobs/index.html"&gt;SMHI&lt;/a&gt;
and create a simple HTTP-server that will respond with the data when requested. This will be made through 2 simple
python scripts.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="the-scripts"&gt;
&lt;h2&gt;The scripts&lt;/h2&gt;
&lt;p&gt;There are two python 3.x scripts doing the work&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;collector.py:&lt;/strong&gt; This script will traverse the SMHI REST API and store the data in JSON format in a file.
I have automated this script running once per day through crontab.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;emitter.py:&lt;/strong&gt; This script is implemented as a HTTP-server, running as a background daemon. When it receives a
GET-request, it will read the JSON file, created by collector.py and respond to the client.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I am using tools to have the workings of &lt;strong&gt;emitter.py&lt;/strong&gt;; &lt;a class="reference external" href="http://flask.pocoo.org/"&gt;Flask&lt;/a&gt;,
&lt;a class="reference external" href="https://gunicorn.org/"&gt;Gunicorn&lt;/a&gt; and &lt;a class="reference external" href="http://supervisord.org/introduction.html"&gt;Supervisor&lt;/a&gt;.
They will be described below, but first I will start with installing them into a Python virtual environment.
In &lt;strong&gt;collector.py&lt;/strong&gt; I will use requests library to access the SMHI observations, this library needs to be installed as well.&lt;/p&gt;
&lt;div class="section" id="installation"&gt;
&lt;h3&gt;Installation&lt;/h3&gt;
&lt;p&gt;Assuming a &amp;quot;clean&amp;quot; raspberry pi in target (in my case named &lt;strong&gt;rpi2&lt;/strong&gt;) do as below.
This will install &lt;strong&gt;pip&lt;/strong&gt;, &lt;strong&gt;virtualenv&lt;/strong&gt;, &lt;strong&gt;virtualenwrapper&lt;/strong&gt;, &lt;strong&gt;autoenv&lt;/strong&gt; and &lt;strong&gt;supervisor&lt;/strong&gt; systemwide.
Following that I create the virtual environment clover using python3. &lt;strong&gt;requests&lt;/strong&gt;, &lt;strong&gt;flask&lt;/strong&gt; and &lt;strong&gt;gunicorn&lt;/strong&gt; are
installed into the virtual environment, thus not system wide.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get update
$ sudo apt-get install python-setuptools
$ sudo easy_install pip
$ sudo pip install virtualenv
$ sudo pip install virtualenvwrapper
$ sudo pip install autoenv
$ sudo apt-get install supervisor
$ mkvirtualenv --python&lt;span class="o"&gt;=&lt;/span&gt;/usr/bin/python3 clover
$ workon clover
&lt;span class="o"&gt;(&lt;/span&gt;clover&lt;span class="o"&gt;)&lt;/span&gt; $ pip3 install requests
&lt;span class="o"&gt;(&lt;/span&gt;clover&lt;span class="o"&gt;)&lt;/span&gt; $ pip3 install flask
&lt;span class="o"&gt;(&lt;/span&gt;clover&lt;span class="o"&gt;)&lt;/span&gt; $ pip3 install gunicorn
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now everything should be installed.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="smhi-meteorological-observations"&gt;
&lt;h2&gt;SMHI meteorological observations&lt;/h2&gt;
&lt;p&gt;Time to find out how we access the meteorological observations.
This is how it is described by SMHI&lt;/p&gt;
&lt;blockquote&gt;
The service is constructed as a REST API for easy access. The Entry point is located at
&lt;a class="reference external" href="https://opendata-download-metobs.smhi.se/api"&gt;https://opendata-download-metobs.smhi.se/api&lt;/a&gt;. From here a client can traverse down by following links through
the levels until a specific data resource is available.&lt;/blockquote&gt;
&lt;p&gt;The &lt;strong&gt;collector.py&lt;/strong&gt; script use &lt;a class="reference external" href="http://opendata-download-metobs.smhi.se/api.json"&gt;http://opendata-download-metobs.smhi.se/api.json&lt;/a&gt; as the starting point to access
observations. SMHI expose data in 3 different formats: 1) JSON 2) XML 3) CSV, I will only care about JSON.&lt;/p&gt;
&lt;p&gt;There is a multitude of observations that can be accessed, for my purpose a subset of these will do:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Temp:&lt;/strong&gt; Momentary value of air temperature, updated once per hour&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Average temp:&lt;/strong&gt; Average air temperature for 1 day (24 h), at 00:00&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Rain:&lt;/strong&gt; Sum once per day, at 06:00&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Relative humidity:&lt;/strong&gt; Momentary value, once per hour&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Snow depth:&lt;/strong&gt; Momentary value, once per hour&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Air pressure:&lt;/strong&gt; At sea level, momentary value, once per hour&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Lowest cloud layer:&lt;/strong&gt; Momentary value, once per hour&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I also collect &lt;strong&gt;Wind Direction&lt;/strong&gt; and &lt;strong&gt;Wind Speed&lt;/strong&gt; (average values over 10 min, once per hour) but these values are not used.&lt;/p&gt;
&lt;p&gt;A Jupyter notebook is available &lt;a class="reference external" href="https://github.com/Wolfrax/clover/tree/master/blog/Part%202"&gt;here&lt;/a&gt; to show a
simple interaction.&lt;/p&gt;
&lt;p&gt;For each data set, there are some meta-data available, such as:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;Latitude and Longitude&lt;/strong&gt; for each station&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Name&lt;/strong&gt; of station&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Active&lt;/strong&gt;, some stations might be inactive&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Update&lt;/strong&gt;, when the data was updated&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;All of above is collected together with the value of the observation into a structure by the collector script.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note this&lt;/strong&gt; The stations will be different for each observation, e.g. the number of stations where rain observations
are available is larger than the number of stations for the air pressure observations. Therefore, we need to traverse
the API once per requested observation. To make the collector script somewhat more efficient it creates thread for
each observation so that the procedure is parallelized.&lt;/p&gt;
&lt;p&gt;The final result is stored in the file &lt;strong&gt;weather.js&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The &lt;strong&gt;collector.py&lt;/strong&gt; script is executed once per day using crontab. The entry in crontab is&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="m"&gt;00&lt;/span&gt; &lt;span class="m"&gt;1&lt;/span&gt;    * * *   pi      /usr/bin/python3 /home/pi/app/clover/py/collector.py &amp;gt;&amp;gt; /var/log/clover.log &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that the script is executed as user &amp;quot;pi&amp;quot; and that any printout from the script is collected into
&lt;tt class="docutils literal"&gt;/var/log/clover.log&lt;/tt&gt;. Ensure that the &lt;strong&gt;collector.py&lt;/strong&gt; script have execution attribute set, that the
&lt;strong&gt;clover.log&lt;/strong&gt; file exist in &lt;strong&gt;/var/log&lt;/strong&gt; and is possible to write into. Use &lt;strong&gt;chmod&lt;/strong&gt; and &lt;strong&gt;chown&lt;/strong&gt; commands to do this.&lt;/p&gt;
&lt;p&gt;The collector.py is short, not very complicated and available &lt;a class="reference external" href="https://github.com/Wolfrax/clover/blob/master/py/collector.py"&gt;here&lt;/a&gt; on GitHub.
The net result is a file, &lt;strong&gt;weather.js&lt;/strong&gt;, in JSON format. The file name is hardcoded in the script as
&lt;strong&gt;../data/weather.js&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;The beginning of the file looks like this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;{&lt;/span&gt;
    &lt;span class="s2"&gt;&amp;quot;date&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;2019-03-07&amp;quot;&lt;/span&gt;,
    &lt;span class="s2"&gt;&amp;quot;temp&amp;quot;&lt;/span&gt;: &lt;span class="o"&gt;[{&lt;/span&gt;
        &lt;span class="s2"&gt;&amp;quot;station&amp;quot;&lt;/span&gt;: &lt;span class="s2"&gt;&amp;quot;Abisko&amp;quot;&lt;/span&gt;,
        &lt;span class="s2"&gt;&amp;quot;updated&amp;quot;&lt;/span&gt;: &lt;span class="m"&gt;1551985200000&lt;/span&gt;,
        &lt;span class="s2"&gt;&amp;quot;lon&amp;quot;&lt;/span&gt;: &lt;span class="m"&gt;18&lt;/span&gt;.816546,
        &lt;span class="s2"&gt;&amp;quot;lat&amp;quot;&lt;/span&gt;: &lt;span class="m"&gt;68&lt;/span&gt;.354122,
        &lt;span class="s2"&gt;&amp;quot;active&amp;quot;&lt;/span&gt;: true,
        &lt;span class="s2"&gt;&amp;quot;val&amp;quot;&lt;/span&gt;: -15.5
    &lt;span class="o"&gt;}&lt;/span&gt;, &lt;span class="o"&gt;{&lt;/span&gt;
...
&lt;span class="o"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The full file includes all stations for key temp. Other keys in the file are&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;avg_temp&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;wind_dir&lt;/strong&gt; (not used)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;wind_speed&lt;/strong&gt; (not used)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;rain&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;rel_moisture&lt;/strong&gt; (humidity)&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;snow_depth&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;pressure&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;lowest_cloud&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The javascript that is accessing the data must use the exact key names shown above.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="emitter"&gt;
&lt;h2&gt;Emitter&lt;/h2&gt;
&lt;p&gt;The last script to explain is &lt;strong&gt;emitter.py&lt;/strong&gt;. This script is really short, the purpose of the script is to listen on
for HTTP GET-requests on the URI &lt;strong&gt;/clover_data&lt;/strong&gt;, read the &lt;strong&gt;weather.js&lt;/strong&gt; file and return the content to the HTTP client.
It is doing this through &lt;strong&gt;Gunicorn&lt;/strong&gt; and &lt;strong&gt;Flask&lt;/strong&gt;. The rationale for doing it this way is my local infrastructure
of raspberries.&lt;/p&gt;
&lt;p&gt;My domain is &lt;a class="reference external" href="https://www.viltstigen.se"&gt;https://www.viltstigen.se&lt;/a&gt;, and I have one raspberry (&lt;strong&gt;rpi1&lt;/strong&gt;) as HTTP server listening on port 80 and 443.
The collector script is executing on another raspberry (&lt;strong&gt;rpi2&lt;/strong&gt;) upstream of &lt;strong&gt;rpi1&lt;/strong&gt;.
The way to implement this is to use &lt;a class="reference external" href="https://nginx.org/en/"&gt;nginx&lt;/a&gt; as HTTP and proxy server on both &lt;strong&gt;rpi1&lt;/strong&gt; and &lt;strong&gt;rpi2&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;I need to configure nginx on &lt;strong&gt;rpi1&lt;/strong&gt; to distribute requests to clover to &lt;strong&gt;rpi2&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;location&lt;/span&gt; &lt;span class="s"&gt;/clover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kn"&gt;try_files&lt;/span&gt; &lt;span class="nv"&gt;$uri&lt;/span&gt; &lt;span class="nv"&gt;$uri/&lt;/span&gt; &lt;span class="nv"&gt;$uri/index.html&lt;/span&gt; &lt;span class="nv"&gt;$uri.html&lt;/span&gt; &lt;span class="s"&gt;@clover&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;location&lt;/span&gt; &lt;span class="s"&gt;@clover&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;# proxy_pass http://rpi2.local; Note, a static IP address makes nginx more robust in case rpi1 is not running&lt;/span&gt;
    &lt;span class="kn"&gt;proxy_pass&lt;/span&gt; &lt;span class="s"&gt;http://192.168.1.51&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;proxy_redirect&lt;/span&gt;     &lt;span class="no"&gt;off&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;proxy_set_header&lt;/span&gt;   &lt;span class="s"&gt;Host&lt;/span&gt; &lt;span class="nv"&gt;$host&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;proxy_set_header&lt;/span&gt;   &lt;span class="s"&gt;X-Real-IP&lt;/span&gt; &lt;span class="nv"&gt;$remote_addr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;proxy_set_header&lt;/span&gt;   &lt;span class="s"&gt;X-Forwarded-For&lt;/span&gt; &lt;span class="nv"&gt;$proxy_add_x_forwarded_for&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;proxy_set_header&lt;/span&gt;   &lt;span class="s"&gt;X-Forwarded-Host&lt;/span&gt; &lt;span class="nv"&gt;$server_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;proxy_read_timeout&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;location&lt;/span&gt; &lt;span class="s"&gt;/clover_data&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kn"&gt;try_files&lt;/span&gt; &lt;span class="nv"&gt;$uri&lt;/span&gt; &lt;span class="nv"&gt;$uri/&lt;/span&gt; &lt;span class="nv"&gt;$uri/index.html&lt;/span&gt; &lt;span class="nv"&gt;$uri.html&lt;/span&gt; &lt;span class="s"&gt;@clover_data&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;location&lt;/span&gt; &lt;span class="s"&gt;@clover_data&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;# proxy_pass http://rpi2.local; Note, a static IP address makes nginx more robust in case rpi1 is not running&lt;/span&gt;
    &lt;span class="kn"&gt;proxy_pass&lt;/span&gt; &lt;span class="s"&gt;http://192.168.1.51:8096&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;proxy_redirect&lt;/span&gt;     &lt;span class="no"&gt;off&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;proxy_set_header&lt;/span&gt;   &lt;span class="s"&gt;Host&lt;/span&gt; &lt;span class="nv"&gt;$host&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;proxy_set_header&lt;/span&gt;   &lt;span class="s"&gt;X-Real-IP&lt;/span&gt; &lt;span class="nv"&gt;$remote_addr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;proxy_set_header&lt;/span&gt;   &lt;span class="s"&gt;X-Forwarded-For&lt;/span&gt; &lt;span class="nv"&gt;$proxy_add_x_forwarded_for&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;proxy_set_header&lt;/span&gt;   &lt;span class="s"&gt;X-Forwarded-Host&lt;/span&gt; &lt;span class="nv"&gt;$server_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;proxy_read_timeout&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When a HTTP client access the URI &lt;a class="reference external" href="https://www.viltstigen.se/clover"&gt;https://www.viltstigen.se/clover&lt;/a&gt;, &lt;strong&gt;rpi1&lt;/strong&gt; will pass this to &lt;strong&gt;rpi2&lt;/strong&gt;.
Similar, if a client access &lt;a class="reference external" href="https://www.viltstigen.se/clover_data"&gt;https://www.viltstigen.se/clover_data&lt;/a&gt;, &lt;strong&gt;rpi1&lt;/strong&gt; will pass the request upstream to &lt;strong&gt;rpi2&lt;/strong&gt; on
port 8096. As my raspberries is protected by the uncomplicated firewall (ufw), the ports on &lt;strong&gt;rpi2&lt;/strong&gt; needs to be configured
to allow the traffic through these commands&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo ufw allow from &lt;span class="m"&gt;192&lt;/span&gt;.168.1.0/24 to any port &lt;span class="m"&gt;8096&lt;/span&gt;
$ sudo ufw allow from &lt;span class="m"&gt;192&lt;/span&gt;.168.1.0/24 to any port &lt;span class="m"&gt;80&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now an external HTTP-client can access &lt;strong&gt;rpi2&lt;/strong&gt; through &lt;strong&gt;rpi1&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;On &lt;strong&gt;rpi2&lt;/strong&gt; a WSGI server is listening on port 8096 and executing a Flask application in the emitter script.
As the WSGI server is running as a daemon I use supervisor to control this. Supervisor is configured in the file
&lt;strong&gt;clover_gunicorn.conf&lt;/strong&gt; (softlinked from &lt;strong&gt;/etc/supervisor/conf.d&lt;/strong&gt; directory), the content looks like this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;program:clover_gunicorn&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nb"&gt;command&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; /home/pi/.virtualenvs/clover/bin/gunicorn -b :8096 --reload emitter:app
&lt;span class="nv"&gt;directory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; /home/pi/app/clover/py
&lt;span class="nv"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; root
&lt;span class="nv"&gt;autostart&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;
&lt;span class="nv"&gt;autorestart&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;
&lt;span class="nv"&gt;startretries&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;
&lt;span class="nv"&gt;stdout_logfile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; /var/log/supervisor/clover_gunicorn.log
&lt;span class="nv"&gt;stderr_logfile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; /var/log/supervisor/clover_gunicorn.err
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This tells supervisor to execute gunicorn, bind it to port 8096 executing the Flask application &amp;quot;app&amp;quot; in module
&amp;quot;emitter&amp;quot;. It will automatically reload the Flask application if any changes are made.&lt;/p&gt;
&lt;p&gt;Finally, the core of the Flask application is (the actual script includes more error handling than shown below)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;jsonify&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;json&lt;/span&gt;

&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vm"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nd"&gt;@app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/clover_data&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_data&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;/var/local/clover_weather.js&amp;quot;&lt;/span&gt;  &lt;span class="c1"&gt;# Hardcoded filename&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;json_file&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;dumps&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;json&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;json_file&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;0.0.0.0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Above tells us that the Flask application will respond to the URI &lt;strong&gt;/clover_data&lt;/strong&gt; by reading the file
&lt;strong&gt;/var/local/clover_weather.js&lt;/strong&gt; (which I have symlinked to the actual file weather.js) and returning the content as a
JSON formatted string. Flask is running in debug mode, in case I would like to use this debug mode,
I issue these commands:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;FLASK_APP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;emitter.py
$ &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;FLASK_DEBUG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
$ flask run --host&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.0.0.0 --port&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;8096&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and access the URI &lt;a class="reference external" href="https://rpi2.local:8096/clover_data"&gt;https://rpi2.local:8096/clover_data&lt;/a&gt; from a web browser.&lt;/p&gt;
&lt;/div&gt;
</content><category term="Technologies"></category><category term="D3"></category><category term="Maps"></category></entry><entry><title>Map of Sweden #1</title><link href="https://wlog.viltstigen.se/articles/2020/01/26/map-of-sweden-1/" rel="alternate"></link><published>2020-01-26T00:00:00+01:00</published><updated>2020-03-01T00:00:00+01:00</updated><author><name>Mats Melander</name></author><id>tag:wlog.viltstigen.se,2020-01-26:/articles/2020/01/26/map-of-sweden-1/</id><summary type="html">&lt;div class="section" id="introduction"&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;This is a description on how to use &lt;a class="reference external" href="https://d3js.org/"&gt;D3&lt;/a&gt;, Data Driven Documents, to visualize and manipulate maps
objects.&lt;/p&gt;
&lt;p&gt;The end result is visible &lt;a class="reference external" href="https://www.viltstigen.se/clover/index.html"&gt;here&lt;/a&gt;.
The project is available on Github (&lt;a class="reference external" href="https://github.com/Wolfrax/clover"&gt;link&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="making-a-map-of-sweden"&gt;
&lt;h2&gt;Making a map of Sweden&lt;/h2&gt;
&lt;p&gt;First, we need to find some data describing the geometry we want. While â€¦&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="introduction"&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;This is a description on how to use &lt;a class="reference external" href="https://d3js.org/"&gt;D3&lt;/a&gt;, Data Driven Documents, to visualize and manipulate maps
objects.&lt;/p&gt;
&lt;p&gt;The end result is visible &lt;a class="reference external" href="https://www.viltstigen.se/clover/index.html"&gt;here&lt;/a&gt;.
The project is available on Github (&lt;a class="reference external" href="https://github.com/Wolfrax/clover"&gt;link&lt;/a&gt;).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="making-a-map-of-sweden"&gt;
&lt;h2&gt;Making a map of Sweden&lt;/h2&gt;
&lt;p&gt;First, we need to find some data describing the geometry we want. While there are several sources to choose from,
in this case I will be using &lt;a class="reference external" href="https://www.naturalearthdata.com/"&gt;Natural Earth&lt;/a&gt; that are providing a wealth of
datasets in different scales for free. As I'm interested in Sweden and some of its administrative subunits (countys)
for my project, only a selection of shapefiles is needed. Below I provide links to zip-archives for shapefiles in the
scale of 1:10 million.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.naturalearthdata.com/downloads/10m-cultural-vectors/10m-admin-0-details"&gt;NE 1:10m admin 0 details&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.naturalearthdata.com/http//www.naturalearthdata.com/download/10m/cultural/ne_10m_admin_1_states_provinces.zip"&gt;NE 1:10m admin 1 state provinces&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class="reference external" href="https://www.naturalearthdata.com/http//www.naturalearthdata.com/download/10m/cultural/ne_10m_populated_places.zip"&gt;NE 1:10m populated places&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For the first zip-archive link, according to Natural Earth it includes:&lt;/p&gt;
&lt;blockquote&gt;
Countries subdivided by non-contiguous units. Mainland metropolitan France separate from the island of Corsica.
These rarely correspond to actual administrative divisions but rather highlight geographical regions that are not
continuous but are part of the same country. (&lt;a class="reference external" href="https://www.naturalearthdata.com/downloads/10m-cultural-vectors/10m-admin-0-details/"&gt;Link&lt;/a&gt;)&lt;/blockquote&gt;
&lt;p&gt;For the second zip-archive link, Natural Earth says that we get:&lt;/p&gt;
&lt;blockquote&gt;
Internal, first-order administrative boundaries and polygons for all but a few tiny countries. (&lt;a class="reference external" href="https://www.naturalearthdata.com/downloads/10m-cultural-vectors/10m-admin-1-states-provinces/"&gt;Link&lt;/a&gt;)&lt;/blockquote&gt;
&lt;p&gt;The third link includes shape files city and town points:&lt;/p&gt;
&lt;blockquote&gt;
Point symbols with name attributes. Includes all admin-0 and many admin-1 capitals, major cities and towns,
plus a sampling of smaller towns in sparsely inhabited regions. (&lt;a class="reference external" href="https://www.naturalearthdata.com/downloads/10m-cultural-vectors/10m-populated-places/"&gt;Link&lt;/a&gt;)&lt;/blockquote&gt;
&lt;p&gt;We now have shapefiles which includes the geometry we want to use as a subset. How do we go from here?
For the purpose of rendering using D3, we need to filter out the geometries I'm looking for, then transform the
geometries from the original format in a 2-step approach; first transform into &lt;a class="reference external" href="https://en.wikipedia.org/wiki/GeoJSON"&gt;GeoJSON&lt;/a&gt;
and then into &lt;a class="reference external" href="https://en.wikipedia.org/wiki/GeoJSON#TopoJSON"&gt;TopoJSON&lt;/a&gt;.
For this we need to use tools, the &lt;a class="reference external" href="https://gdal.org/programs/ogr2ogr.html"&gt;ogr2ogr&lt;/a&gt; tool and
&lt;a class="reference external" href="https://github.com/topojson/topojson/wiki"&gt;topjson&lt;/a&gt; respectively.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ogr2ogr&lt;/strong&gt; is part of &lt;a class="reference external" href="https://gdal.org/"&gt;GDAL&lt;/a&gt; and official binaries for download can be found
&lt;a class="reference external" href="http://trac.osgeo.org/gdal/wiki/DownloadingGdalBinaries"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;For Mac, go this way&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ brew install gdal
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On a raspberry pi, running raspbian, the following commands should work (I have not tried):&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get update
$ sudo apt-get install gdal-bin
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;topojson&lt;/strong&gt; tool is installed (on Mac at least) by&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ npm install -g topojson@1
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(Install npm using this command: &lt;tt class="docutils literal"&gt;$ brew install node&lt;/tt&gt;)&lt;/p&gt;
&lt;p&gt;Unzip the shapefiles above, then try&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ogr2ogr -f GeoJSON -where &lt;span class="s2"&gt;&amp;quot;ADM0_A3 = &amp;#39;SWE&amp;#39;&amp;quot;&lt;/span&gt; subunits.json ne_10m_admin_1_states_provinces.shp
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This should produce a new file subunits.json. The input parameters to ogr2ogr is straightforward:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;&lt;strong&gt;-f&lt;/strong&gt; GeoJSON says that the output file format should be GeoJSON, subunits.json is the name of the output file and
ne_10m_admin_1_states_provinces.shp is the input file.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;-where&lt;/strong&gt; is the filter parameter with a SQL-like syntax, the trick is here to know that we want to filter on the
condition that ADM0_A3 should be equal to SWE. ADM0 refers to Admin-0, the highest level administrative boundaries,
and A3 refers to &lt;a class="reference external" href="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-3"&gt;ISO 3166-1 alpha-3&lt;/a&gt; country codes.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Now we can convert from GeoJSON to TopeJSON using topojson tool like so&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ topojson -o swe.json --properties -- subunits.json
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here we ask topojson to create output file swe.json and use subunits.json as input.
If everything is working correctly, we now have swe.json in topoJSON format that D3 can read and display, shown below.&lt;/p&gt;
&lt;div class="section" id="use-d3-to-draw-a-map"&gt;
&lt;h3&gt;Use D3 to draw a map&lt;/h3&gt;
&lt;p&gt;Let's start using D3, a javascript library to manipulate HTML documents using data.
We need to combine D3 with a simple HTML document, the skeleton for the HTML5 document is&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt; &lt;span class="na"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;en&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;meta&lt;/span&gt; &lt;span class="na"&gt;charset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;UTF-8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Map&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;//d3js.org/d3.v3.js&amp;quot;&lt;/span&gt; &lt;span class="na"&gt;charset&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;utf-8&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt; &lt;span class="na"&gt;src&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;//d3js.org/topojson.v1.js&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;script&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;

&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now we need to include some D3 javascript code between the &amp;lt;script&amp;gt; and &amp;lt;/script&amp;gt; tags. Like so,&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="kr"&gt;const&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;600&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;svg&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;select&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;body&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;svg&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;width&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;width&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;height&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;projection&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;mercator&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;center&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="mf"&gt;14.6&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="mf"&gt;62.1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;scale&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="mi"&gt;1000&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;translate&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="nx"&gt;width&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;height&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]);&lt;/span&gt;
&lt;span class="kd"&gt;let&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;geo&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;().&lt;/span&gt;&lt;span class="nx"&gt;projection&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;projection&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;

&lt;span class="nx"&gt;d3&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;json&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;swe.json&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="kd"&gt;function&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="nx"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;selectAll&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;map&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;data&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;topojson&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;feature&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;objects&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;subunits&lt;/span&gt;&lt;span class="p"&gt;).&lt;/span&gt;&lt;span class="nx"&gt;features&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;enter&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;path&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;style&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;fill: grey&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
        &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;span class="p"&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;And that's it really, if we combine this together into a html file, e.g. swe.hmtl, and bring this up in a browser we
should see a map of Sweden.&lt;/p&gt;
&lt;p&gt;What is the javascript code doing?&lt;/p&gt;
&lt;p&gt;In the let &lt;tt class="docutils literal"&gt;svg = ...&lt;/tt&gt;, I use the D3 selection - selecting the &amp;lt;body&amp;gt;-tag in the HTML code and appending an
&amp;lt;svg&amp;gt;-tag with 2 attributes width and height. The projection variable is pointing to the d3 mercator function
(this is a &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Mercator_projection"&gt;standard cylindrical map projection&lt;/a&gt;).
To this I center the map on the geographical mid point of Sweden (lat 62.1, lon 14.6), scale the image with factor
1000 and translate all coordinates to the mid-values of width and height. Finally, I define the svg-path variable
using the projection.&lt;/p&gt;
&lt;p&gt;d3.json() function reads the json-formated file swe.json that we created before. Then we use the selectAll
function to add the tag &amp;lt;map&amp;gt; to svg for all data. The data is generated through the function call to topojson which
will return an array of datapoints to draw.&lt;/p&gt;
&lt;p&gt;There is plenty of sites explaining and describing D3, so I am sketchy here.&lt;/p&gt;
&lt;p&gt;Result visible here.&lt;/p&gt;
&lt;p&gt;We get something like this.&lt;/p&gt;
&lt;div class="align-center figure"&gt;
&lt;img alt="alternate text" src="https://wlog.viltstigen.se/img/sweden_with_places.png" style="width: 270px; height: 541px;" /&gt;
&lt;p class="caption"&gt;Map of Sweden&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="variations-of-the-map"&gt;
&lt;h3&gt;Variations of the map&lt;/h3&gt;
&lt;p&gt;We can do more, for example include places by doing this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ogr2ogr -f GeoJSON -where &lt;span class="s2"&gt;&amp;quot;ISO_A2 = &amp;#39;SE&amp;#39; AND SCALERANK &amp;lt;8&amp;quot;&lt;/span&gt; places.json ne_10m_populated_places.shp
$ topojson -o swe.json -- subunits.json places.json
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;From the populated_places shape file (ne_10m_populated_places.shp) we have now filtered on Sweden using
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2"&gt;ISO 3166-1 alpha-2&lt;/a&gt; 2 letter code instead of the previous 3
letter code (the choice of letter codes seems to be somewhat arbitrary...) and the major cities by using SCALERANK
(see &lt;a class="reference external" href="https://www.naturalearthdata.com/downloads/10m-cultural-vectors/10m-populated-places/"&gt;here&lt;/a&gt; on SCALERANKS).
Then we append this javascript code to draw the places:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nx"&gt;svg&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;append&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;path&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;datum&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;topojson&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;feature&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;d&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;objects&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;places&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;d&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="nx"&gt;path&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="nx"&gt;attr&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;class&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;place&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;);&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="Technologies"></category><category term="D3"></category><category term="Maps"></category></entry><entry><title>Raspberry backup using dropbox</title><link href="https://wlog.viltstigen.se/articles/2020/01/25/raspberry-backup-using-dropbox/" rel="alternate"></link><published>2020-01-25T00:00:00+01:00</published><updated>2020-01-25T00:00:00+01:00</updated><author><name>Mats Melander</name></author><id>tag:wlog.viltstigen.se,2020-01-25:/articles/2020/01/25/raspberry-backup-using-dropbox/</id><summary type="html">&lt;p&gt;Follow the recipe &amp;lt;&lt;a class="reference external" href="https://www.raspberrypi.org/magpi/dropbox-raspberry-pi/"&gt;https://www.raspberrypi.org/magpi/dropbox-raspberry-pi/&lt;/a&gt;&amp;gt;
In Dropbox, create a new app (find the &amp;quot;...&amp;quot; in the right hand corner, selected Developer and Create App), choose
Dropbox API (not business), select specific folder or full usage (I choose specific folder) and an app name, in my
case WolfraxRPiBck â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;Follow the recipe &amp;lt;&lt;a class="reference external" href="https://www.raspberrypi.org/magpi/dropbox-raspberry-pi/"&gt;https://www.raspberrypi.org/magpi/dropbox-raspberry-pi/&lt;/a&gt;&amp;gt;
In Dropbox, create a new app (find the &amp;quot;...&amp;quot; in the right hand corner, selected Developer and Create App), choose
Dropbox API (not business), select specific folder or full usage (I choose specific folder) and an app name, in my
case WolfraxRPiBck (it has to be unique wihtin DropBox community). Click on &amp;quot;Generate access token&amp;quot; and copy the
resulting key.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git clone https://github.com/andreafabrizi/Dropbox-Uploader.git
$ &lt;span class="nb"&gt;cd&lt;/span&gt; Dropbox-Uploader/
$ chmod a+x ./dropbox_uploader.sh
$ ./dropbox_uploader.sh
 This is the first &lt;span class="nb"&gt;time&lt;/span&gt; you run this script, please follow the instructions:

 &lt;span class="m"&gt;1&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; Open the following URL in your Browser, and log in using your account: https://www.dropbox.com/developers/apps
 &lt;span class="m"&gt;2&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; Click on &lt;span class="s2"&gt;&amp;quot;Create App&amp;quot;&lt;/span&gt;, &lt;span class="k"&gt;then&lt;/span&gt; &lt;span class="k"&gt;select&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Dropbox API app&amp;quot;&lt;/span&gt;
 &lt;span class="m"&gt;3&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; Now go on with the configuration, choosing the app permissions and access restrictions to your DropBox folder
 &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt; Enter the &lt;span class="s2"&gt;&amp;quot;App Name&amp;quot;&lt;/span&gt; that you prefer &lt;span class="o"&gt;(&lt;/span&gt;e.g. MyUploader4177213067640&lt;span class="o"&gt;)&lt;/span&gt;

 Now, click on the &lt;span class="s2"&gt;&amp;quot;Create App&amp;quot;&lt;/span&gt; button.

 When your new App is successfully created, please click on the Generate button
 under the &lt;span class="s1"&gt;&amp;#39;Generated access token&amp;#39;&lt;/span&gt; section, &lt;span class="k"&gt;then&lt;/span&gt; copy and paste the new access token here:

 &lt;span class="c1"&gt;# Access token: QzVDx[...]&lt;/span&gt;

 &amp;gt; The access token is QzVDx&lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt; Looks ok? &lt;span class="o"&gt;[&lt;/span&gt;y/N&lt;span class="o"&gt;]&lt;/span&gt;: y
   The configuration has been saved.
 $ ./dropbox_uploader.sh info
Dropbox Uploader v1.0

 &amp;gt; Getting info...

Name:               Mats Melander
UID:                dbid:AAC...
Email:              mats.m...
Country:    SE

$ ./dropbox_uploader.sh upload README.md /
 &amp;gt; Uploading &lt;span class="s2"&gt;&amp;quot;/home/pi/app/Dropbox-Uploader/README.md&amp;quot;&lt;/span&gt; to &lt;span class="s2"&gt;&amp;quot;/README.md&amp;quot;&lt;/span&gt;...
&lt;span class="c1"&gt;######################################################################## 100.0%&lt;/span&gt;
DONE
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Edit the &lt;cite&gt;dropbox_uploader.sh&lt;/cite&gt; file and change &lt;cite&gt;SHOW_PROGRESSBAR = 0&lt;/cite&gt; to &lt;cite&gt;SHOW_PROGRESSBAR = 1&lt;/cite&gt;
The script is ready to be used.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="m"&gt;00&lt;/span&gt; &lt;span class="m"&gt;3&lt;/span&gt;    * * &lt;span class="m"&gt;0&lt;/span&gt;   sh /home/pi/rpi1/app/RPiscripts/backup_dropbox.sh -f /home/pi/.dropbox_uploader &amp;gt;&amp;gt; /home/pi/backup_dropbox.log &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once per week at 3:00pm upload to dropbox, the &lt;tt class="docutils literal"&gt;backup_dropbox.sh&lt;/tt&gt; is&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env bash&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# Daily upload to Dropbox of backup files&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# Copy everything in the /home/pi/bck/ directory to Dropbox and make a listing&lt;/span&gt;
&lt;span class="c1"&gt;# This script is dependent on the backup.sh script&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;

&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;-----&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Uploading to Dropbox of backup files&amp;quot;&lt;/span&gt;
date
&lt;span class="nb"&gt;echo&lt;/span&gt;

/home/pi/app/Dropbox-Uploader/dropbox_uploader.sh upload /home/pi/bck/* /RPi1_backup/
/home/pi/app/Dropbox-Uploader/dropbox_uploader.sh list /RPi1_backup/

&lt;span class="nb"&gt;echo&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Upload finished finished&amp;quot;&lt;/span&gt;
date
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;-----&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The file &lt;tt class="docutils literal"&gt;.dropbox_uploader&lt;/tt&gt; is one row with the access token for Dropbox.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nv"&gt;OAUTH_ACCESS_TOKEN&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;QzV&lt;span class="o"&gt;[&lt;/span&gt;...&lt;span class="o"&gt;]&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
</content><category term="Technologies"></category><category term="Raspberry"></category><category term="Dropbox"></category></entry><entry><title>Raspberry backup using rclone</title><link href="https://wlog.viltstigen.se/articles/2020/01/18/raspberry-backup-using-rclone/" rel="alternate"></link><published>2020-01-18T00:00:00+01:00</published><updated>2020-01-29T00:00:00+01:00</updated><author><name>Mats Melander</name></author><id>tag:wlog.viltstigen.se,2020-01-18:/articles/2020/01/18/raspberry-backup-using-rclone/</id><summary type="html">&lt;div class="section" id="introduction"&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Backing up raspberries using &lt;a class="reference external" href="https://rclone.org/drive/"&gt;rclone&lt;/a&gt; to Google drive.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="installation-of-rclone"&gt;
&lt;h2&gt;Installation of rclone&lt;/h2&gt;
&lt;p&gt;Installation on &lt;strong&gt;rpi1&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Please note the &lt;strong&gt;&amp;quot;INSTRUCTIONS Google Drive Example&amp;quot;&lt;/strong&gt; at the end of rclone installation.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pi@rpi1:~ $ curl -L https://raw.github.com/pageauc/rclone4pi/master/rclone-install.sh &lt;span class="p"&gt;|&lt;/span&gt; bash
  % Total    % Received % Xferd  Average Speed   Time    Time     Time â€¦&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="introduction"&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;Backing up raspberries using &lt;a class="reference external" href="https://rclone.org/drive/"&gt;rclone&lt;/a&gt; to Google drive.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="installation-of-rclone"&gt;
&lt;h2&gt;Installation of rclone&lt;/h2&gt;
&lt;p&gt;Installation on &lt;strong&gt;rpi1&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Please note the &lt;strong&gt;&amp;quot;INSTRUCTIONS Google Drive Example&amp;quot;&lt;/strong&gt; at the end of rclone installation.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pi@rpi1:~ $ curl -L https://raw.github.com/pageauc/rclone4pi/master/rclone-install.sh &lt;span class="p"&gt;|&lt;/span&gt; bash
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  &lt;span class="m"&gt;0&lt;/span&gt;     &lt;span class="m"&gt;0&lt;/span&gt;    &lt;span class="m"&gt;0&lt;/span&gt;     &lt;span class="m"&gt;0&lt;/span&gt;    &lt;span class="m"&gt;0&lt;/span&gt;     &lt;span class="m"&gt;0&lt;/span&gt;      &lt;span class="m"&gt;0&lt;/span&gt;      &lt;span class="m"&gt;0&lt;/span&gt; --:--:-- --:--:-- --:--:--     &lt;span class="m"&gt;0&lt;/span&gt;
&lt;span class="m"&gt;100&lt;/span&gt;  &lt;span class="m"&gt;2508&lt;/span&gt;  &lt;span class="m"&gt;100&lt;/span&gt;  &lt;span class="m"&gt;2508&lt;/span&gt;    &lt;span class="m"&gt;0&lt;/span&gt;     &lt;span class="m"&gt;0&lt;/span&gt;   &lt;span class="m"&gt;2328&lt;/span&gt;      &lt;span class="m"&gt;0&lt;/span&gt;  &lt;span class="m"&gt;0&lt;/span&gt;:00:01  &lt;span class="m"&gt;0&lt;/span&gt;:00:01 --:--:--  136k
bash ver &lt;span class="m"&gt;1&lt;/span&gt;.6 written by Claude Pageau
-------------------------------------------------------------------------------
--2020-01-18 &lt;span class="m"&gt;13&lt;/span&gt;:20:27--  https://downloads.rclone.org/rclone-current-linux-arm.zip
Resolving downloads.rclone.org &lt;span class="o"&gt;(&lt;/span&gt;downloads.rclone.org&lt;span class="o"&gt;)&lt;/span&gt;... &lt;span class="m"&gt;5&lt;/span&gt;.153.250.7, 2a02:24e0:8:61f9::1
Connecting to downloads.rclone.org &lt;span class="o"&gt;(&lt;/span&gt;downloads.rclone.org&lt;span class="o"&gt;)&lt;/span&gt;&lt;span class="p"&gt;|&lt;/span&gt;&lt;span class="m"&gt;5&lt;/span&gt;.153.250.7&lt;span class="p"&gt;|&lt;/span&gt;:443... connected.
HTTP request sent, awaiting response... &lt;span class="m"&gt;200&lt;/span&gt; OK

...snip...

rclone installed at /usr/bin/rclone
-------------------------------------------------------------------------------
                 INSTRUCTIONS Google Drive Example

&lt;span class="m"&gt;1&lt;/span&gt; You will be required to have a login account on the remote storage service
  Open putty SSH login session to RPI and execute &lt;span class="nb"&gt;command&lt;/span&gt; below

  rclone config

  Follow rclone prompts. For more Details See
  https://github.com/pageauc/rclone4pi/wiki/Home
&lt;span class="m"&gt;2&lt;/span&gt; At name&amp;gt; prompt specify a reference name  eg gdmedia
&lt;span class="m"&gt;3&lt;/span&gt; At storage&amp;gt; prompt Enter a remote storage number from List
&lt;span class="m"&gt;4&lt;/span&gt; Select Auto Config, At Link: prompt, left click
  and highlight rclone url link &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;do&lt;/span&gt; not hit enter&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="m"&gt;5&lt;/span&gt; on computer web browser url bar right click paste and go.
&lt;span class="m"&gt;6&lt;/span&gt; On computer web browser security page, Confirm access.
&lt;span class="m"&gt;7&lt;/span&gt; Copy web browser access security token and paste
  into RPI SSH session rclone prompt. Enter to accept
&lt;span class="m"&gt;8&lt;/span&gt; To &lt;span class="nb"&gt;test&lt;/span&gt; remote service access. Execute the following where
  gdmedia is the name you gave your remote service

  rclone ls gdmedia:/

Example sync &lt;span class="nb"&gt;command&lt;/span&gt; make &lt;span class="nb"&gt;source&lt;/span&gt; identical to destination

rclone sync -v /home/pi/rpi-sync gdmedia:/rpi-sync

To upgrade

  &lt;span class="nb"&gt;cd&lt;/span&gt; rpi-sync
  ./rclone-install.sh upgrade

For more Details See https://github.com/pageauc/rclone4pi/wiki/Home
Bye
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="configuration-of-rclone"&gt;
&lt;h2&gt;Configuration of rclone&lt;/h2&gt;
&lt;p&gt;A Google drive item needs to be configured for rclone, below I first remove &lt;tt class="docutils literal"&gt;google_drive&lt;/tt&gt; (which where wrongly
configured at a previous session) and then recreate a new remote with the same name.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
A &lt;tt class="docutils literal"&gt;client id&lt;/tt&gt; and its associated &lt;tt class="docutils literal"&gt;client secret&lt;/tt&gt; needs to be generated at Google, follow these
&lt;a class="reference external" href="https://rclone.org/drive/#making-your-own-client-id"&gt;instructions&lt;/a&gt; to do this.&lt;/blockquote&gt;
&lt;p&gt;In my case, I needed to go to &lt;a class="reference external" href="https://console.developers.google.com/"&gt;Google APIs&lt;/a&gt;, make sure that my project
&lt;tt class="docutils literal"&gt;Viltstigen&lt;/tt&gt; where selected (it is by default). Then select &amp;quot;Credentials&amp;quot; to the left on the web page. A number of
previously generated &amp;quot;API keys&amp;quot; will be visible. I selected &amp;quot;API Key 7&amp;quot;, then selected the &amp;quot;Create Credentials&amp;quot; drop
down menu (blue), followed by &amp;quot;OAuth client ID&amp;quot;. New page, select option &amp;quot;Other&amp;quot;, type in a &amp;quot;Name&amp;quot; and click &amp;quot;Create&amp;quot;.
A pop-up screen appears with &amp;quot;client ID&amp;quot; and &amp;quot;client Secret&amp;quot; visible, keep them for the script below.&lt;/p&gt;
&lt;p&gt;Note also that I have choosen a &amp;quot;root_folder_id&amp;quot; below, following the instructions
&lt;a class="reference external" href="https://rclone.org/drive/#root-folder-id"&gt;here&lt;/a&gt;. Essentially, using the Google Drive web interface, create a new
folder (e.g. &amp;quot;rpi_bck&amp;quot;), then move into this folder and copy the last part of the URL.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pi@rpi1:~/bck $ rclone config
Current remotes:

Name                 &lt;span class="nv"&gt;Type&lt;/span&gt;
&lt;span class="o"&gt;====&lt;/span&gt;                 &lt;span class="o"&gt;====&lt;/span&gt;
google_drive         drive

e&lt;span class="o"&gt;)&lt;/span&gt; Edit existing remote
n&lt;span class="o"&gt;)&lt;/span&gt; New remote
d&lt;span class="o"&gt;)&lt;/span&gt; Delete remote
r&lt;span class="o"&gt;)&lt;/span&gt; Rename remote
c&lt;span class="o"&gt;)&lt;/span&gt; Copy remote
s&lt;span class="o"&gt;)&lt;/span&gt; Set configuration password
q&lt;span class="o"&gt;)&lt;/span&gt; Quit config
e/n/d/r/c/s/q&amp;gt; d
Choose a number from below, or &lt;span class="nb"&gt;type&lt;/span&gt; in an existing value
 &lt;span class="m"&gt;1&lt;/span&gt; &amp;gt; google_drive
remote&amp;gt; &lt;span class="m"&gt;1&lt;/span&gt;
No remotes found - make a new one
n&lt;span class="o"&gt;)&lt;/span&gt; New remote
s&lt;span class="o"&gt;)&lt;/span&gt; Set configuration password
q&lt;span class="o"&gt;)&lt;/span&gt; Quit config
n/s/q&amp;gt; n
name&amp;gt; google_drive
Type of storage to configure.
Enter a string value. Press Enter &lt;span class="k"&gt;for&lt;/span&gt; the default &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;.
Choose a number from below, or &lt;span class="nb"&gt;type&lt;/span&gt; in your own value
 &lt;span class="m"&gt;1&lt;/span&gt; / 1Fichier
   &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;fichier&amp;quot;&lt;/span&gt;
 &lt;span class="m"&gt;2&lt;/span&gt; / Alias &lt;span class="k"&gt;for&lt;/span&gt; an existing remote
   &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;alias&amp;quot;&lt;/span&gt;
 &lt;span class="m"&gt;3&lt;/span&gt; / Amazon Drive
   &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;amazon cloud drive&amp;quot;&lt;/span&gt;
 &lt;span class="m"&gt;4&lt;/span&gt; / Amazon S3 Compliant Storage Provider &lt;span class="o"&gt;(&lt;/span&gt;AWS, Alibaba, Ceph, Digital Ocean, Dreamhost, IBM COS, Minio, etc&lt;span class="o"&gt;)&lt;/span&gt;
   &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;s3&amp;quot;&lt;/span&gt;
 &lt;span class="m"&gt;5&lt;/span&gt; / Backblaze B2
   &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;b2&amp;quot;&lt;/span&gt;
 &lt;span class="m"&gt;6&lt;/span&gt; / Box
   &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;box&amp;quot;&lt;/span&gt;
 &lt;span class="m"&gt;7&lt;/span&gt; / Cache a remote
   &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;cache&amp;quot;&lt;/span&gt;
 &lt;span class="m"&gt;8&lt;/span&gt; / Citrix Sharefile
   &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sharefile&amp;quot;&lt;/span&gt;
 &lt;span class="m"&gt;9&lt;/span&gt; / Dropbox
   &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;dropbox&amp;quot;&lt;/span&gt;
&lt;span class="m"&gt;10&lt;/span&gt; / Encrypt/Decrypt a remote
   &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;crypt&amp;quot;&lt;/span&gt;
&lt;span class="m"&gt;11&lt;/span&gt; / FTP Connection
   &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;ftp&amp;quot;&lt;/span&gt;
&lt;span class="m"&gt;12&lt;/span&gt; / Google Cloud Storage &lt;span class="o"&gt;(&lt;/span&gt;this is not Google Drive&lt;span class="o"&gt;)&lt;/span&gt;
   &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;google cloud storage&amp;quot;&lt;/span&gt;
&lt;span class="m"&gt;13&lt;/span&gt; / Google Drive
   &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;drive&amp;quot;&lt;/span&gt;
&lt;span class="m"&gt;14&lt;/span&gt; / Google Photos
   &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;google photos&amp;quot;&lt;/span&gt;
&lt;span class="m"&gt;15&lt;/span&gt; / Hubic
   &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;hubic&amp;quot;&lt;/span&gt;
&lt;span class="m"&gt;16&lt;/span&gt; / JottaCloud
   &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;jottacloud&amp;quot;&lt;/span&gt;
&lt;span class="m"&gt;17&lt;/span&gt; / Koofr
   &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;koofr&amp;quot;&lt;/span&gt;
&lt;span class="m"&gt;18&lt;/span&gt; / Local Disk
   &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;local&amp;quot;&lt;/span&gt;
&lt;span class="m"&gt;19&lt;/span&gt; / Mail.ru Cloud
   &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;mailru&amp;quot;&lt;/span&gt;
&lt;span class="m"&gt;20&lt;/span&gt; / Mega
   &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;mega&amp;quot;&lt;/span&gt;
&lt;span class="m"&gt;21&lt;/span&gt; / Microsoft Azure Blob Storage
   &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;azureblob&amp;quot;&lt;/span&gt;
&lt;span class="m"&gt;22&lt;/span&gt; / Microsoft OneDrive
   &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;onedrive&amp;quot;&lt;/span&gt;
&lt;span class="m"&gt;23&lt;/span&gt; / OpenDrive
   &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;opendrive&amp;quot;&lt;/span&gt;
&lt;span class="m"&gt;24&lt;/span&gt; / Openstack Swift &lt;span class="o"&gt;(&lt;/span&gt;Rackspace Cloud Files, Memset Memstore, OVH&lt;span class="o"&gt;)&lt;/span&gt;
   &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;swift&amp;quot;&lt;/span&gt;
&lt;span class="m"&gt;25&lt;/span&gt; / Pcloud
   &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;pcloud&amp;quot;&lt;/span&gt;
&lt;span class="m"&gt;26&lt;/span&gt; / Put.io
   &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;putio&amp;quot;&lt;/span&gt;
&lt;span class="m"&gt;27&lt;/span&gt; / QingCloud Object Storage
   &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;qingstor&amp;quot;&lt;/span&gt;
&lt;span class="m"&gt;28&lt;/span&gt; / SSH/SFTP Connection
   &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;sftp&amp;quot;&lt;/span&gt;
&lt;span class="m"&gt;29&lt;/span&gt; / Transparently chunk/split large files
   &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;chunker&amp;quot;&lt;/span&gt;
&lt;span class="m"&gt;30&lt;/span&gt; / Union merges the contents of several remotes
   &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;union&amp;quot;&lt;/span&gt;
&lt;span class="m"&gt;31&lt;/span&gt; / Webdav
   &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;webdav&amp;quot;&lt;/span&gt;
&lt;span class="m"&gt;32&lt;/span&gt; / Yandex Disk
   &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;yandex&amp;quot;&lt;/span&gt;
&lt;span class="m"&gt;33&lt;/span&gt; / http Connection
   &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http&amp;quot;&lt;/span&gt;
&lt;span class="m"&gt;34&lt;/span&gt; / premiumize.me
   &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;premiumizeme&amp;quot;&lt;/span&gt;
Storage&amp;gt; &lt;span class="m"&gt;13&lt;/span&gt;
** See &lt;span class="nb"&gt;help&lt;/span&gt; &lt;span class="k"&gt;for&lt;/span&gt; drive backend at: https://rclone.org/drive/ **

Google Application Client Id
Setting your own is recommended.
See https://rclone.org/drive/#making-your-own-client-id &lt;span class="k"&gt;for&lt;/span&gt; how to create your own.
If you leave this blank, it will use an internal key which is low performance.
Enter a string value. Press Enter &lt;span class="k"&gt;for&lt;/span&gt; the default &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;.
client_id&amp;gt; &lt;span class="m"&gt;929026972983&lt;/span&gt;-ngnatjtaijm1hc18s2kg6rkcktjv4od8.apps.googleusercontent.com
Google Application Client Secret
Setting your own is recommended.
Enter a string value. Press Enter &lt;span class="k"&gt;for&lt;/span&gt; the default &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;.
client_secret&amp;gt; ADn... &lt;span class="o"&gt;[&lt;/span&gt;secret&lt;span class="o"&gt;]&lt;/span&gt;
Scope that rclone should use when requesting access from drive.
Enter a string value. Press Enter &lt;span class="k"&gt;for&lt;/span&gt; the default &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;.
Choose a number from below, or &lt;span class="nb"&gt;type&lt;/span&gt; in your own value
 &lt;span class="m"&gt;1&lt;/span&gt; / Full access all files, excluding Application Data Folder.
   &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;drive&amp;quot;&lt;/span&gt;
 &lt;span class="m"&gt;2&lt;/span&gt; / Read-only access to file metadata and file contents.
   &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;drive.readonly&amp;quot;&lt;/span&gt;
   / Access to files created by rclone only.
 &lt;span class="m"&gt;3&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; These are visible in the drive website.
   &lt;span class="p"&gt;|&lt;/span&gt; File authorization is revoked when the user deauthorizes the app.
   &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;drive.file&amp;quot;&lt;/span&gt;
   / Allows &lt;span class="nb"&gt;read&lt;/span&gt; and write access to the Application Data folder.
 &lt;span class="m"&gt;4&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; This is not visible in the drive website.
   &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;drive.appfolder&amp;quot;&lt;/span&gt;
   / Allows read-only access to file metadata but
 &lt;span class="m"&gt;5&lt;/span&gt; &lt;span class="p"&gt;|&lt;/span&gt; does not allow any access to &lt;span class="nb"&gt;read&lt;/span&gt; or download file content.
   &lt;span class="se"&gt;\ &lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;drive.metadata.readonly&amp;quot;&lt;/span&gt;
scope&amp;gt; &lt;span class="m"&gt;3&lt;/span&gt;
ID of the root folder
Leave blank normally.

Fill in to access &lt;span class="s2"&gt;&amp;quot;Computers&amp;quot;&lt;/span&gt; folders &lt;span class="o"&gt;(&lt;/span&gt;see docs&lt;span class="o"&gt;)&lt;/span&gt;, or &lt;span class="k"&gt;for&lt;/span&gt; rclone to use
a non root folder as its starting point.

Note that &lt;span class="k"&gt;if&lt;/span&gt; this is blank, the first &lt;span class="nb"&gt;time&lt;/span&gt; rclone runs it will fill it
in with the ID of the root folder.

Enter a string value. Press Enter &lt;span class="k"&gt;for&lt;/span&gt; the default &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;.
root_folder_id&amp;gt; 1fMjA9uqc7cqphmsdW7DUhmdFQ9Ib44Ti
Service Account Credentials JSON file path
Leave blank normally.
Needed only &lt;span class="k"&gt;if&lt;/span&gt; you want use SA instead of interactive login.
Enter a string value. Press Enter &lt;span class="k"&gt;for&lt;/span&gt; the default &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;)&lt;/span&gt;.
service_account_file&amp;gt;
Edit advanced config? &lt;span class="o"&gt;(&lt;/span&gt;y/n&lt;span class="o"&gt;)&lt;/span&gt;
y&lt;span class="o"&gt;)&lt;/span&gt; Yes
n&lt;span class="o"&gt;)&lt;/span&gt; No
y/n&amp;gt; n
Remote config
Use auto config?
 * Say Y &lt;span class="k"&gt;if&lt;/span&gt; not sure
 * Say N &lt;span class="k"&gt;if&lt;/span&gt; you are working on a remote or headless machine
y&lt;span class="o"&gt;)&lt;/span&gt; Yes
n&lt;span class="o"&gt;)&lt;/span&gt; No
y/n&amp;gt; n
If your browser doesn&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;t open automatically go to the following link: https://accounts.google.com/o/oauth2/auth?access_type&lt;span class="o"&gt;=&lt;/span&gt;offline&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;client_id&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;929026972983&lt;/span&gt;-ngnatjtaijm1hc18s2kg6rkcktjv4od8.apps.googleusercontent.com&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;redirect_uri&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;urn%3Aietf%3Awg%3Aoauth%3A2.0%3Aoob&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;response_type&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;code&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;scope&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fdrive.file&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="nv"&gt;state&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;zNJXAabBYq3h47mRFBBDPQ
Log in and authorize rclone &lt;span class="k"&gt;for&lt;/span&gt; access
Enter verification code&amp;gt; &lt;span class="m"&gt;4&lt;/span&gt;/vgFZnvkQPNbnaZsTLaUsrylS7feY0vhiJIFIuT19GzQl9pAQd9oCeag
Configure this as a team drive?
y&lt;span class="o"&gt;)&lt;/span&gt; Yes
n&lt;span class="o"&gt;)&lt;/span&gt; No
y/n&amp;gt; n
--------------------
&lt;span class="o"&gt;[&lt;/span&gt;google_drive&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nb"&gt;type&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; drive
&lt;span class="nv"&gt;client_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;929026972983&lt;/span&gt;-ngnatjtaijm1hc18s2kg6rkcktjv4od8.apps.googleusercontent.com
&lt;span class="nv"&gt;client_secret&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; ADnKctAeKLK-BUrRiimgg4Np
&lt;span class="nv"&gt;scope&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; drive.file
&lt;span class="nv"&gt;root_folder_id&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; 1fMjA9uqc7cqphmsdW7DUhmdFQ9Ib44Ti
&lt;span class="nv"&gt;token&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="o"&gt;{&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;access_token&amp;quot;&lt;/span&gt;:&lt;span class="s2"&gt;&amp;quot;ya29.Il-6B94wEV6RU36hajNWRva4xAUWO_FoUfOBGI3iWAMyPRZr5ZIFO9sadE-oBksypv5vWVEUVNSQDIvPFX1TriqfGgjtdOlEG102-1mAeTfALnBUuOhtZ7rqpff4dXOPsg&amp;quot;&lt;/span&gt;,&lt;span class="s2"&gt;&amp;quot;token_type&amp;quot;&lt;/span&gt;:&lt;span class="s2"&gt;&amp;quot;Bearer&amp;quot;&lt;/span&gt;,&lt;span class="s2"&gt;&amp;quot;refresh_token&amp;quot;&lt;/span&gt;:&lt;span class="s2"&gt;&amp;quot;1//0c_Fz_obvU3LpCgYIARAAGAwSNwF-L9IrWuIw7flrX2ggHHLPNoS2PL7vALudrrE1NYJmIghUfeRoIUXg9qyINwRAcf62Ps7yGoo&amp;quot;&lt;/span&gt;,&lt;span class="s2"&gt;&amp;quot;expiry&amp;quot;&lt;/span&gt;:&lt;span class="s2"&gt;&amp;quot;2020-01-18T17:09:31.820516378+01:00&amp;quot;&lt;/span&gt;&lt;span class="o"&gt;}&lt;/span&gt;
--------------------
y&lt;span class="o"&gt;)&lt;/span&gt; Yes this is OK
e&lt;span class="o"&gt;)&lt;/span&gt; Edit this remote
d&lt;span class="o"&gt;)&lt;/span&gt; Delete this remote
y/e/d&amp;gt; y
Current remotes:

Name                 &lt;span class="nv"&gt;Type&lt;/span&gt;
&lt;span class="o"&gt;====&lt;/span&gt;                 &lt;span class="o"&gt;====&lt;/span&gt;
google_drive         drive

e&lt;span class="o"&gt;)&lt;/span&gt; Edit existing remote
n&lt;span class="o"&gt;)&lt;/span&gt; New remote
d&lt;span class="o"&gt;)&lt;/span&gt; Delete remote
r&lt;span class="o"&gt;)&lt;/span&gt; Rename remote
c&lt;span class="o"&gt;)&lt;/span&gt; Copy remote
s&lt;span class="o"&gt;)&lt;/span&gt; Set configuration password
q&lt;span class="o"&gt;)&lt;/span&gt; Quit config
e/n/d/r/c/s/q&amp;gt; q
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Now try rclone by copying a file (e.g. &amp;quot;backup.log&amp;quot;) to &amp;quot;google_drive&amp;quot; and create a new folder &amp;quot;rpi1&amp;quot;. Then list
content in &amp;quot;google_drive&amp;quot;, folder &amp;quot;rpi&amp;quot; to verify that the file is there. Finally list folders visible in &amp;quot;google_drive&amp;quot;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;pi@rpi1:~/bck $ rclone copy backup.log google_drive:rpi1
pi@rpi1:~/bck $ rclone ls google_drive:rpi1
  &lt;span class="m"&gt;1104214&lt;/span&gt; backup.log
pi@rpi1:~/bck $ rclone lsd google_drive:
          -1 &lt;span class="m"&gt;2020&lt;/span&gt;-01-18 &lt;span class="m"&gt;16&lt;/span&gt;:10:44        -1 rpi1
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="backup"&gt;
&lt;h2&gt;Backup&lt;/h2&gt;
&lt;p&gt;Now &lt;tt class="docutils literal"&gt;rclone&lt;/tt&gt; can be used to backup files to Google Drive.&lt;/p&gt;
&lt;div class="section" id="rpi1-backup"&gt;
&lt;h3&gt;rpi1 backup&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;rpi1&lt;/strong&gt; have an additional USB memory installed. Production data is stored in Mongo database.&lt;/p&gt;
&lt;p&gt;Plug the USB memory into a USB port and it should be automatically mounted by the raspberry on &lt;tt class="docutils literal"&gt;/dev/sda*&lt;/tt&gt;,
for example &lt;tt class="docutils literal"&gt;/dev/sda1&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;To check availability do&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo lsblk -f

NAME        FSTYPE LABEL    UUID                                 MOUNTPOINT
sda
â””â”€sda1      vfat            8F3F-8E75                            /media/pi/8F3F-8E75
mmcblk0
â”œâ”€mmcblk0p1 vfat   RECOVERY &lt;span class="m"&gt;6363&lt;/span&gt;-3634
â”œâ”€mmcblk0p2
â”œâ”€mmcblk0p5 ext4   SETTINGS 444485b7-f8cb-4f4c-8b9a-6fedf94efed1 /media/pi/SETTINGS
â”œâ”€mmcblk0p6 vfat   boot     &lt;span class="m"&gt;0181&lt;/span&gt;-4B93                            /boot
â””â”€mmcblk0p7 ext4   root     65b49769-3b56-43b9-b037-bf4a8da3a41a /
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note the mount point for the USB memory stick &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/media/pi/8F3F-8E75&lt;/span&gt;&lt;/tt&gt;, make a softlink for more convenient access,
for example &lt;tt class="docutils literal"&gt;$ ln &lt;span class="pre"&gt;-s&lt;/span&gt; &lt;span class="pre"&gt;/media/pi/8F3F-8E75/&lt;/span&gt; /home/pi/bck/&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;If needed format the USB memory stick through &lt;tt class="docutils literal"&gt;$ sudo mkfs.vfat /dev/sda1 &lt;span class="pre"&gt;-n&lt;/span&gt; untitled&lt;/tt&gt;.
If the mkfs.vfat command is not available install &amp;quot;dosfstools&amp;quot; first through &lt;tt class="docutils literal"&gt;$ sudo &lt;span class="pre"&gt;apt-get&lt;/span&gt; install dosfstools&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;Now add the following content into a file named backup.sh:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env bash&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# Daily backup from /etc/crontab&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# Adopted from &amp;lt;https://help.ubuntu.com/lts/serverguide/backup-shellscripts.html&amp;gt;&lt;/span&gt;
&lt;span class="c1"&gt;# and &amp;lt;http://www.tldp.org/LDP/solrhe/Securing-  Optimizing-Linux-RH-Edition-v1.3/chap29sec306.html&amp;gt;&lt;/span&gt;
&lt;span class="c1"&gt;#&lt;/span&gt;
&lt;span class="c1"&gt;# To list: tar -tzvf /home/pi/bck/host-Monday.tgz&lt;/span&gt;
&lt;span class="c1"&gt;# To restore: tar -xzvf /home/pi/bck/host-Monday.tgz -C /tmp etc/hosts (restore /etc/hosts file to /etc/tmp/hosts)&lt;/span&gt;
&lt;span class="c1"&gt;# Notice the leading &amp;quot;/&amp;quot; is left off the path of the file to restore.&lt;/span&gt;
&lt;span class="c1"&gt;# To restore all (overwrites everything):&lt;/span&gt;
&lt;span class="c1"&gt;#   cd&lt;/span&gt;
&lt;span class="c1"&gt;#   sudo tar -xzvf /home/pi/bck/host-Monday.tgz&lt;/span&gt;

&lt;span class="c1"&gt;# What to backup&lt;/span&gt;
&lt;span class="nv"&gt;backup_files&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/home/pi/.ssh /home/pi/app&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# Where to backup to.&lt;/span&gt;
&lt;span class="c1"&gt;# Note, this is a softlinked directory to /media/pi/8F3F-8E75/bck which resides on a separate USB  flash memory&lt;/span&gt;
&lt;span class="nv"&gt;dest&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/home/pi/bck&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# Create archive filename.&lt;/span&gt;
&lt;span class="nv"&gt;day&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;date +%A&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;hostname&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;hostname -s&lt;span class="k"&gt;)&lt;/span&gt;
&lt;span class="nv"&gt;archive_file&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="nv"&gt;$hostname&lt;/span&gt;&lt;span class="s2"&gt;-&lt;/span&gt;&lt;span class="nv"&gt;$day&lt;/span&gt;&lt;span class="s2"&gt;.tgz&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;# Print start status message.&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;-----&amp;quot;&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Backing up &lt;/span&gt;&lt;span class="nv"&gt;$backup_files&lt;/span&gt;&lt;span class="s2"&gt; to &lt;/span&gt;&lt;span class="nv"&gt;$dest&lt;/span&gt;&lt;span class="s2"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;$archive_file&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;
date
&lt;span class="nb"&gt;echo&lt;/span&gt;

&lt;span class="c1"&gt;# Backup the files using tar.&lt;/span&gt;
tar czf &lt;span class="nv"&gt;$dest&lt;/span&gt;/&lt;span class="nv"&gt;$archive_file&lt;/span&gt; &lt;span class="nv"&gt;$backup_files&lt;/span&gt;

&lt;span class="c1"&gt;# Print end status message.&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt;
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Backup finished&amp;quot;&lt;/span&gt;
date

&lt;span class="c1"&gt;# Long listing of files in $dest to check file sizes.&lt;/span&gt;
ls -lh &lt;span class="nv"&gt;$dest&lt;/span&gt;/
&lt;span class="nb"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;-----&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then do &lt;tt class="docutils literal"&gt;$ chmod a+x backup.sh&lt;/tt&gt;, the script is executed through user crontab (not /etc/crontab) by inserting this line&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="m"&gt;00&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;    * * *   sh /home/pi/rpi1/app/RPiscripts/backup.sh &amp;gt;&amp;gt; /home/pi/bck/backup.log &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Thus, by 2:00am the script is executed. Note that the folder &lt;tt class="docutils literal"&gt;home/pi/app&lt;/tt&gt; is included although no production data
is there. I then upload to Google Drive by this line in the same crontab at 4:00am.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="m"&gt;00&lt;/span&gt; &lt;span class="m"&gt;4&lt;/span&gt;    * * *   rclone sync /home/pi/bck/ google_drive:rpi1
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="rpi3-backup"&gt;
&lt;h3&gt;rpi3 backup&lt;/h3&gt;
&lt;p&gt;For &lt;strong&gt;rpi3&lt;/strong&gt; I have 2 files that is of &amp;quot;production type&amp;quot;, ie generated by a program. These are synched to Google Drive
once per hour from crontab entries&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt; * * * * rclone sync /home/pi/app/spots/radar/spots_stats.json google_drive:spots
&lt;span class="m"&gt;0&lt;/span&gt; * * * * rclone sync /home/pi/app/spots/radar/spots_stats.json.1 google_drive:spots
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
When google_drive is setup when installing rclone on &lt;strong&gt;rpi3&lt;/strong&gt;, the root is different compared to &lt;strong&gt;rpi1&lt;/strong&gt;.
For &lt;strong&gt;rpi3&lt;/strong&gt; it points to &lt;tt class="docutils literal"&gt;rpi_bck/rpi3&lt;/tt&gt; on Google Drive, while for &lt;strong&gt;rpi1&lt;/strong&gt; it points to &lt;tt class="docutils literal"&gt;`rpi_bck&lt;/tt&gt;.
Thus, for &lt;strong&gt;rpi1&lt;/strong&gt; an additional suffix is needed to store files at &lt;tt class="docutils literal"&gt;rpi_bck/rpi1&lt;/tt&gt; by using &lt;tt class="docutils literal"&gt;google_drive:rpi1&lt;/tt&gt;
in rclone commands on &lt;strong&gt;rpi1&lt;/strong&gt; compared to &lt;strong&gt;rpi3&lt;/strong&gt;.&lt;/blockquote&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="Technologies"></category><category term="Raspberry"></category><category term="Google Drive"></category><category term="rclone"></category></entry><entry><title>Raspberry information</title><link href="https://wlog.viltstigen.se/articles/2020/01/14/raspberry-information/" rel="alternate"></link><published>2020-01-14T00:00:00+01:00</published><updated>2020-01-14T00:00:00+01:00</updated><author><name>Mats Melander</name></author><id>tag:wlog.viltstigen.se,2020-01-14:/articles/2020/01/14/raspberry-information/</id><summary type="html">&lt;div class="section" id="introduction"&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;As I have several active raspberries in my home location, I tend to forget the details of them.
For example, raspberry model, linux kernel version etc etc
So I decided to write a script to collect this and expose it in a simple, crude tabular form at my home â€¦&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="introduction"&gt;
&lt;h2&gt;Introduction&lt;/h2&gt;
&lt;p&gt;As I have several active raspberries in my home location, I tend to forget the details of them.
For example, raspberry model, linux kernel version etc etc
So I decided to write a script to collect this and expose it in a simple, crude tabular form at my home page.
Here is how it is done.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="configuration"&gt;
&lt;h2&gt;Configuration&lt;/h2&gt;
&lt;p&gt;I have (currently) 5 raspberries in various models. They are named &amp;quot;rpi1&amp;quot;...&amp;quot;rpi5&amp;quot; and have been assigned static
IP-addresses (192.168.1.51 to 192.168.1.55).&lt;/p&gt;
&lt;p&gt;The rpi1-node is running my web-server (nginx), collects information from the other raspberries and expose the result
by generating a web-page using flask.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="raspberry-configuration"&gt;
&lt;h2&gt;Raspberry configuration&lt;/h2&gt;
&lt;p&gt;Each raspberry is running a small python info-script, listening and responding on port 8094.
All raspberries are protected with the &amp;quot;uncomplicated firewall&amp;quot; (UFW).
To allow traffic on port 8094 do &lt;tt class="docutils literal"&gt;$ sudo ufw allow from 192.168.1.0/24 to any port 8094&lt;/tt&gt;, this will enable any type of
traffic (TCP/UDP) from any node on the 192.168.1 network, others are blocked.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="information-to-collect"&gt;
&lt;h2&gt;Information to collect&lt;/h2&gt;
&lt;p&gt;I want to collect and present the following information for each raspberry&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;The host name and ip address&lt;/li&gt;
&lt;li&gt;Uptime and average load&lt;/li&gt;
&lt;li&gt;Raspberry model name&lt;/li&gt;
&lt;li&gt;Linux and raspbian versions&lt;/li&gt;
&lt;li&gt;CPU information&lt;/li&gt;
&lt;li&gt;Applications running on the raspberry&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Above is possible to read from various files in raspbian. Let's go through this.
In rasbian (or more generally, in Linux) the kernel maintains a directory tree under the root &lt;tt class="docutils literal"&gt;/proc&lt;/tt&gt; where readable
(ie text) files are found. So, the following is true&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;hostname can be read from &lt;tt class="docutils literal"&gt;/proc/sys/kernel/hostname&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;uptime can be read from &lt;tt class="docutils literal"&gt;/proc/uptime&lt;/tt&gt;. Note that this file have 2 numbers, both expressed in seconds, the
first number is seconds since restart, the second number is seconds in idle (which is not interesting for me).
We will need to convert seconds into a timestring to make it more readable, this is shown later on.&lt;/li&gt;
&lt;li&gt;average load can be read from /proc/loadavg. Note that it is the first three numbers that is of interest, there are
in total 5 numbers. See &lt;a class="footnote-reference" href="#id4" id="id1"&gt;[1]&lt;/a&gt; for details&lt;/li&gt;
&lt;li&gt;raspberry model can be read from &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/proc/device-tree/model&lt;/span&gt;&lt;/tt&gt;.&lt;/li&gt;
&lt;li&gt;linux version is read from &lt;tt class="docutils literal"&gt;/proc/version&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;raspbian version is read from &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/etc/os-release&lt;/span&gt;&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;CPU information is read from &lt;tt class="docutils literal"&gt;/proc/cpuinfo&lt;/tt&gt;&lt;/li&gt;
&lt;li&gt;Applications running on the raspberry is not read but hardcoded into the script&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Note that the information provided above needs to be formated to fit what I want.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="implementation"&gt;
&lt;h2&gt;Implementation&lt;/h2&gt;
&lt;p&gt;Install flask, gunicorn and requests into the python virtual environment, below named &amp;quot;info&amp;quot;.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ mkvirtualenv info
$ pip install flask
$ pip install gunicorn
$ pip install requests
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;I will be using &lt;a class="reference external" href="https://gunicorn.org/"&gt;gunicorn&lt;/a&gt; as the WSGI web-server,
&lt;a class="reference external" href="http://flask.palletsprojects.com/en/1.1.x/"&gt;flask&lt;/a&gt; as the web application (gunicorn receives HTTP requests and then
communicate with flask using WSGI calling convention). The flask application will act as a proxy and ask for information
from the other raspberries using requests, collect the information and return the information in JSON format to the
calling client.&lt;/p&gt;
&lt;p&gt;Here is the main loop, comments below&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vm"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

&lt;span class="nd"&gt;@app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/info&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;info&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;rpi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rpi1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;format_info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;get_info&lt;/span&gt;&lt;span class="p"&gt;())}&lt;/span&gt;
    &lt;span class="n"&gt;wait&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;5.0&lt;/span&gt;

    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;rpi&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rpi2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;format_info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://rpi2.local:8094/info&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;wait&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exceptions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConnectionError&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exceptions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Timeout&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;rpi&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rpi2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rpi2 (Down)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;apps&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Down&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;uptime&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Down&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;version&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Down&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;cpu&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Down&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;rpi&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rpi3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;format_info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://rpi3.local:8094/info&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;wait&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exceptions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConnectionError&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exceptions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Timeout&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;rpi&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rpi3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rpi3 (Down)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;apps&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Down&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;uptime&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Down&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;version&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Down&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;cpu&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Down&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;rpi&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rpi4&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;format_info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://rpi4.local:8094/info&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;wait&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exceptions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConnectionError&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exceptions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Timeout&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;rpi&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rpi4&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rpi4 (Down)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;apps&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Down&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;uptime&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Down&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;version&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Down&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;cpu&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Down&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;rpi&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rpi5&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;format_info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://rpi5.local:8094/info&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;wait&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exceptions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConnectionError&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exceptions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Timeout&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;rpi&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rpi5&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rpi5 (Down)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;apps&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Down&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;uptime&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Down&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;version&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Down&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;cpu&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Down&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render_template&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;info.html&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rpi&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;rpi&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;0.0.0.0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The flask app is started with host parameter value as 0.0.0.0 which means that other hosts can reach this app.
Debugging is enabled.
To bind this flask application to gunicorn, using port 8094 the following configuration file (which I name
Ã¬nfo_gunicorn.conf) exists.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;program:info_gunicorn&lt;span class="o"&gt;]&lt;/span&gt;
&lt;span class="nb"&gt;command&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; /home/pi/.virtualenvs/info/bin/python /home/pi/.virtualenvs/info/bin/gunicorn -b :8094 --reload emitter:app
&lt;span class="nv"&gt;directory&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; /home/pi/rpi1/info
&lt;span class="nv"&gt;user&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; root
&lt;span class="nv"&gt;autostart&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;
&lt;span class="nv"&gt;autorestart&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;true&lt;/span&gt;
&lt;span class="nv"&gt;startretries&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;3&lt;/span&gt;
&lt;span class="nv"&gt;stdout_logfile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; /var/log/supervisor/info_gunicorn.log
&lt;span class="nv"&gt;stderr_logfile&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; /var/log/supervisor/info_gunicorn.err
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;gunicorn and flask is running as a server on the rpi1 node and is supervised using &lt;a class="reference external" href="http://supervisord.org/"&gt;http://supervisord.org/&lt;/a&gt;.
Check out the documentation to install this tool. The gunicorn configuration file should normally reside at
&lt;tt class="docutils literal"&gt;/etc/supervisor/conf.d&lt;/tt&gt;, I have choosen to store this file elsewhere and provide a softlink from the conf.d
directory to the configuration file.&lt;/p&gt;
&lt;p&gt;Finally, I have configured nginx with this location information&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;location&lt;/span&gt; &lt;span class="s"&gt;/info&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kn"&gt;try_files&lt;/span&gt; &lt;span class="nv"&gt;$uri&lt;/span&gt; &lt;span class="nv"&gt;$uri/&lt;/span&gt; &lt;span class="nv"&gt;$uri/index.html&lt;/span&gt; &lt;span class="nv"&gt;$uri.html&lt;/span&gt; &lt;span class="s"&gt;@info&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;location&lt;/span&gt; &lt;span class="s"&gt;@info&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;# proxy_pass http://rpi1.local; Note, a static IP address makes nginx more robust in case rpi1 is not running&lt;/span&gt;
    &lt;span class="kn"&gt;proxy_pass&lt;/span&gt; &lt;span class="s"&gt;http://192.168.1.50:8094&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;proxy_redirect&lt;/span&gt;     &lt;span class="no"&gt;off&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;proxy_set_header&lt;/span&gt;   &lt;span class="s"&gt;Host&lt;/span&gt; &lt;span class="nv"&gt;$host&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;proxy_set_header&lt;/span&gt;   &lt;span class="s"&gt;X-Real-IP&lt;/span&gt; &lt;span class="nv"&gt;$remote_addr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;proxy_set_header&lt;/span&gt;   &lt;span class="s"&gt;X-Forwarded-For&lt;/span&gt; &lt;span class="nv"&gt;$proxy_add_x_forwarded_for&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;proxy_set_header&lt;/span&gt;   &lt;span class="s"&gt;X-Forwarded-Host&lt;/span&gt; &lt;span class="nv"&gt;$server_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;proxy_read_timeout&lt;/span&gt; &lt;span class="mi"&gt;300&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In summary, a web client will ask for information using HTTP(S) connecting to nginx which will pass upstream to
gunicorn listening on port 8094, gunicorn will communicate with the flask application, which in turn will communicate
with the other raspberries, collect and format all information and return the result as HTML.&lt;/p&gt;
&lt;p&gt;To have nginx reading the location information do $ sudo service nginx restart. You want to check (and correct) syntax
errors before restarting nginx using &lt;tt class="docutils literal"&gt;$ sudo nginx &lt;span class="pre"&gt;-t&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;In case you want to debug the flask application do this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;FLASK_APP&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;emitter.py
$ &lt;span class="nb"&gt;export&lt;/span&gt; &lt;span class="nv"&gt;FLASK_DEBUG&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
$ flask run --host&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;0&lt;/span&gt;.0.0.0 --port&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="m"&gt;8094&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Access the flask application in a web browser through &lt;a class="reference external" href="http://rpi1.local:8094/info"&gt;http://rpi1.local:8094/info&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The python script above calls the other raspberries using requests, like so&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;wait&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;5.0&lt;/span&gt;

&lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;rpi&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rpi2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;format_info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://rpi2.local:8094/info&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;wait&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exceptions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConnectionError&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exceptions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Timeout&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;rpi&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rpi2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rpi2 (Down)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;apps&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Down&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;uptime&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Down&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;version&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Down&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;cpu&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Down&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;It will wait for 5.0 seconds before timing-out, assuming that the other raspberry is down and managing the exception.
The results are formated (format_info) and stored into a dictionary named rpi.
When the information has been collected, the flask function render_template is called with the rpi-dictionary as a
parameter.&lt;/p&gt;
&lt;p&gt;The information is presented as a table with 5 rows and one column per raspberry. Therefore, in the script, I replace
&lt;tt class="docutils literal"&gt;/n&lt;/tt&gt; with HTML &lt;tt class="docutils literal"&gt;&amp;lt;br&amp;gt;&lt;/tt&gt; and I use &amp;quot;?&amp;quot; as a marker in the information strings to know when to split into the 5 rows
(see the function format_info below).
The result is visible &lt;a class="reference external" href="https://www.viltstigen.se/info"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="full-listing"&gt;
&lt;h2&gt;Full listing&lt;/h2&gt;
&lt;p&gt;Here is the complete script running on rpi1 &lt;a class="footnote-reference" href="#id5" id="id2"&gt;[2]&lt;/a&gt; followed by the flask template used (Note that I have hardcoded application information on row 4 in the get_info routine).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;render_template&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Markup&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;check_output&lt;/span&gt;


&lt;span class="n"&gt;__author__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;mm&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vm"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;format_cpuinfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;
    &lt;span class="n"&gt;no_of_cores&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;No of cores: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;processor&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;t:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;n&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;n&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;model_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;model name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;BogoMIPS&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;n&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;features&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Features&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;CPU implementer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;n&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;hardware&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Hardware&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):]&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;no_of_cores&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;model_name&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;features&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;hardware&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;no_of_cores&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;model_name&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;features&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;hardware&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_info&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/proc/sys/kernel/hostname&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;inf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; \
              &lt;span class="s2"&gt;&amp;quot;(&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;check_output&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;hostname&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;--all-ip-addresses&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;)&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;?&amp;quot;&lt;/span&gt;

    &lt;span class="n"&gt;inf&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Weather, EMC, Info, Vilt, Swind, nginx&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;?&amp;quot;&lt;/span&gt;

    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/proc/uptime&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;up_str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;ti&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;up_str&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
    &lt;span class="n"&gt;inf&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;seconds&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ti&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;n&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/proc/loadavg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;load_str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;load&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;load_str&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;inf&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;?&amp;quot;&lt;/span&gt;

    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/proc/device-tree/model&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;inf&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;n&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/proc/version&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;vers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;inf&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;vers&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="n"&gt;vers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;(&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;n&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/etc/os-release&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;vers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;ind1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="n"&gt;ind2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ind1&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;ind1&lt;/span&gt;
        &lt;span class="n"&gt;inf&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;vers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ind1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ind2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;?&amp;quot;&lt;/span&gt;

    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/proc/cpuinfo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;inf&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;format_cpuinfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;inf&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;format_info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inf&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="n"&gt;ret&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;
    &lt;span class="n"&gt;inf_str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;inf&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;lt;br&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;?&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Markup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inf_str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;apps&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Markup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inf_str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;uptime&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Markup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inf_str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;version&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Markup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inf_str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;3&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="n"&gt;ret&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;cpu&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Markup&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;inf_str&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;ret&lt;/span&gt;


&lt;span class="nd"&gt;@app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/info&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;info&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="n"&gt;rpi&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rpi1&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="n"&gt;format_info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;get_info&lt;/span&gt;&lt;span class="p"&gt;())}&lt;/span&gt;
    &lt;span class="n"&gt;wait&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mf"&gt;5.0&lt;/span&gt;

    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;rpi&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rpi2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;format_info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://rpi2.local:8094/info&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;wait&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exceptions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConnectionError&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exceptions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Timeout&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;rpi&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rpi2&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rpi2 (Down)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;apps&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Down&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;uptime&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Down&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;version&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Down&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;cpu&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Down&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;rpi&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rpi3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;format_info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://rpi3.local:8094/info&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;wait&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exceptions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConnectionError&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exceptions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Timeout&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;rpi&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rpi3&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rpi3 (Down)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;apps&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Down&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;uptime&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Down&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;version&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Down&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;cpu&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Down&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;rpi&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rpi4&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;format_info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://rpi4.local:8094/info&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;wait&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exceptions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConnectionError&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exceptions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Timeout&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;rpi&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rpi4&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rpi4 (Down)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;apps&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Down&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;uptime&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Down&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;version&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Down&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;cpu&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Down&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;try&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;rpi&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rpi5&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;format_info&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;http://rpi5.local:8094/info&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;timeout&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;wait&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;text&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="k"&gt;except&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exceptions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;ConnectionError&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;requests&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;exceptions&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;Timeout&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
        &lt;span class="n"&gt;rpi&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;rpi5&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;rpi5 (Down)&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;apps&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Down&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;uptime&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Down&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;version&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Down&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;cpu&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;Down&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;render_template&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;info.html&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;rpi&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;rpi&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;0.0.0.0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;HTML template&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="cp"&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt; &lt;span class="na"&gt;lang&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;en&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Raspberry info&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;title&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="nt"&gt;table&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;th&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="nt"&gt;td&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
            &lt;span class="k"&gt;border&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="kt"&gt;px&lt;/span&gt; &lt;span class="kc"&gt;solid&lt;/span&gt; &lt;span class="kc"&gt;black&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
            &lt;span class="k"&gt;border-collapse&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="kc"&gt;collapse&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="p"&gt;}&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;style&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;head&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;table&lt;/span&gt; &lt;span class="na"&gt;style&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;width:100%&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;th&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;th&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;th&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;{{ rpi.rpi1.name }}&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;th&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;th&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;{{ rpi.rpi2.name }}&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;th&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;th&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;{{ rpi.rpi3.name }}&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;th&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;th&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;{{ rpi.rpi4.name }}&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;th&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;th&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;{{ rpi.rpi5.name }}&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;th&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;th&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Running&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;th&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;{{ rpi.rpi1.apps }}&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;{{ rpi.rpi2.apps }}&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;{{ rpi.rpi3.apps }}&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;{{ rpi.rpi4.apps }}&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;{{ rpi.rpi5.apps }}&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;th&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Uptime&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;th&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;{{ rpi.rpi1.uptime }}&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;{{ rpi.rpi2.uptime }}&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;{{ rpi.rpi3.uptime }}&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;{{ rpi.rpi4.uptime }}&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;{{ rpi.rpi5.uptime }}&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;th&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;Version&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;th&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;{{ rpi.rpi1.version }}&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;{{ rpi.rpi2.version }}&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;{{ rpi.rpi3.version }}&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;{{ rpi.rpi4.version }}&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;{{ rpi.rpi5.version }}&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;th&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;CPU&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;th&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt; &lt;span class="na"&gt;valign&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;top&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;{{ rpi.rpi1.cpu }}&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt; &lt;span class="na"&gt;valign&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;top&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;{{ rpi.rpi2.cpu }}&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt; &lt;span class="na"&gt;valign&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;top&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;{{ rpi.rpi3.cpu }}&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt; &lt;span class="na"&gt;valign&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;top&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;{{ rpi.rpi4.cpu }}&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
        &lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt; &lt;span class="na"&gt;valign&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;top&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;{{ rpi.rpi5.cpu }}&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;td&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
    &lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;tr&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;table&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;br&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://elinux.org/RPi_HardwareHistory&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;RPi HardwareHistory&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;br&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt; &lt;span class="na"&gt;href&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;https://unix.stackexchange.com/questions/43539/what-do-the-flags-in-proc-cpuinfo-mean&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;CPU Info&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;a&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;br&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;&lt;/span&gt;&lt;span class="nt"&gt;br&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
Copyright (C) Mats Melander
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;body&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;span class="p"&gt;&amp;lt;/&lt;/span&gt;&lt;span class="nt"&gt;html&lt;/span&gt;&lt;span class="p"&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The python scripts executing (and listening on port 8094 &lt;a class="footnote-reference" href="#id6" id="id3"&gt;[3]&lt;/a&gt;) on the other raspberries is a simple copy of the rpi1
functions format_cpuinfo and get_info, like so (the same virtual environment, supervisor etc is installed per raspberry).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="ch"&gt;#!/usr/bin/env python&lt;/span&gt;

&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;flask&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;
&lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="nn"&gt;datetime&lt;/span&gt;
&lt;span class="kn"&gt;from&lt;/span&gt; &lt;span class="nn"&gt;subprocess&lt;/span&gt; &lt;span class="kn"&gt;import&lt;/span&gt; &lt;span class="n"&gt;check_output&lt;/span&gt;


&lt;span class="n"&gt;__author__&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;mm&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;app&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;Flask&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="vm"&gt;__name__&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;format_cpuinfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;
    &lt;span class="n"&gt;no_of_cores&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;No of cores: &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;processor&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;t:&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;n&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;n&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;model_name&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;model name&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;BogoMIPS&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;n&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;features&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Features&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;CPU implementer&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;n&amp;quot;&lt;/span&gt;
    &lt;span class="n"&gt;hardware&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;Hardware&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;):]&lt;/span&gt;
    &lt;span class="nb"&gt;print&lt;/span&gt; &lt;span class="n"&gt;no_of_cores&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;model_name&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;features&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;hardware&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;no_of_cores&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;model_name&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;features&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;hardware&lt;/span&gt;


&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;get_info&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/proc/sys/kernel/hostname&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;inf&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; \
              &lt;span class="s2"&gt;&amp;quot;(&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;check_output&lt;/span&gt;&lt;span class="p"&gt;([&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;hostname&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;--all-ip-addresses&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;])&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;replace&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;n&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;) ?&amp;quot;&lt;/span&gt;

    &lt;span class="n"&gt;inf&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;Blog&amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;?&amp;quot;&lt;/span&gt;

    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/proc/uptime&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;up_str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;ti&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="nb"&gt;int&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="nb"&gt;float&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;up_str&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]))&lt;/span&gt;
    &lt;span class="n"&gt;inf&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="nb"&gt;str&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;datetime&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;timedelta&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;seconds&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;ti&lt;/span&gt;&lt;span class="p"&gt;))&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;n&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/proc/loadavg&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;load_str&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
    &lt;span class="n"&gt;load&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;load_str&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;split&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
    &lt;span class="n"&gt;inf&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;load&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="mi"&gt;2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;?&amp;quot;&lt;/span&gt;

    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/proc/device-tree/model&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;inf&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;n&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/proc/version&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;vers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;inf&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;vers&lt;/span&gt;&lt;span class="p"&gt;[:&lt;/span&gt;&lt;span class="n"&gt;vers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;(&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="se"&gt;\\&lt;/span&gt;&lt;span class="s2"&gt;n&amp;quot;&lt;/span&gt;
    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/etc/os-release&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;vers&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;ind1&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vers&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
        &lt;span class="n"&gt;ind2&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;vers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ind1&lt;/span&gt;&lt;span class="p"&gt;:]&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;find&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&amp;quot;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="n"&gt;ind1&lt;/span&gt;
        &lt;span class="n"&gt;inf&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;vers&lt;/span&gt;&lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;ind1&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;ind2&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;?&amp;quot;&lt;/span&gt;

    &lt;span class="k"&gt;with&lt;/span&gt; &lt;span class="nb"&gt;open&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;/proc/cpuinfo&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;r&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt; &lt;span class="k"&gt;as&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
        &lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="n"&gt;f&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;read&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;
        &lt;span class="n"&gt;inf&lt;/span&gt; &lt;span class="o"&gt;+=&lt;/span&gt; &lt;span class="n"&gt;format_cpuinfo&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;

    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;inf&lt;/span&gt;


&lt;span class="nd"&gt;@app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;route&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;/info&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;span class="k"&gt;def&lt;/span&gt; &lt;span class="nf"&gt;info&lt;/span&gt;&lt;span class="p"&gt;():&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="n"&gt;get_info&lt;/span&gt;&lt;span class="p"&gt;()&lt;/span&gt;


&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="vm"&gt;__name__&lt;/span&gt; &lt;span class="o"&gt;==&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;__main__&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;
    &lt;span class="n"&gt;app&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;&lt;span class="n"&gt;run&lt;/span&gt;&lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;host&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;0.0.0.0&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;debug&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="kc"&gt;True&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;table class="docutils footnote" frame="void" id="id4" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id1"&gt;[1]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;The first three fields in this file are load average figures giving the number of jobs in the run queue (state R) or
waiting for disk I/O (state D) averaged over 1, 5, and 15 minutes. They are the same as the load average numbers given
by uptime(1) and other programs.
The fourth field consists of two numbers separated by a slash (/). The first of these is the number of currently
executing kernel scheduling entities (processes, threads); this will be less than or equal to the number of CPUs.
The value after the slash is the number of kernel scheduling entities that currently exist on the system.
The fifth field is the PID of the process that was most recently created on the system.&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id5" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id2"&gt;[2]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;The extraction of information and formatting is pretty crude, not my proudest moment... â†©ï¸Ž&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table class="docutils footnote" frame="void" id="id6" rules="none"&gt;
&lt;colgroup&gt;&lt;col class="label" /&gt;&lt;col /&gt;&lt;/colgroup&gt;
&lt;tbody valign="top"&gt;
&lt;tr&gt;&lt;td class="label"&gt;&lt;a class="fn-backref" href="#id3"&gt;[3]&lt;/a&gt;&lt;/td&gt;&lt;td&gt;I use Uncomplicated Firewall (UFW), so this needs to be configured to allow traffic on this port, for example
&lt;tt class="docutils literal"&gt;sudo ufw allow from 192.168.1.0/24 to any port 8094&lt;/tt&gt;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</content><category term="Technologies"></category><category term="Raspberry"></category></entry><entry><title>Let's Encrypt</title><link href="https://wlog.viltstigen.se/articles/2020/01/13/lets-encrypt/" rel="alternate"></link><published>2020-01-13T00:00:00+01:00</published><updated>2020-05-01T00:00:00+02:00</updated><author><name>Mats Melander</name></author><id>tag:wlog.viltstigen.se,2020-01-13:/articles/2020/01/13/lets-encrypt/</id><summary type="html">&lt;p&gt;The recommended way for web traffic is to use HTTPS which requires a certificate.
There is a free certificate authority for this purpose, &lt;a class="reference external" href="https://letsencrypt.org/"&gt;Let's Encrypt&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In this post I describe my configuration and how to automatically renew the certificate when expired.
The basic recipe (for Ubuntu 16-04) I followed is â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;The recommended way for web traffic is to use HTTPS which requires a certificate.
There is a free certificate authority for this purpose, &lt;a class="reference external" href="https://letsencrypt.org/"&gt;Let's Encrypt&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In this post I describe my configuration and how to automatically renew the certificate when expired.
The basic recipe (for Ubuntu 16-04) I followed is available
&lt;a class="reference external" href="https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-ubuntu-16-04"&gt;here&lt;/a&gt;,
another good description is this &lt;a class="reference external" href="https://gist.github.com/cecilemuller/a26737699a7e70a7093d4dc115915de8"&gt;gist&lt;/a&gt;.&lt;/p&gt;
&lt;div class="section" id="environment"&gt;
&lt;h2&gt;Environment&lt;/h2&gt;
&lt;p&gt;I'm using nginx on &lt;strong&gt;rpi1&lt;/strong&gt;, Raspberry Pi Model B Rev 2, running Linux version 4.1.13+ Raspbian GNU/Linux 8 (jessie).&lt;/p&gt;
&lt;p&gt;The nginx server works as a proxy-server, redirecting web-application traffic to other raspberries behind this server.
My domain name is www.viltstigen.se.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="installation"&gt;
&lt;h2&gt;Installation&lt;/h2&gt;
&lt;p&gt;Start by cloning the github letsencrypt repository.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo git clone https://github.com/letsencrypt/letsencrypt /opt/letsencrypt
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using the domain name and nginx root directory (see Environment above) we issue the following commands&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;cd&lt;/span&gt; /opt/letsencrypt
$ sudo ./letsencrypt-auto certonly -a webroot --webroot-path&lt;span class="o"&gt;=&lt;/span&gt;/usr/share/nginx/html -d www.viltstigen.se
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The script will ask for some questions, be prepared to state email address and accept Terms of Service&lt;/p&gt;
&lt;p&gt;I obtained the following response (I was running this 2017-06-26)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;Saving debug log to /var/log/letsencrypt/letsencrypt.log
Obtaining a new certificate
Performing the following challenges:
http-01 challenge &lt;span class="k"&gt;for&lt;/span&gt; www.viltstigen.se
Using the webroot path /usr/share/nginx/html &lt;span class="k"&gt;for&lt;/span&gt; all unmatched domains.
Waiting &lt;span class="k"&gt;for&lt;/span&gt; verification...
Cleaning up challenges
Generating key &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;2048&lt;/span&gt; bits&lt;span class="o"&gt;)&lt;/span&gt;: /etc/letsencrypt/keys/0000_key-certbot.pem
Creating CSR: /etc/letsencrypt/csr/0000_csr-certbot.pem

IMPORTANT NOTES:
 - Congratulations! Your certificate and chain have been saved at
   /etc/letsencrypt/live/www.viltstigen.se/fullchain.pem. Your cert
   will expire on &lt;span class="m"&gt;2017&lt;/span&gt;-06-26. To obtain a new or tweaked version of
   this certificate in the future, simply run letsencrypt-auto again.
   To non-interactively renew *all* of your certificates, run
   &lt;span class="s2"&gt;&amp;quot;letsencrypt-auto renew&amp;quot;&lt;/span&gt;
 - If you like Certbot, please consider supporting our work by:

   Donating to ISRG / Let&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;s Encrypt:   https://letsencrypt.org/donate
   Donating to EFF:                    https://eff.org/donate-le
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's check the output&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo ls -l -R  /etc/letsencrypt/live/
/etc/letsencrypt/live/:
total &lt;span class="m"&gt;4&lt;/span&gt;&lt;span class="se"&gt;\&lt;/span&gt;
drwxr-xr-x &lt;span class="m"&gt;2&lt;/span&gt; root root &lt;span class="m"&gt;4096&lt;/span&gt; Mar &lt;span class="m"&gt;28&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt;:53 www.viltstigen.se

/etc/letsencrypt/live/www.viltstigen.se:
total &lt;span class="m"&gt;4&lt;/span&gt;
lrwxrwxrwx &lt;span class="m"&gt;1&lt;/span&gt; root root  &lt;span class="m"&gt;41&lt;/span&gt; Mar &lt;span class="m"&gt;28&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt;:53 cert.pem -&amp;gt; ../../archive/www.viltstigen.se/cert1.pem
lrwxrwxrwx &lt;span class="m"&gt;1&lt;/span&gt; root root  &lt;span class="m"&gt;42&lt;/span&gt; Mar &lt;span class="m"&gt;28&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt;:53 chain.pem -&amp;gt; ../../archive/www.viltstigen.se/chain1.pem
lrwxrwxrwx &lt;span class="m"&gt;1&lt;/span&gt; root root  &lt;span class="m"&gt;46&lt;/span&gt; Mar &lt;span class="m"&gt;28&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt;:53 fullchain.pem -&amp;gt; ../../archive/www.viltstigen.se/fullchain1.pem
lrwxrwxrwx &lt;span class="m"&gt;1&lt;/span&gt; root root  &lt;span class="m"&gt;44&lt;/span&gt; Mar &lt;span class="m"&gt;28&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt;:53 privkey.pem -&amp;gt; ../../archive/www.viltstigen.se/privkey1.pem
-rw-r--r-- &lt;span class="m"&gt;1&lt;/span&gt; root root &lt;span class="m"&gt;543&lt;/span&gt; Mar &lt;span class="m"&gt;28&lt;/span&gt; &lt;span class="m"&gt;20&lt;/span&gt;:53 README
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Next step is to generate a Diffie-Hellman group, this will take some time&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo openssl dhparam -out /etc/ssl/certs/dhparam.pem &lt;span class="m"&gt;2048&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The output is in the /etc/ssl/certs directory and the file is a container for the public certificate.
Now it's time to configure nginx&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="nginx"&gt;
&lt;h2&gt;NGINX&lt;/h2&gt;
&lt;p&gt;Let's first define how I have structured the configuration files for nginx.
The directory tree for nginx looks like this&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;/etc/nginx
â”œâ”€â”€ conf.d
â”œâ”€â”€ sites-available
â”œâ”€â”€ sites-enabled
â””â”€â”€ snippets
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The basic configuration file is /etc/nginx/nginx.conf, which includes this row (among other)
&lt;tt class="docutils literal"&gt;include &lt;span class="pre"&gt;/etc/nginx/sites-enabled/*;&lt;/span&gt;&lt;/tt&gt;. So all files in the sites-enabled directory is included by nginx.
Traditionally, you store configuration files in the &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;sites-available&lt;/span&gt;&lt;/tt&gt; directory, then softlink these files to
&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;sites-enabled&lt;/span&gt;&lt;/tt&gt; for easy on/off switching.&lt;/p&gt;
&lt;p&gt;So, I have created a configuration file &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/etc/nginx/sites-enabled/wolfrax.conf&lt;/span&gt;&lt;/tt&gt;.
This file defines 2 servers as follows&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kn"&gt;listen&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;listen&lt;/span&gt; &lt;span class="s"&gt;[::]:80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kn"&gt;server_name&lt;/span&gt; &lt;span class="s"&gt;www.viltstigen.se&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="c1"&gt;# This will redirect http traffic to server below using https&lt;/span&gt;
    &lt;span class="kn"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;301&lt;/span&gt; &lt;span class="s"&gt;https://&lt;/span&gt;&lt;span class="nv"&gt;$server_name$request_uri&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kn"&gt;listen&lt;/span&gt; &lt;span class="mi"&gt;443&lt;/span&gt; &lt;span class="s"&gt;ssl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;listen&lt;/span&gt; &lt;span class="s"&gt;[::]:443&lt;/span&gt; &lt;span class="s"&gt;ssl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kn"&gt;server_name&lt;/span&gt; &lt;span class="s"&gt;www.viltstigen.se&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kn"&gt;root&lt;/span&gt; &lt;span class="s"&gt;/usr/share/nginx/html&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;index&lt;/span&gt; &lt;span class="s"&gt;index.html&lt;/span&gt; &lt;span class="s"&gt;index.htm&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;# SSL configuration&lt;/span&gt;
    &lt;span class="kn"&gt;include&lt;/span&gt; &lt;span class="s"&gt;snippets/ssl-www.viltstigen.se.conf&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;include&lt;/span&gt; &lt;span class="s"&gt;snippets/ssl-params.conf&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kn"&gt;include&lt;/span&gt; &lt;span class="s"&gt;snippets/locations.conf&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let's digest these definitions somewhat.&lt;/p&gt;
&lt;p&gt;The 2 listen rows are for TCP/IP v4 and v6 respectively, listening on respective port numbers.&lt;/p&gt;
&lt;p&gt;The last row on the first server (return 301 &lt;a class="reference external" href="https://$server_name$request_uri"&gt;https://$server_name$request_uri&lt;/a&gt;;) is important in this context.
If the server is approached by a client using HTTP (port 80) it generates a 301-redirect response, this response tells
the client where to go (&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;https://$server_name$request_uri&lt;/span&gt;&lt;/tt&gt;) which is simply put the same URI as it first used but using
HTTPS instead of HTTP. Thus we enforce usage of HTTPS.&lt;/p&gt;
&lt;div class="admonition note"&gt;
&lt;p class="first admonition-title"&gt;Note&lt;/p&gt;
&lt;p class="last"&gt;If the target server is upstream and nginx is simply a proxy-pass function the location
&lt;strong&gt;.well-known&lt;/strong&gt; needs to be excluded to be upstreamed.
See &lt;a class="reference external" href="https://wlog.viltstigen.se/articles/2020/01/12/pelican-blog/"&gt;Pelican blog&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The second server definition is receiving the HTTPS traffic and includes 3 snippet-files as indicated.&lt;/p&gt;
&lt;p&gt;The first file, &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;snippets/ssl-www.viltstigen.se.conf&lt;/span&gt;&lt;/tt&gt;, simply includes 2 rows&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;ssl_certificate&lt;/span&gt; &lt;span class="s"&gt;/etc/letsencrypt/live/www.viltstigen.se/fullchain.pem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;ssl_certificate_key&lt;/span&gt; &lt;span class="s"&gt;/etc/letsencrypt/live/www.viltstigen.se/privkey.pem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;These files were generated previously&lt;/p&gt;
&lt;p&gt;The second file (&lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;snippets/ssl-params.conf&lt;/span&gt;&lt;/tt&gt;) have more information&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;ssl_protocols&lt;/span&gt; &lt;span class="s"&gt;TLSv1&lt;/span&gt; &lt;span class="s"&gt;TLSv1.1&lt;/span&gt; &lt;span class="s"&gt;TLSv1.2&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;ssl_prefer_server_ciphers&lt;/span&gt; &lt;span class="no"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;ssl_ciphers&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;ssl_ecdh_curve&lt;/span&gt; &lt;span class="s"&gt;secp384r1&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;ssl_session_cache&lt;/span&gt; &lt;span class="s"&gt;shared:SSL:10m&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;ssl_session_tickets&lt;/span&gt; &lt;span class="no"&gt;off&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;ssl_stapling&lt;/span&gt; &lt;span class="no"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;ssl_stapling_verify&lt;/span&gt; &lt;span class="no"&gt;on&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;# Try to use Google (8.8.8.8) as resolver&lt;/span&gt;
&lt;span class="k"&gt;resolver&lt;/span&gt; &lt;span class="mi"&gt;8&lt;/span&gt;&lt;span class="s"&gt;.8.8.8&lt;/span&gt; &lt;span class="s"&gt;valid=300s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;resolver_timeout&lt;/span&gt; &lt;span class="s"&gt;10s&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="c1"&gt;# Disable preloading HSTS for now.  You can use the commented out header line that includes&lt;/span&gt;
&lt;span class="c1"&gt;# the &amp;quot;preload&amp;quot; directive if you understand the implications.&lt;/span&gt;
&lt;span class="c1"&gt;#add_header Strict-Transport-Security &amp;quot;max-age=63072000; includeSubdomains; preload&amp;quot;;&lt;/span&gt;
&lt;span class="k"&gt;add_header&lt;/span&gt; &lt;span class="s"&gt;Strict-Transport-Security&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;max-age=63072000&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="k"&gt;includeSubdomains&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;add_header&lt;/span&gt; &lt;span class="s"&gt;X-Frame-Options&lt;/span&gt; &lt;span class="s"&gt;DENY&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;add_header&lt;/span&gt; &lt;span class="s"&gt;X-Content-Type-Options&lt;/span&gt; &lt;span class="s"&gt;nosniff&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;ssl_dhparam&lt;/span&gt; &lt;span class="s"&gt;/etc/ssl/certs/dhparam.pem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;For details on this configuration refer to Cipherli.st and Strong SSL Security on nginx&lt;/p&gt;
&lt;p&gt;The third file &lt;tt class="docutils literal"&gt;snippets/locations.conf&lt;/tt&gt; have several upstream locations, what is relevant in this context is this
part of the file&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;location&lt;/span&gt; &lt;span class="s"&gt;/wolfblog&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kn"&gt;try_files&lt;/span&gt; &lt;span class="nv"&gt;$uri&lt;/span&gt; &lt;span class="nv"&gt;$uri/&lt;/span&gt; &lt;span class="nv"&gt;$uri/index.html&lt;/span&gt; &lt;span class="nv"&gt;$uri.html&lt;/span&gt; &lt;span class="s"&gt;@wolfblog&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;location&lt;/span&gt; &lt;span class="s"&gt;@wolfblog&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;# proxy_pass http://rpi2.local:2368; Note, a static IP address makes nginx more robust in case rpi3 is not running&lt;/span&gt;
    &lt;span class="kn"&gt;proxy_pass&lt;/span&gt;        &lt;span class="s"&gt;http://192.168.1.51:2368&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;proxy_redirect&lt;/span&gt;    &lt;span class="no"&gt;off&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;proxy_set_header&lt;/span&gt;  &lt;span class="s"&gt;Host&lt;/span&gt; &lt;span class="nv"&gt;$host&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;proxy_set_header&lt;/span&gt;  &lt;span class="s"&gt;X-Real-IP&lt;/span&gt; &lt;span class="nv"&gt;$remote_addr&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;proxy_set_header&lt;/span&gt;  &lt;span class="s"&gt;X-Forwarded-For&lt;/span&gt; &lt;span class="nv"&gt;$proxy_add_x_forwarded_for&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;proxy_set_header&lt;/span&gt;  &lt;span class="s"&gt;X-Forwarded-Host&lt;/span&gt; &lt;span class="nv"&gt;$server_name&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that if my domain (www.viltstigen.se) is accessed with this URI: &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;https://www.viltstigen.se/wolfblog&lt;/span&gt;&lt;/tt&gt;,
the first section above kicks in. It tries, in order, to access any files stated in the URI, treat the URI as a
directory, access the file index.html in the URI location, and finally and file with extension &amp;quot;html&amp;quot; through the URI.
If nothing is found (the normal case) it upstreams to to the &amp;#64;wolfblog location that passes on to the rpi2 node on
port 2368 which has a static IP address of 192.168.1.52.&lt;/p&gt;
&lt;p&gt;When nginx files have been update, verify the configuration and restart&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo nginx -t
$ sudo systemctl restart nginx
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="automatic-renewal-of-certificate"&gt;
&lt;h2&gt;Automatic renewal of certificate&lt;/h2&gt;
&lt;p&gt;Certificates is valid during a finite time and hence needs to be renewed recurrently. We can do this manually through&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo /opt/letsencrypt/letsencrypt-auto renew

Saving debug log to /var/log/letsencrypt/letsencrypt.log

-------------------------------------------------------------------------------
Processing /etc/letsencrypt/renewal/www.viltstigen.se.conf
-------------------------------------------------------------------------------
Cert not yet due &lt;span class="k"&gt;for&lt;/span&gt; renewal

The following certs are not due &lt;span class="k"&gt;for&lt;/span&gt; renewal yet:
  /etc/letsencrypt/live/www.viltstigen.se/fullchain.pem &lt;span class="o"&gt;(&lt;/span&gt;skipped&lt;span class="o"&gt;)&lt;/span&gt;
No renewals were attempted.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To do this automatically and recurrently, add the following lines into /etc/crontab&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="m"&gt;30&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;    * * &lt;span class="m"&gt;1&lt;/span&gt;   root    /opt/letsencrypt/letsencrypt-auto renew &amp;gt;&amp;gt; /var/log/le-renew.log
&lt;span class="m"&gt;35&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;    * * &lt;span class="m"&gt;1&lt;/span&gt;   root    /bin/systemctl reload nginx
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This will create a new cron job that will execute the letsencrypt-auto renew command every Monday at 2:30 am,
and reload nginx at 2:35am (so the renewed certificate will be used).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="testing-ssl-configuration"&gt;
&lt;h2&gt;Testing SSL configuration&lt;/h2&gt;
&lt;p&gt;Now try the SSL configuration by pasting this URI into your web browser (exchange for your domain name):
&lt;a class="reference external" href="https://www.ssllabs.com/ssltest/analyze.html?d=www.viltstigen.se"&gt;https://www.ssllabs.com/ssltest/analyze.html?d=www.viltstigen.se&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
</content><category term="Technologies"></category><category term="Raspberry"></category><category term="SSH"></category><category term="HTTPS"></category></entry><entry><title>Pelican blog</title><link href="https://wlog.viltstigen.se/articles/2020/01/12/pelican-blog/" rel="alternate"></link><published>2020-01-12T00:00:00+01:00</published><updated>2020-05-01T00:00:00+02:00</updated><author><name>Mats Melander</name></author><id>tag:wlog.viltstigen.se,2020-01-12:/articles/2020/01/12/pelican-blog/</id><summary type="html">&lt;p&gt;Using &lt;a class="reference external" href="https://blog.getpelican.com/"&gt;Pelican&lt;/a&gt;  as blog software.
Follow installation instructions &lt;a class="reference external" href="https://docs.getpelican.com/en/stable/install.html"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I use &lt;strong&gt;rpi1&lt;/strong&gt;-node as front-end to external requests, but my production part of this blog resides on node &lt;strong&gt;rpi2&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="section" id="subdomain-management"&gt;
&lt;h2&gt;Subdomain management&lt;/h2&gt;
&lt;p&gt;I created a new subdomain to &lt;tt class="docutils literal"&gt;viltstigen.se&lt;/tt&gt; called &lt;tt class="docutils literal"&gt;wlog.viltstigen.se&lt;/tt&gt; at Binero. This was partly a necessity â€¦&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;p&gt;Using &lt;a class="reference external" href="https://blog.getpelican.com/"&gt;Pelican&lt;/a&gt;  as blog software.
Follow installation instructions &lt;a class="reference external" href="https://docs.getpelican.com/en/stable/install.html"&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I use &lt;strong&gt;rpi1&lt;/strong&gt;-node as front-end to external requests, but my production part of this blog resides on node &lt;strong&gt;rpi2&lt;/strong&gt;.&lt;/p&gt;
&lt;div class="section" id="subdomain-management"&gt;
&lt;h2&gt;Subdomain management&lt;/h2&gt;
&lt;p&gt;I created a new subdomain to &lt;tt class="docutils literal"&gt;viltstigen.se&lt;/tt&gt; called &lt;tt class="docutils literal"&gt;wlog.viltstigen.se&lt;/tt&gt; at Binero. This was partly a necessity due
to my configuration and how Pelican works (by default).
Pelican uses relative paths of getting resources, e.g. &lt;tt class="docutils literal"&gt;/theme/css/admonition.css&lt;/tt&gt;, not absolute URL paths.
I use nginx as proxy on rpi1, where my DynDNS is pointing to. An HTTP request to &lt;tt class="docutils literal"&gt;wlog.viltstigen.se&lt;/tt&gt; is directed
to this node. &lt;strong&gt;rpi1&lt;/strong&gt; is configured (see nginx configuration below) to forward the request to &lt;strong&gt;rpi2&lt;/strong&gt; where a nginx
web-server is running and will return requested resources through &lt;strong&gt;rpi1&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;If I would have had the blog on, for example, &lt;tt class="docutils literal"&gt;www.viltstigen.se/blog/index.html&lt;/tt&gt; (on my existing subdomain),
I could have configured nginx on rpi1 to forward all requests on the resource &lt;tt class="docutils literal"&gt;/blog/index.html&lt;/tt&gt; to &lt;strong&gt;rpi2&lt;/strong&gt;.
However all subsequent requests from the client would use paths relative to &lt;tt class="docutils literal"&gt;www.viltstigen.se&lt;/tt&gt; and thus fail.&lt;/p&gt;
&lt;p&gt;Example,  using &lt;strong&gt;www&lt;/strong&gt; subdomain instead of &lt;strong&gt;wlog&lt;/strong&gt;:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;https://www.viltstigen.se/blog/index.html&lt;/strong&gt; would include the link
&lt;strong&gt;https://www.viltstigen.se/theme/css/elegant.prod.css&lt;/strong&gt;.
As nginx would be configured to forward requests on &lt;strong&gt;/blog/&lt;/strong&gt; to &lt;strong&gt;rpi2&lt;/strong&gt; the subsequent resource request on
&lt;strong&gt;/theme/css/&lt;/strong&gt; would look locally at &lt;strong&gt;rpi1&lt;/strong&gt; rather than forwarding to &lt;strong&gt;rpi2&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Therefore, as I use the &lt;strong&gt;wlog&lt;/strong&gt; subdomain, and forward all requests on this subdomain from &lt;strong&gt;rpi1&lt;/strong&gt;
to &lt;strong&gt;rpi2&lt;/strong&gt;, the subsequent link in index.html is &lt;strong&gt;https://wlog.viltstigen.se/theme/css/elegant.prod.css&lt;/strong&gt;.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;As there is a new subdomain created, dynDNS at Binero needs to be updated accordingly, see
&lt;a class="reference external" href="https://wlog.viltstigen.se/articles/2020/01/11/dyndns/"&gt;DynDNS&lt;/a&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="using-ssl"&gt;
&lt;h2&gt;Using SSL&lt;/h2&gt;
&lt;p&gt;I want to enable &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Transport_Layer_Security"&gt;SSL&lt;/a&gt; so that
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/HTTPS"&gt;https&lt;/a&gt; can be used for my blog. A certificate is needed, for this purpose I use
&lt;a class="reference external" href="https://letsencrypt.org/"&gt;Let's Encrypt&lt;/a&gt;. In the nginx configuration on &lt;strong&gt;rpi1&lt;/strong&gt; HTTP-access is redirected to HTTPS.
The certificate is installed on rpi1. Below assumes that &lt;strong&gt;Let's Encrypt&lt;/strong&gt; software is already installed.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo ./letsencrypt-auto certonly -a webroot --webroot-path&lt;span class="o"&gt;=&lt;/span&gt;/usr/share/nginx/html -d wlog.viltstigen.se
/opt/eff.org/certbot/venv/local/lib/python2.7/site-packages/cryptography/hazmat/bindings/openssl/binding.py:163: CryptographyDeprecationWarning: OpenSSL version &lt;span class="m"&gt;1&lt;/span&gt;.0.1 is no longer supported by the OpenSSL project, please upgrade. The next version of cryptography will drop support &lt;span class="k"&gt;for&lt;/span&gt; it.
  utils.CryptographyDeprecationWarning
Saving debug log to /var/log/letsencrypt/letsencrypt.log
Plugins selected: Authenticator webroot, Installer None
Obtaining a new certificate
Performing the following challenges:
http-01 challenge &lt;span class="k"&gt;for&lt;/span&gt; wlog.viltstigen.se
Using the webroot path /usr/share/nginx/html &lt;span class="k"&gt;for&lt;/span&gt; all unmatched domains.
Waiting &lt;span class="k"&gt;for&lt;/span&gt; verification...
Cleaning up challenges

IMPORTANT NOTES:
 - Congratulations! Your certificate and chain have been saved at:
   /etc/letsencrypt/live/wlog.viltstigen.se/fullchain.pem
   Your key file has been saved at:
   /etc/letsencrypt/live/wlog.viltstigen.se/privkey.pem
   Your cert will expire on &lt;span class="m"&gt;2020&lt;/span&gt;-03-29. To obtain a new or tweaked
   version of this certificate in the future, simply run
   letsencrypt-auto again. To non-interactively renew *all* of your
   certificates, run &lt;span class="s2"&gt;&amp;quot;letsencrypt-auto renew&amp;quot;&lt;/span&gt;
 - If you like Certbot, please consider supporting our work by:

   Donating to ISRG / Let&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;s Encrypt:   https://letsencrypt.org/donate
   Donating to EFF:                    https://eff.org/donate-le
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Check auto-renewal of certificates by&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo /opt/letsencrypt/letsencrypt-auto renew
/opt/eff.org/certbot/venv/local/lib/python2.7/site-packages/cryptography/hazmat/bindings/openssl/binding.py:163: CryptographyDeprecationWarning: OpenSSL version &lt;span class="m"&gt;1&lt;/span&gt;.0.1 is no longer supported by the OpenSSL project, please upgrade. The next version of cryptography will drop support &lt;span class="k"&gt;for&lt;/span&gt; it.
  utils.CryptographyDeprecationWarning
Saving debug log to /var/log/letsencrypt/letsencrypt.log

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Processing /etc/letsencrypt/renewal/wlog.viltstigen.se.conf
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Cert not yet due &lt;span class="k"&gt;for&lt;/span&gt; renewal

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Processing /etc/letsencrypt/renewal/www.viltstigen.se.conf
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
Cert not yet due &lt;span class="k"&gt;for&lt;/span&gt; renewal

- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

The following certs are not due &lt;span class="k"&gt;for&lt;/span&gt; renewal yet:
  /etc/letsencrypt/live/wlog.viltstigen.se/fullchain.pem expires on &lt;span class="m"&gt;2020&lt;/span&gt;-03-29 &lt;span class="o"&gt;(&lt;/span&gt;skipped&lt;span class="o"&gt;)&lt;/span&gt;
  /etc/letsencrypt/live/www.viltstigen.se/fullchain.pem expires on &lt;span class="m"&gt;2020&lt;/span&gt;-03-29 &lt;span class="o"&gt;(&lt;/span&gt;skipped&lt;span class="o"&gt;)&lt;/span&gt;
No renewals were attempted.
- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In crontab on &lt;strong&gt;rpi1&lt;/strong&gt;, auto renenwal is executing by these lines&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="m"&gt;30&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;    * * &lt;span class="m"&gt;1&lt;/span&gt;   root    /opt/letsencrypt/letsencrypt-auto renew &amp;gt;&amp;gt; /var/log/le-renew.log
&lt;span class="m"&gt;35&lt;/span&gt; &lt;span class="m"&gt;2&lt;/span&gt;    * * &lt;span class="m"&gt;1&lt;/span&gt;   root    /bin/systemctl reload nginx
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="nginx-configuration"&gt;
&lt;h2&gt;nginx configuration&lt;/h2&gt;
&lt;p&gt;In &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;/etc/nginx/sites-enabled/wolfrax.conf&lt;/span&gt;&lt;/tt&gt; on &lt;strong&gt;rpi1&lt;/strong&gt; add these sections&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kn"&gt;listen&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;listen&lt;/span&gt; &lt;span class="s"&gt;[::]:80&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kn"&gt;server_name&lt;/span&gt; &lt;span class="s"&gt;wlog.viltstigen.se&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;# This will redirect http traffic to server below using https&lt;/span&gt;
    &lt;span class="kn"&gt;return&lt;/span&gt; &lt;span class="mi"&gt;301&lt;/span&gt; &lt;span class="s"&gt;https://&lt;/span&gt;&lt;span class="nv"&gt;$server_name$request_uri&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;

&lt;span class="k"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="c1"&gt;# Reverse proxy to rpi2.local (192.168.1.51)&lt;/span&gt;
    &lt;span class="kn"&gt;listen&lt;/span&gt; &lt;span class="mi"&gt;443&lt;/span&gt; &lt;span class="s"&gt;ssl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;listen&lt;/span&gt; &lt;span class="s"&gt;[::]:443&lt;/span&gt; &lt;span class="s"&gt;ssl&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kn"&gt;server_name&lt;/span&gt; &lt;span class="s"&gt;wlog.viltstigen.se&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="c1"&gt;# SSL configuration&lt;/span&gt;
    &lt;span class="kn"&gt;include&lt;/span&gt; &lt;span class="s"&gt;snippets/ssl-wlog.viltstigen.se.conf&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;include&lt;/span&gt; &lt;span class="s"&gt;snippets/ssl-params.conf&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="s"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="kn"&gt;proxy_pass&lt;/span&gt; &lt;span class="s"&gt;http://192.168.1.51&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt; &lt;span class="c1"&gt;# rpi2.local&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="s"&gt;/.well-known/&lt;/span&gt; &lt;span class="p"&gt;{}&lt;/span&gt;  &lt;span class="c1"&gt;# do not redirect for this directory, used by letsencrypt&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note the last row for &lt;strong&gt;location /.well-known/&lt;/strong&gt;, this exclude the directory &amp;quot;.well-known&amp;quot; which is used by
&lt;strong&gt;letsencrypt&lt;/strong&gt; when renewing the cerificate. (letsencrypt stores information in this directory when renewing the
certificate, hence we should not move requests upstreams or the renewal will fail).&lt;/p&gt;
&lt;p&gt;In snippets-directory on &lt;strong&gt;rpi1&lt;/strong&gt; add file &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;ssl-wlog-viltstigen.se.conf&lt;/span&gt;&lt;/tt&gt; with this content&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;ssl_certificate&lt;/span&gt; &lt;span class="s"&gt;/etc/letsencrypt/live/wlog.viltstigen.se/fullchain.pem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;span class="k"&gt;ssl_certificate_key&lt;/span&gt; &lt;span class="s"&gt;/etc/letsencrypt/live/wlog.viltstigen.se/privkey.pem&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;No need to update &amp;quot;ssl-params.conf&amp;quot; file on &lt;strong&gt;rpi1&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;Softlink the file (as I use a separate directory structure for my nginx files)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo ln -s /home/pi/rpi1/etc/nginx/snippets/ssl-wlog.viltstigen.se.conf /etc/nginx/snippets/ssl-wlog.viltstigen.se.conf
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Check nginx and restart&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo nginx -t
nginx: the configuration file /etc/nginx/nginx.conf syntax is ok
nginx: configuration file /etc/nginx/nginx.conf &lt;span class="nb"&gt;test&lt;/span&gt; is successful
$ sudo systemctl restart nginx
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;On &lt;strong&gt;rpi2&lt;/strong&gt;, create a new file &lt;tt class="docutils literal"&gt;wolfrax.conf&lt;/tt&gt; with this content (&lt;tt class="docutils literal"&gt;/clover/&lt;/tt&gt; is used for another web application, not
connected to Pelican blog, on &lt;strong&gt;rpi2&lt;/strong&gt;).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;server&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="kn"&gt;listen&lt;/span&gt; &lt;span class="mi"&gt;80&lt;/span&gt; &lt;span class="s"&gt;default_server&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="kn"&gt;listen&lt;/span&gt; &lt;span class="s"&gt;[::]:80&lt;/span&gt; &lt;span class="s"&gt;default_server&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kn"&gt;root&lt;/span&gt; &lt;span class="s"&gt;/var/www/html&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kn"&gt;index&lt;/span&gt; &lt;span class="s"&gt;index.html&lt;/span&gt; &lt;span class="s"&gt;index.htm&lt;/span&gt; &lt;span class="s"&gt;index.nginx-debian.html&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kn"&gt;server_name&lt;/span&gt; &lt;span class="s"&gt;_&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;

    &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="s"&gt;/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;# First attempt to serve request as file, then&lt;/span&gt;
        &lt;span class="c1"&gt;# as directory, then fall back to displaying a 404.&lt;/span&gt;
        &lt;span class="kn"&gt;root&lt;/span&gt; &lt;span class="s"&gt;/home/pi/app/wlog/&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kn"&gt;try_files&lt;/span&gt; &lt;span class="nv"&gt;$uri&lt;/span&gt; &lt;span class="nv"&gt;$uri/&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;

    &lt;span class="kn"&gt;location&lt;/span&gt; &lt;span class="s"&gt;/clover/&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
        &lt;span class="c1"&gt;# First attempt to serve request as file, then&lt;/span&gt;
        &lt;span class="c1"&gt;# as directory, then fall back to displaying a 404.&lt;/span&gt;
        &lt;span class="kn"&gt;root&lt;/span&gt; &lt;span class="s"&gt;/var/www/html/&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
        &lt;span class="kn"&gt;try_files&lt;/span&gt; &lt;span class="nv"&gt;$uri&lt;/span&gt; &lt;span class="nv"&gt;$uri/&lt;/span&gt; &lt;span class="p"&gt;=&lt;/span&gt;&lt;span class="mi"&gt;404&lt;/span&gt;&lt;span class="p"&gt;;&lt;/span&gt;
    &lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using the files in the RPi-project, soft link files&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;$&lt;/span&gt; &lt;span class="s"&gt;sudo&lt;/span&gt; &lt;span class="s"&gt;mv&lt;/span&gt; &lt;span class="s"&gt;/etc/nginx/nginx.conf&lt;/span&gt; &lt;span class="s"&gt;/etc/nginx/nginx.conf_OLD&lt;/span&gt;
$ &lt;span class="s"&gt;sudo&lt;/span&gt; &lt;span class="s"&gt;rm&lt;/span&gt; &lt;span class="s"&gt;/etc/nginx/sites-enabled/default&lt;/span&gt;  &lt;span class="c1"&gt;# Remove default config, softlinked from sites-available, if exists&lt;/span&gt;
$ &lt;span class="s"&gt;sudo&lt;/span&gt; &lt;span class="s"&gt;ln&lt;/span&gt; &lt;span class="s"&gt;-s&lt;/span&gt; &lt;span class="s"&gt;/home/pi/rpi2/etc/nginx/nginx.conf&lt;/span&gt; &lt;span class="s"&gt;/etc/nginx/nginx.conf&lt;/span&gt;
$ &lt;span class="s"&gt;sudo&lt;/span&gt; &lt;span class="s"&gt;ln&lt;/span&gt; &lt;span class="s"&gt;-s&lt;/span&gt; &lt;span class="s"&gt;/home/pi/rpi2/etc/nginx/sites-enabled/wolfrax.conf&lt;/span&gt; &lt;span class="s"&gt;/etc/nginx/sites-enabled/wolfrax.conf&lt;/span&gt;
$ &lt;span class="s"&gt;sudo&lt;/span&gt; &lt;span class="s"&gt;nginx&lt;/span&gt; &lt;span class="s"&gt;-t&lt;/span&gt;
&lt;span class="s"&gt;nginx:&lt;/span&gt; &lt;span class="s"&gt;the&lt;/span&gt; &lt;span class="s"&gt;configuration&lt;/span&gt; &lt;span class="s"&gt;file&lt;/span&gt; &lt;span class="s"&gt;/etc/nginx/nginx.conf&lt;/span&gt; &lt;span class="s"&gt;syntax&lt;/span&gt; &lt;span class="s"&gt;is&lt;/span&gt; &lt;span class="s"&gt;ok&lt;/span&gt;
&lt;span class="s"&gt;nginx:&lt;/span&gt; &lt;span class="s"&gt;configuration&lt;/span&gt; &lt;span class="s"&gt;file&lt;/span&gt; &lt;span class="s"&gt;/etc/nginx/nginx.conf&lt;/span&gt; &lt;span class="s"&gt;test&lt;/span&gt; &lt;span class="s"&gt;is&lt;/span&gt; &lt;span class="s"&gt;successful&lt;/span&gt;
$ &lt;span class="s"&gt;sudo&lt;/span&gt; &lt;span class="s"&gt;service&lt;/span&gt; &lt;span class="s"&gt;nginx&lt;/span&gt; &lt;span class="s"&gt;restart&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="pelican-settings"&gt;
&lt;h2&gt;Pelican settings&lt;/h2&gt;
&lt;p&gt;Using a PyCharm project &lt;strong&gt;wlog&lt;/strong&gt; for blog updates, create new directories under &lt;tt class="docutils literal"&gt;wlog/content/&lt;/tt&gt;:
'pdf', 'img', 'articles', 'pages'. Then update &lt;tt class="docutils literal"&gt;pelicanconf.py&lt;/tt&gt; with&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="n"&gt;SOCIAL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Email&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;mats.melander@gmail.com&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;Github&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://github.com/wolfrax&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),)&lt;/span&gt;

&lt;span class="n"&gt;THEME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;elegant&amp;quot;&lt;/span&gt;

&lt;span class="n"&gt;ARTICLE_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;articles&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;STATIC_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;img&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pdf&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;extra&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;PAGE_PATHS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;pages&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="n"&gt;ARTICLE_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;articles/{date:%Y}/{date:%m}/{date:&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt;}/&lt;/span&gt;&lt;span class="si"&gt;{slug}&lt;/span&gt;&lt;span class="s1"&gt;/&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;ARTICLE_SAVE_AS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;articles/{date:%Y}/{date:%m}/{date:&lt;/span&gt;&lt;span class="si"&gt;%d&lt;/span&gt;&lt;span class="s1"&gt;}/&lt;/span&gt;&lt;span class="si"&gt;{slug}&lt;/span&gt;&lt;span class="s1"&gt;/index.html&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;PAGE_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pages/&lt;/span&gt;&lt;span class="si"&gt;{slug}&lt;/span&gt;&lt;span class="s1"&gt;/&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;PAGE_SAVE_AS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;pages/&lt;/span&gt;&lt;span class="si"&gt;{slug}&lt;/span&gt;&lt;span class="s1"&gt;/index.html&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;CATEGORY_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;category/&lt;/span&gt;&lt;span class="si"&gt;{slug}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;CATEGORY_SAVE_AS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;category/&lt;/span&gt;&lt;span class="si"&gt;{slug}&lt;/span&gt;&lt;span class="s1"&gt;/index.html&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;TAG_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;tag/&lt;/span&gt;&lt;span class="si"&gt;{slug}&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;TAG_SAVE_AS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;tag/&lt;/span&gt;&lt;span class="si"&gt;{slug}&lt;/span&gt;&lt;span class="s1"&gt;/index.html&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;EXTRA_PATH_METADATA&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;extra/robots.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;path&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;robots.txt&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
    &lt;span class="s1"&gt;&amp;#39;extra/favicon.ico&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;path&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;favicon.ico&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
</content><category term="Technologies"></category><category term="Blog"></category><category term="Pelican"></category></entry><entry><title>DynDNS</title><link href="https://wlog.viltstigen.se/articles/2020/01/11/dyndns/" rel="alternate"></link><published>2020-01-11T00:00:00+01:00</published><updated>2020-01-11T00:00:00+01:00</updated><author><name>Mats Melander</name></author><id>tag:wlog.viltstigen.se,2020-01-11:/articles/2020/01/11/dyndns/</id><summary type="html">&lt;p&gt;I use the domain &lt;a class="reference external" href="viltstigen.se"&gt;viltstigen.se&lt;/a&gt; with the obvious subdomain &lt;a class="reference external" href="www.viltstigen.se"&gt;www.viltstigen.se&lt;/a&gt;.
For this blog I have also included the subdomain &lt;a class="reference external" href="wlog.viltstigen.se"&gt;wlog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Both domains are registered at &lt;a class="reference external" href="https://www.binero.se/"&gt;Binero&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I am also using Binero dynamic DNS service as I don't have a static by my ISP.
My router does not â€¦&lt;/p&gt;</summary><content type="html">&lt;p&gt;I use the domain &lt;a class="reference external" href="viltstigen.se"&gt;viltstigen.se&lt;/a&gt; with the obvious subdomain &lt;a class="reference external" href="www.viltstigen.se"&gt;www.viltstigen.se&lt;/a&gt;.
For this blog I have also included the subdomain &lt;a class="reference external" href="wlog.viltstigen.se"&gt;wlog&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Both domains are registered at &lt;a class="reference external" href="https://www.binero.se/"&gt;Binero&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I am also using Binero dynamic DNS service as I don't have a static by my ISP.
My router does not have a dynamic DNS client included.&lt;/p&gt;
&lt;p&gt;To keep the dynamic WAN IP address of my router updated to Binero DNS I have added this to rpi1 crontab&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="m"&gt;00&lt;/span&gt; *    * * *   curl -n -d &lt;span class="s1"&gt;&amp;#39;hostname=www.viltstigen.se&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://dyndns.binero.se/nic/update&amp;#39;&lt;/span&gt; &amp;gt;/dev/null &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;span class="m"&gt;00&lt;/span&gt; *    * * *   curl -n -d &lt;span class="s1"&gt;&amp;#39;hostname=wlog.viltstigen.se&amp;#39;&lt;/span&gt; &lt;span class="s1"&gt;&amp;#39;https://dyndns.binero.se/nic/update&amp;#39;&lt;/span&gt;&amp;gt;/dev/null &lt;span class="m"&gt;2&lt;/span&gt;&amp;gt;&lt;span class="p"&gt;&amp;amp;&lt;/span&gt;&lt;span class="m"&gt;1&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-n&lt;/span&gt;&lt;/tt&gt; option assume that a &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.netrc&lt;/span&gt;&lt;/tt&gt; exists in the home directory of the current user (pi).
Change permission by &lt;tt class="docutils literal"&gt;$ chmod go= &lt;span class="pre"&gt;~/.netrc`&lt;/span&gt;&lt;/tt&gt;
Content for &lt;tt class="docutils literal"&gt;.netrc&lt;/tt&gt;:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;machine dyndns.binero.se login mats.melander@gmail.com password XXX
machine dyndns.binero.se login mats.melander@gmail.com password XXX
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Using &lt;tt class="docutils literal"&gt;curl&lt;/tt&gt; is inline with Binero documentation, running every hour. It will make a POST using the information after
the -d option. curl should return &amp;quot;good&amp;quot; or &amp;quot;nchg&amp;quot;, but the crontab rows directs to /dev/null, so not visible in syslog.&lt;/p&gt;
&lt;p&gt;Note Do not add a DSN record for &lt;tt class="docutils literal"&gt;www.viltstigen.se&lt;/tt&gt; manually at Binero, if this is made the DynDNS will not work.
The curl command above will add the subdomain &lt;tt class="docutils literal"&gt;www&lt;/tt&gt; to the domain &lt;tt class="docutils literal"&gt;viltstigen.se&lt;/tt&gt; and then it will be visible in the
DNS table at Binero. Same thing for the subdomain &lt;tt class="docutils literal"&gt;wlog.viltstigen.se&lt;/tt&gt; of course.&lt;/p&gt;
</content><category term="Technologies"></category><category term="DNS"></category></entry><entry><title>SSH</title><link href="https://wlog.viltstigen.se/articles/2020/01/11/ssh/" rel="alternate"></link><published>2020-01-11T00:00:00+01:00</published><updated>2020-03-02T00:00:00+01:00</updated><author><name>Mats Melander</name></author><id>tag:wlog.viltstigen.se,2020-01-11:/articles/2020/01/11/ssh/</id><summary type="html">&lt;div class="section" id="session-without-password"&gt;
&lt;h2&gt;Session without password&lt;/h2&gt;
&lt;p&gt;This describes how to connect with &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Secure_Shell"&gt;SSH&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To not provide password manually a public/private keys can be generated and stored at appropriate directories in host
(private key) and target (public key).&lt;/p&gt;
&lt;p&gt;To generate keys on my MacBook and then store the public key on the raspberry â€¦&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="session-without-password"&gt;
&lt;h2&gt;Session without password&lt;/h2&gt;
&lt;p&gt;This describes how to connect with &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Secure_Shell"&gt;SSH&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;To not provide password manually a public/private keys can be generated and stored at appropriate directories in host
(private key) and target (public key).&lt;/p&gt;
&lt;p&gt;To generate keys on my MacBook and then store the public key on the raspberry host rpi1 do&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ssh-keygen -t rsa -C pi@rpi1
$ cat ~/.ssh/id_rsa.pub &lt;span class="p"&gt;|&lt;/span&gt; ssh pi@rpi1.local &lt;span class="s1"&gt;&amp;#39;cat &amp;gt;&amp;gt; .ssh/authorized_keys&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Note that the last command transfer the public key to rpi1 using ssh and store it in file &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.ssh/authorized_keys&lt;/span&gt;&lt;/tt&gt;.
This will invoke to provide password for SSH.&lt;/p&gt;
&lt;p&gt;Make sure that directory &lt;tt class="docutils literal"&gt;.ssh&lt;/tt&gt; exists on home directory for user pi at the raspberry host rpi1.
If not do &lt;tt class="docutils literal"&gt;$ install &lt;span class="pre"&gt;-d&lt;/span&gt; &lt;span class="pre"&gt;-m&lt;/span&gt; 700 &lt;span class="pre"&gt;~/.ssh&lt;/span&gt;&lt;/tt&gt; at the rpi1 first&lt;/p&gt;
&lt;p&gt;Note, if file &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.ssh/id_rsa.pub&lt;/span&gt;&lt;/tt&gt; already exists at host (Mac) there is no need to do ssh-keygen, simply do the last
command above ($ cat ~/.ssh...).&lt;/p&gt;
&lt;p&gt;To remove an entry in &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.ssh/known_hosts&lt;/span&gt;&lt;/tt&gt; do&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ssh-keygen -R rpi1.local
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;See &lt;a class="reference external" href="https://www.raspberrypi.org/documentation/remote-access/ssh/passwordless.md"&gt;SSH passwordless&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;If ssh tries to connect to a known IP address but receives a different ssh key from the one it got before,
it makes sense to treat this as a possible security problem and refuse to connect. This can happen if there is a new
installation of Raspbian and most commonly manifests by the ssh client reporting something like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
@    WARNING: REMOTE HOST IDENTIFICATION HAS CHANGED!     @
@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
IT IS POSSIBLE THAT SOMEONE IS DOING SOMETHING NASTY!
Someone could be eavesdropping on you right now &lt;span class="o"&gt;(&lt;/span&gt;man-in-the-middle attack&lt;span class="o"&gt;)&lt;/span&gt;!
It is also possible that a host key has just been changed.
The fingerprint &lt;span class="k"&gt;for&lt;/span&gt; the ECDSA key sent by the remote host is
...
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To mitigate this the local ssh client file &lt;tt class="docutils literal"&gt;known_hosts&lt;/tt&gt; needs to be updated. Do this locally (Mac) assuming the
issues occur while using ssh vs host 192.168.1.50 (rpi1.loca.).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ssh-keyscan &lt;span class="m"&gt;192&lt;/span&gt;.168.1.50 &amp;gt;&amp;gt; ~/.ssh/known_hosts
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;If the IP address or the node name (e.g. &amp;quot;192.168.1.50&amp;quot; or &amp;quot;rpi1.local&amp;quot;) has been used before, an error message might
occur. To find out which entry is for a known hostname in known_hosts:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ssh-keygen -H  -F &amp;lt;hostname or IP address&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To delete a single entry from known_hosts (remove both IP address and node name as needed:&lt;/p&gt;
&lt;blockquote&gt;
$ ssh-keygen -R &amp;lt;hostname or IP address&amp;gt;&lt;/blockquote&gt;
&lt;p&gt;Then re-do the command &lt;cite&gt;$ ssh-keyscan 192.168.1.50 &amp;gt;&amp;gt; ~/.ssh/known_hosts&lt;/cite&gt;.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="github-ssh-access"&gt;
&lt;h2&gt;Github ssh access&lt;/h2&gt;
&lt;p&gt;On Raspberry Pi do (see &lt;a class="reference external" href="https://help.github.com/articles/generating-ssh-keys/"&gt;https://help.github.com/articles/generating-ssh-keys/&lt;/a&gt;)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ssh-keygen -t rsa -b &lt;span class="m"&gt;4096&lt;/span&gt; -C &lt;span class="s2"&gt;&amp;quot;mats.melander@gmail.com&amp;quot;&lt;/span&gt; &lt;span class="c1"&gt;# Generate public/private rsa keys in ~/.ssh directory&lt;/span&gt;
$ &lt;span class="nb"&gt;eval&lt;/span&gt; &lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;&lt;span class="k"&gt;$(&lt;/span&gt;ssh-agent -s&lt;span class="k"&gt;)&lt;/span&gt;&lt;span class="s2"&gt;&amp;quot;&lt;/span&gt;                                 &lt;span class="c1"&gt;# Make sure ssh is running, should respond &amp;quot;Agent pid 12693&amp;quot;&lt;/span&gt;
$ ssh-add ~/.ssh/id_rsa
$ cat .ssh/id_rsa.pub                                    &lt;span class="c1"&gt;# List content, copy the content&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Go to github and login, under settings/SSH keys, do &amp;quot;add new key&amp;quot;. Copy content from the public key.&lt;/p&gt;
&lt;p&gt;Verify on RPi with&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ ssh -T git@github.com
Warning: Permanently added the RSA host key &lt;span class="k"&gt;for&lt;/span&gt; IP address &lt;span class="s1"&gt;&amp;#39;192.30.252.128&amp;#39;&lt;/span&gt; to the list of known hosts.
Hi Wolfrax! You&lt;span class="err"&gt;&amp;#39;&lt;/span&gt;ve successfully authenticated, but GitHub does not provide shell access.
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To have github working with ssh rather than https do (see &lt;a class="reference external" href="https://help.github.com/articles/changing-a-remote-s-url/"&gt;https://help.github.com/articles/changing-a-remote-s-url/&lt;/a&gt;,
below is valid for user Wolfrax and repository &amp;quot;Swind&amp;quot;)&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ git remote -v
origin&lt;span class="se"&gt;\ &lt;/span&gt;    https://github.com/Wolfrax/Swind.git &lt;span class="o"&gt;(&lt;/span&gt;fetch&lt;span class="o"&gt;)&lt;/span&gt;
origin&lt;span class="se"&gt;\ &lt;/span&gt;    https://github.com/Wolfrax/Swind.git &lt;span class="o"&gt;(&lt;/span&gt;push&lt;span class="o"&gt;)&lt;/span&gt;
$ git remote set-url origin git@github.com:Wolfrax/Swind.git
$ git remote -v
origin&lt;span class="se"&gt;\ &lt;/span&gt;    git@github.com:Wolfrax/Swind.git &lt;span class="o"&gt;(&lt;/span&gt;fetch&lt;span class="o"&gt;)&lt;/span&gt;
origin&lt;span class="se"&gt;\ &lt;/span&gt;    git@github.com:Wolfrax/Swind.git &lt;span class="o"&gt;(&lt;/span&gt;push&lt;span class="o"&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="osx"&gt;
&lt;h2&gt;OSX&lt;/h2&gt;
&lt;p&gt;On Mac OSX, I made the following update to &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;~/.ssh/config&lt;/span&gt;&lt;/tt&gt; (user config file, the system wide file is on
/etc/ssh/ssh_config, or equivalently /private/etc/ssh/ssh_config).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;AddressFamily inet
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This forces ssh to use IPv4 only, default value is &amp;quot;any&amp;quot; which enables both IPv4 and IPv6. I had some trouble with
one Raspberry (rpi2, 192.168.1.51) when using &lt;tt class="docutils literal"&gt;$ ssh pi&amp;#64;rpi2.local&lt;/tt&gt;. When debugging (using &lt;tt class="docutils literal"&gt;$ ssh &lt;span class="pre"&gt;-vvv&lt;/span&gt; pi&amp;#64;rpi2.local
``) it turned out that ``rpi2.local&lt;/tt&gt; were translated into an IPv6 address instead of an IPv4
for unknown reasons. Using an IPv6, ssh command had to timeout then it retried with a correct IPv4 address instead and
connected successfully. This caused and a long connection time.&lt;/p&gt;
&lt;p&gt;For my other raspberries, this has not been a problem. I have not digged further into why this became a problem for
&lt;strong&gt;rpi2&lt;/strong&gt; only.&lt;/p&gt;
&lt;/div&gt;
</content><category term="Technologies"></category><category term="Raspberry"></category><category term="SSH"></category></entry><entry><title>Raspberry setup</title><link href="https://wlog.viltstigen.se/articles/2020/01/05/raspberry-setup/" rel="alternate"></link><published>2020-01-05T00:00:00+01:00</published><updated>2020-02-09T00:00:00+01:00</updated><author><name>Mats Melander</name></author><id>tag:wlog.viltstigen.se,2020-01-05:/articles/2020/01/05/raspberry-setup/</id><summary type="html">&lt;div class="section" id="setup-raspbian"&gt;
&lt;h2&gt;Setup Raspbian&lt;/h2&gt;
&lt;p&gt;Using &lt;a class="reference external" href="https://www.raspberrypi.org/downloads/noobs/"&gt;NOOBS&lt;/a&gt; to install
&lt;a class="reference external" href="https://www.raspbian.org/RaspbianAbout"&gt;Raspian&lt;/a&gt;. A SD card (&amp;gt;= 16GB) is needed.&lt;/p&gt;
&lt;p&gt;Download NOOBS and unzip it, then format the SD card. I use a MacBook, with the
application &lt;a class="reference external" href="https://www.sdcard.org/downloads/index.html"&gt;&amp;quot;SDFormatter&amp;quot;&lt;/a&gt;, use the option &amp;quot;Overwrite Format&amp;quot;
(not &amp;quot;Quick Format&amp;quot;). When done, copy all files in the NOOBS root directory to â€¦&lt;/p&gt;&lt;/div&gt;</summary><content type="html">&lt;div class="section" id="setup-raspbian"&gt;
&lt;h2&gt;Setup Raspbian&lt;/h2&gt;
&lt;p&gt;Using &lt;a class="reference external" href="https://www.raspberrypi.org/downloads/noobs/"&gt;NOOBS&lt;/a&gt; to install
&lt;a class="reference external" href="https://www.raspbian.org/RaspbianAbout"&gt;Raspian&lt;/a&gt;. A SD card (&amp;gt;= 16GB) is needed.&lt;/p&gt;
&lt;p&gt;Download NOOBS and unzip it, then format the SD card. I use a MacBook, with the
application &lt;a class="reference external" href="https://www.sdcard.org/downloads/index.html"&gt;&amp;quot;SDFormatter&amp;quot;&lt;/a&gt;, use the option &amp;quot;Overwrite Format&amp;quot;
(not &amp;quot;Quick Format&amp;quot;). When done, copy all files in the NOOBS root directory to the SD card, plug it into the Raspberry
and start it up. A self-explaining menu with OS'es to choose from appear.&lt;/p&gt;
&lt;p&gt;Install Raspbian.&lt;/p&gt;
&lt;p&gt;Once done, some configuration is needed to setup the environment to my liking.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="configure"&gt;
&lt;h2&gt;Configure&lt;/h2&gt;
&lt;p&gt;Note that below, at least some of it, can also be made through the Raspberry UI (Gnome).&lt;/p&gt;
&lt;div class="section" id="bashrc"&gt;
&lt;h3&gt;bashrc&lt;/h3&gt;
&lt;p&gt;The bash-shell reads &lt;tt class="docutils literal"&gt;/etc/profile&lt;/tt&gt; which in turn reads &lt;tt class="docutils literal"&gt;/etc/bash.bashrc&lt;/tt&gt;. These are the system-wide files.
Add this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;ll&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ls -l --color=auto&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;la&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ls -A --color=auto&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;l&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ls -CF --color=auto&amp;#39;&lt;/span&gt;
&lt;span class="nb"&gt;alias&lt;/span&gt; &lt;span class="nv"&gt;ls&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s1"&gt;&amp;#39;ls -l --color=auto&amp;#39;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Reload by:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ &lt;span class="nb"&gt;source&lt;/span&gt; ~/.bashrc
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="hostname"&gt;
&lt;h3&gt;hostname&lt;/h3&gt;
&lt;p&gt;Change the hostname to rpi1.&lt;/p&gt;
&lt;p&gt;Edit &lt;tt class="docutils literal"&gt;/etc/hosts&lt;/tt&gt;, change last row which states &lt;tt class="docutils literal"&gt;127.0.1.1 raspberrypi&lt;/tt&gt; to &lt;tt class="docutils literal"&gt;127.0.1.1 rpi1&lt;/tt&gt;.
Then edit &lt;tt class="docutils literal"&gt;/etc/hostname&lt;/tt&gt; and add the wanted host name (rpi1).
Make it take effect:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo /etc/init.d/hostname.sh
$ sudo reboot
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="timezone-and-locale"&gt;
&lt;h3&gt;Timezone and Locale&lt;/h3&gt;
&lt;p&gt;To update to correct timezone (use &lt;tt class="docutils literal"&gt;$ date&lt;/tt&gt; to check), do &lt;tt class="docutils literal"&gt;$ sudo &lt;span class="pre"&gt;dpkg-reconfigure&lt;/span&gt; tzdata&lt;/tt&gt;&lt;/p&gt;
&lt;p&gt;If you get &lt;tt class="docutils literal"&gt;&lt;span class="pre"&gt;-bash:&lt;/span&gt; warning: setlocale: LC_ALL: cannot change locale &lt;span class="pre"&gt;(en_US.UTF-8)&lt;/span&gt;&lt;/tt&gt; message at login then
do &lt;tt class="docutils literal"&gt;$ sudo &lt;span class="pre"&gt;dpkg-reconfigure&lt;/span&gt; locales&lt;/tt&gt;, make sure that &amp;quot;en_US.UTF-8&amp;quot; is selected.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="firewall-ufw"&gt;
&lt;h3&gt;Firewall (UFW)&lt;/h3&gt;
&lt;p&gt;Use UFW (Uncomplicated Firewall) as firewall protection, a good summary is &lt;a class="reference external" href="https://www.digitalocean.com/community/tutorials/how-to-setup-a-firewall-with-ufw-on-an-ubuntu-and-debian-cloud-server"&gt;here&lt;/a&gt;.
Some commands:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install ufw
$ sudo ufw disable
$ sudo ufw &lt;span class="nb"&gt;enable&lt;/span&gt;
$ sudo ufw allow ssh                  &lt;span class="c1"&gt;# allow for ssh traffic on port 22, equivalent $ sudo ufw allow 22/tcp&lt;/span&gt;
$ sudo ufw delete allow ssh           &lt;span class="c1"&gt;# Remove ssh traffic&lt;/span&gt;
$ sudo sudo ufw allow www             &lt;span class="c1"&gt;# allow www traffic on port 80&lt;/span&gt;
$ sudo ufw allow from &lt;span class="m"&gt;192&lt;/span&gt;.168.1.0/24  &lt;span class="c1"&gt;# allow all nodes on subnet 192.168.1.X&lt;/span&gt;
$ sudo ufw reset                      &lt;span class="c1"&gt;# Reset everything&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;My setup on one Raspberry (there is a difference between each Raspberry Pi node, as I have different ports open for web
applications).&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo ufw allow from &lt;span class="m"&gt;192&lt;/span&gt;.168.1.0/24 to any port &lt;span class="m"&gt;80&lt;/span&gt;   &lt;span class="c1"&gt;# Web server, HTTP&lt;/span&gt;
$ sudo ufw allow from &lt;span class="m"&gt;192&lt;/span&gt;.168.1.0/24 to any port &lt;span class="m"&gt;443&lt;/span&gt;  &lt;span class="c1"&gt;# Web server, HTTPS&lt;/span&gt;
$ sudo ufw allow from &lt;span class="m"&gt;192&lt;/span&gt;.168.1.0/24 to any port &lt;span class="m"&gt;22&lt;/span&gt;   &lt;span class="c1"&gt;# SSH&lt;/span&gt;
$ sudo ufw allow from &lt;span class="m"&gt;192&lt;/span&gt;.168.1.0/24 to any port &lt;span class="m"&gt;8094&lt;/span&gt; &lt;span class="c1"&gt;# Web app&lt;/span&gt;
$ sudo ufw allow from &lt;span class="m"&gt;192&lt;/span&gt;.168.1.0/24 to any port &lt;span class="m"&gt;8096&lt;/span&gt; &lt;span class="c1"&gt;# Web app&lt;/span&gt;
$ sudo ufw status
Status: active

To                         Action      From
--                         ------      ----
&lt;span class="m"&gt;8094&lt;/span&gt;                       ALLOW       &lt;span class="m"&gt;192&lt;/span&gt;.168.1.0/24
&lt;span class="m"&gt;80&lt;/span&gt;                         ALLOW       &lt;span class="m"&gt;192&lt;/span&gt;.168.1.0/24
&lt;span class="m"&gt;443&lt;/span&gt;                        ALLOW       &lt;span class="m"&gt;192&lt;/span&gt;.168.1.0/24
&lt;span class="m"&gt;22&lt;/span&gt;                         ALLOW       &lt;span class="m"&gt;192&lt;/span&gt;.168.1.0/24
&lt;span class="m"&gt;8096&lt;/span&gt;                       ALLOW       &lt;span class="m"&gt;192&lt;/span&gt;.168.1.0/24
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="networking"&gt;
&lt;h3&gt;Networking&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Netstat"&gt;netstat&lt;/a&gt; used for displaying information on network connections. Example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo netstat --tcp --listening --programs --numeric
Active Internet connections &lt;span class="o"&gt;(&lt;/span&gt;only servers&lt;span class="o"&gt;)&lt;/span&gt;
Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name
tcp        &lt;span class="m"&gt;0&lt;/span&gt;      &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;.0.0.0:8094            &lt;span class="m"&gt;0&lt;/span&gt;.0.0.0:*               LISTEN      &lt;span class="m"&gt;3525&lt;/span&gt;/python
tcp        &lt;span class="m"&gt;0&lt;/span&gt;      &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;.0.0.0:8096            &lt;span class="m"&gt;0&lt;/span&gt;.0.0.0:*               LISTEN      &lt;span class="m"&gt;4338&lt;/span&gt;/python3
tcp        &lt;span class="m"&gt;0&lt;/span&gt;      &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;.0.0.0:5900            &lt;span class="m"&gt;0&lt;/span&gt;.0.0.0:*               LISTEN      &lt;span class="m"&gt;373&lt;/span&gt;/vncserver-x11-c
tcp        &lt;span class="m"&gt;0&lt;/span&gt;      &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;.0.0.0:80              &lt;span class="m"&gt;0&lt;/span&gt;.0.0.0:*               LISTEN      &lt;span class="m"&gt;11194&lt;/span&gt;/nginx: master
tcp        &lt;span class="m"&gt;0&lt;/span&gt;      &lt;span class="m"&gt;0&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;.0.0.0:22              &lt;span class="m"&gt;0&lt;/span&gt;.0.0.0:*               LISTEN      &lt;span class="m"&gt;383&lt;/span&gt;/sshd
tcp6       &lt;span class="m"&gt;0&lt;/span&gt;      &lt;span class="m"&gt;0&lt;/span&gt; :::548                  :::*                    LISTEN      &lt;span class="m"&gt;1458&lt;/span&gt;/afpd
tcp6       &lt;span class="m"&gt;0&lt;/span&gt;      &lt;span class="m"&gt;0&lt;/span&gt; :::5900                 :::*                    LISTEN      &lt;span class="m"&gt;373&lt;/span&gt;/vncserver-x11-c
tcp6       &lt;span class="m"&gt;0&lt;/span&gt;      &lt;span class="m"&gt;0&lt;/span&gt; :::80                   :::*                    LISTEN      &lt;span class="m"&gt;11194&lt;/span&gt;/nginx: master
tcp6       &lt;span class="m"&gt;0&lt;/span&gt;      &lt;span class="m"&gt;0&lt;/span&gt; :::22                   :::*                    LISTEN      &lt;span class="m"&gt;383&lt;/span&gt;/sshd
tcp6       &lt;span class="m"&gt;0&lt;/span&gt;      &lt;span class="m"&gt;0&lt;/span&gt; ::1:4700                :::*                    LISTEN      &lt;span class="m"&gt;1459&lt;/span&gt;/cnid_metad
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;To check DNS use &lt;a class="reference external" href="https://en.wikipedia.org/wiki/Dig_(command)"&gt;dig&lt;/a&gt; or
&lt;a class="reference external" href="https://en.wikipedia.org/wiki/Nslookup"&gt;nslookup&lt;/a&gt;. Need to install &lt;tt class="docutils literal"&gt;dnsutils&lt;/tt&gt; to use them. Example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install dnsutils
$ dig www.viltstigen.se

&lt;span class="p"&gt;;&lt;/span&gt; &amp;lt;&amp;lt;&amp;gt;&amp;gt; DiG &lt;span class="m"&gt;9&lt;/span&gt;.9.5-9+deb8u15-Raspbian &amp;lt;&amp;lt;&amp;gt;&amp;gt; www.viltstigen.se
&lt;span class="p"&gt;;;&lt;/span&gt; global options: +cmd
&lt;span class="p"&gt;;;&lt;/span&gt; Got answer:
&lt;span class="p"&gt;;;&lt;/span&gt; -&amp;gt;&amp;gt;HEADER&lt;span class="s"&gt;&amp;lt;&amp;lt;- opco&lt;/span&gt;de: QUERY, status: NOERROR, id: &lt;span class="m"&gt;62736&lt;/span&gt;
&lt;span class="p"&gt;;;&lt;/span&gt; flags: qr rd ra&lt;span class="p"&gt;;&lt;/span&gt; QUERY: &lt;span class="m"&gt;1&lt;/span&gt;, ANSWER: &lt;span class="m"&gt;1&lt;/span&gt;, AUTHORITY: &lt;span class="m"&gt;0&lt;/span&gt;, ADDITIONAL: &lt;span class="m"&gt;0&lt;/span&gt;

&lt;span class="p"&gt;;;&lt;/span&gt; QUESTION SECTION:
&lt;span class="p"&gt;;&lt;/span&gt;www.viltstigen.se.         IN      A

&lt;span class="p"&gt;;;&lt;/span&gt; ANSWER SECTION:
www.viltstigen.se.  &lt;span class="m"&gt;120&lt;/span&gt;     IN      A       &lt;span class="m"&gt;85&lt;/span&gt;.225.114.58

&lt;span class="p"&gt;;;&lt;/span&gt; Query time: &lt;span class="m"&gt;31&lt;/span&gt; msec
&lt;span class="p"&gt;;;&lt;/span&gt; SERVER: &lt;span class="m"&gt;192&lt;/span&gt;.168.1.1#53&lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="m"&gt;192&lt;/span&gt;.168.1.1&lt;span class="o"&gt;)&lt;/span&gt;
&lt;span class="p"&gt;;;&lt;/span&gt; WHEN: Mon Jan &lt;span class="m"&gt;06&lt;/span&gt; &lt;span class="m"&gt;14&lt;/span&gt;:24:52 CET &lt;span class="m"&gt;2020&lt;/span&gt;
&lt;span class="p"&gt;;;&lt;/span&gt; MSG SIZE  rcvd: &lt;span class="m"&gt;51&lt;/span&gt;

$ nslookup www.viltstigen.se
Server:     &lt;span class="m"&gt;192&lt;/span&gt;.168.1.1
Address:    &lt;span class="m"&gt;192&lt;/span&gt;.168.1.1#53

Non-authoritative answer:
Name:    www.viltstigen.se
Address: &lt;span class="m"&gt;85&lt;/span&gt;.225.114.58
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Make a raspberry visible in OSX finder, install &lt;tt class="docutils literal"&gt;netatalk&lt;/tt&gt; ($ sudo apt-get install netatalk).&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="automatic-reboot-after-kernel-crash"&gt;
&lt;h3&gt;Automatic reboot after kernel crash&lt;/h3&gt;
&lt;p&gt;Edit &lt;tt class="docutils literal"&gt;/etc/sysctl.conf` and add ``kernel.panic = 10&lt;/tt&gt;.
This will make a reboot after 10 seconds delay after kernel panic crash. Make the changes take effect and check result
by&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo sysctl --system&lt;span class="se"&gt;\&lt;/span&gt;
$ sudo sysctl -a &lt;span class="p"&gt;|&lt;/span&gt; grep kernel.panic &lt;span class="c1"&gt;# check&lt;/span&gt;
kernel.panic &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;10&lt;/span&gt;
kernel.panic_on_oops &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
kernel.panic_on_rcu_stall &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
kernel.panic_on_warn &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="m"&gt;0&lt;/span&gt;
sysctl: reading key &lt;span class="s2"&gt;&amp;quot;net.ipv6.conf.all.stable_secret&amp;quot;&lt;/span&gt;
sysctl: reading key &lt;span class="s2"&gt;&amp;quot;net.ipv6.conf.default.stable_secret&amp;quot;&lt;/span&gt;
sysctl: reading key &lt;span class="s2"&gt;&amp;quot;net.ipv6.conf.eth0.stable_secret&amp;quot;&lt;/span&gt;
sysctl: reading key &lt;span class="s2"&gt;&amp;quot;net.ipv6.conf.lo.stable_secret&amp;quot;&lt;/span&gt;
sysctl: reading key &lt;span class="s2"&gt;&amp;quot;net.ipv6.conf.wlan0.stable_secret&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="uptimerobot"&gt;
&lt;h3&gt;uptimerobot&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="https://uptimerobot.com/"&gt;Uptimerobot&lt;/a&gt; is a free service that checks the response time for web-sites,
it alerts through email.&lt;/p&gt;
&lt;/div&gt;
&lt;div class="section" id="supervisor"&gt;
&lt;h3&gt;Supervisor&lt;/h3&gt;
&lt;p&gt;&lt;a class="reference external" href="http://supervisord.org/"&gt;Supervisor&lt;/a&gt; is a tool for monitoring daemons. Install and configure supervisor&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt-get install supervisor
$ sudo supervisorctl status
$ sudo supervisorctl reread &lt;span class="c1"&gt;# Restart supervisor to have it grab the changes&lt;/span&gt;
$ sudo supervisorctl update
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div class="section" id="nginx"&gt;
&lt;h3&gt;NGINX&lt;/h3&gt;
&lt;p&gt;Install and start &lt;strong&gt;nginx&lt;/strong&gt;&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo apt update
$ sudo apt install nginx
$ sudo /etc/init.d/nginx start
$ sudo apt-get purge apache2  &lt;span class="c1"&gt;# Remove apache in case it is installed&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;When changing &lt;strong&gt;nginx&lt;/strong&gt; configuration, test and restart.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;$ sudo nginx -t  &lt;span class="c1"&gt;# Test to check if configuration is Ok&lt;/span&gt;
$ sudo systemctl restart nginx  &lt;span class="c1"&gt;# Update and restart&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
</content><category term="Technologies"></category><category term="Raspberry"></category></entry></feed>